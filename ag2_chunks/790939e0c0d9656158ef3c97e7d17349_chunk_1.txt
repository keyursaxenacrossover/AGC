>"</span> -v inst=<span class="hljs-string">"<span class="hljs-variable">$i</span>"</span> <span class="hljs-string">'NR&gt;3 { OFS=";"; print cluster, inst, $0 | "sort -n | uniq" }'</span>; 
<span class="hljs-keyword">done</span>
</code></pre>
</div>
<p><strong>Placeholders:</strong></p>
<ul>
<li>
<code>INSTALLATION_NAMES</code>: Replace with the list of installations, space separated (e.g., <code>rt4601 ax9072 ee0080</code>).</li>
<li>
<code>START_TIMESTAMP</code>: Replace with the start of the time interval, GMT time (e.g., <code>'2024-09-17 06:00:00'</code>).</li>
<li>
<code>END_TIMESTAMP</code>: Replace with the end of the time interval GMT time (e.g., <code>'2024-09-17 22:00:00'</code>).</li>
</ul>
<h4 id="h_01J8M8PJQFTREMTT3F4PN3N879"><strong>Step 2: Query 2 to Get Data for PE/AN Projects (Personalized surveys and Anonymous surveys)</strong></h4>
<p>This query retrieves data for personalized (PE) and anonymous (AN) surveys. It does not include email addresses and applies similar filters as Query 1, but it excludes project types 23 and 38.</p>
<div class="dark bg-gray-950 contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative">
<pre class="overflow-y-auto p-4" dir="ltr"><code class="!whitespace-pre hljs language-bash">clear &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">"cluster;technical_name;project_id;project_title;project_type;last_page;page_title;user_id"</span> &amp;&amp; <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <strong>INSTALLATION_NAMES</strong>; <span class="hljs-keyword">do</span> 
<span class="hljs-built_in">cd</span> /nfs/installations/<span class="hljs-variable">$i</span>/nfs/opst/<span class="hljs-variable">$i</span>.customervoice360.com/htdocs/ 2&gt; /dev/null &amp;&amp; 
(<span class="hljs-built_in">echo</span> <span class="hljs-string">"SET SQL_BIG_SELECTS=1; 
SELECT CONCAT_WS(';', sd.pid, p.ptitle, p.ptyp, sd.last_page, pg.pgtitle, sd.uid) 
FROM sample_data AS sd 
LEFT JOIN project AS p ON (sd.pid = p.pid) 
LEFT JOIN page AS pg ON (sd.last_page = pg.pgid) 
WHERE sd.status = 22 
AND sd.date_of_first_access &gt; '<strong>START_TIMESTAMP</strong>' 
AND sd.date_of_first_access &lt; '<strong>END_TIMESTAMP</strong>' 
AND p.ptyp NOT IN (23, 38);"</span> | efslogin -mo) 2&gt; /dev/null | 
awk -v cluster=<span class="hljs-string">"<span class="hljs-subst">$(hostname | sed 's/servicegw-//g;s/^s/S/g;s/^p/P/g;s/bofa/BofA/g;s/-de-/-DE-/g;s/-us-/-US-/g')</span>"</span> -v inst=<span class="hljs-string">"<span class="hljs-variable">$i</span>"</span> <span class="hljs-string">'NR&gt;3 { OFS=";"; print cluster, inst, $0 | "sort -n | uniq" }'</span>; 
<span class="hljs-keyword">done</span>
</code></pre>
</div>
<p><strong>Placeholders:</strong></p>
<ul>
<li>Same placeholders for <code>INSTALLATION_NAMES</code>, <code>START_TIMESTAMP</code>, and <code>END_TIMESTAMP</code> as in Query 1.</li>
</ul>
<h4 id="h_01J8M8PJQFDS5R1WFG6KA0AHZM"><strong>Step 3: Generate Queries for PE Projects (Query 3 to End)</strong></h4>
<p>For each <code>pid</code> found in Query 2, run additional queries on the installation-specific <code>users_&lt;pid+1&gt;</code> tables to fetch email addresses.</p>
<div class="dark bg-gray-950 contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative">
<div class="flex items-center text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md h-9">Â </div>
<pre class="overflow-y-auto p-4" dir="ltr"><code class="!whitespace-pre hljs language-bash">clear &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">"cluster;technical_name;uid;user_id;u_email"</span> &amp;&amp; <span class="hljs-keyword">for</span> i <span class="