INSERT INTO backup_pid (SELECT pid FROM (SELECT pid, ptitle, group_concat(gname) AS tmp FROM project JOIN drago ON (pid=oid) JOIN groups USING (gid) GROUP BY pid) AS tables JOIN project_org USING (pid) JOIN admin_contract_org ON (id=oid) WHERE tmp="root" AND name="delete_me");</code></pre><ul><li>
<p>Check how many drago entries there are for the projects in the backup table. If there are projects with more than one entry, this means that there are inconsistencies</p>
<p>and there is more than one team that has access to this project. These teams though already might have been deleted (that is the inconsistency!)</p>
</li></ul><pre><code class="language-sql">SELECT COUNT(oid), oid FROM drago WHERE oid IN (SELECT pid FROM backup_pid) GROUP BY oid HAVING COUNT(oid)&gt;1;</code></pre><ul><li><p>View these entries</p></li></ul><pre><code class="language-sql">SELECT * FROM drago WHERE oid IN ([oids from above select]) ORDER BY oid;</code></pre><ul>
<li><p>Copy gid of the output where gid is = 2 (root team) and manually open these teams in the GUI:</p></li>
<li><p>Open any team, change the oid in the URL and check the team. If it can be viewed via the GUI, try to delete it via corresponding button.</p></li>
<li><p>On the database check the drago enties again:</p></li>
</ul><pre><code class="language-sql">SELECT * FROM drago WHERE oid IN ([oids from above select]) ORDER BY oid;</code></pre><ul>
<li><p>You only should see entries for oid=2</p></li>
<li><p>Change access rights to the projects that are assigned to "delete_me"/backup table to a new team that you've created in the GUI ("delete_me")</p></li>
</ul><pre><code class="language-sql">UPDATE drago SET gid=[group Id of team"delete_me"] WHERE gid=2 AND oid IN (SELECT pid FROM backup_pid);</code></pre><ul><li><p>Find out how many projects are assigned to organisation "delete_me" and that have drago entries but for teams that no longer exist</p></li></ul><pre><code class="language-sql">SELECT COUNT(pid) FROM project LEFT JOIN drago ON (pid=oid) WHERE rc IS NULL;</code></pre><ul><li><p>If there are results, add these projects to backup table</p></li></ul><pre><code class="language-sql">DELETE FROM backup_pid;
INSERT INTO backup_pid (SELECT pid FROM project LEFT JOIN drago ON (pid=oid) WHERE rc IS NULL);</code></pre><ul><li><p>Change access rights for these projects to team "delete_me"</p></li></ul><pre><code class="language-sql">INSERT INTO drago SET gid=[group Id of team"delete_me"], oid=[pid from backup table], rc=3;</code></pre><ul><li><p>Find out how many projects are assigned to organisation "delete_me" and that have drago entries but for teams that no longer exist</p></li></ul><pre><code class="language-sql">SELECT COUNT(po.pid) FROM project_org po JOIN drago d ON (po.pid=d.oid) LEFT JOIN groups g ON (g.gid=d.gid) WHERE po.oid=6 AND g.gid IS NULL;</code></pre><ul><li><p>If there are results, add these projects to backup table</p></li></ul><pre><code class="language-sql">INSERT INTO backup_pid(SELECT po.pid FROM project_org po JOIN drago d ON (po.pid=d.oid) LEFT JOIN groups g ON (g.gid=d.gid) WHERE po.oid=342 AND g.gid IS NULL);</code></pre><ul><li><p>Change access rights for these projects to team "delete_me"</p></li></ul><pre><code class="language-sql">UPDATE drago SET gid=[group Id of team"delete_me"] WHERE oid IN (SELECT pid FROM backup_pid);</code></pre><ul>
<li><p>Check organisation and assigned projects via the GUI.</p></li>
<li><p>(Finally) delete organisation (and hopefully) all assigned teams ("delete_me"), users and projects via the GUI.</p></li>
</ul><h4 id="header-23">Delete mails from mail report that do not belong to the client's organisation</h4><ul><li><p>Find out how many mails there are that do not belong to the client's organisation (mails that were not already deleted by deleting the organisation)</p></li></ul><pre><code class="language-sql">SELECT count(mail_id) FROM mail_prot AS p LEFT JOIN project AS pr ON(p.pid=pr.pid) JOIN project_org po ON(pr.pid=po.pid) WHERE (p.id_type &amp; '2') AND po.oid!=[organisation Id of client];
SELECT count(p.mail_id) FROM mail_prot AS p LEFT JOIN mail_text AS mt ON(p.text_hash=mt.hash) LEFT JOIN project AS pr ON(p.pid=pr.pid) JOIN project_org po ON(pr.pid=po.pid) WHERE (p.id_type &amp; '1') AND po.oid!=[organisation Id of client];</code></pre><ul><li><p>To which origanisations do these mail