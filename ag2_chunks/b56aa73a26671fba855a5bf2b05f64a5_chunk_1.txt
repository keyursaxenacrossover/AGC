ac:parameter><ac:rich-text-body><p>Are these still leftovers from a draft ?</p></ac:rich-text-body><p><br></p><p>The website redirects the user to the SSO website to log in. The user logs in with a single username and password.</p><p>The SSO website verifies the user’s identity with an identity provider, such as Active Directory.</p><p>When the user tries to access a different website, the new website checks with the SSO solution. Since the user has been authenticated, it verifies the user’s identity to the new website without requiring an additional login.</p><p><br></p><p><strong>What is federated SSO?</strong></p><p class="auto-cursor-target"><br></p><ac:parameter ac:name="title">Comment -&gt; Robin:</ac:parameter><ac:rich-text-body><p>Good explanation just a few little thoughts:</p>
<ol>
<li>such as Microsoft Active Directory (AD) → This is exactly the use case we don't plan to cover (see also Nicola's mail)</li>
<li>SSO solution = Identity Provider. If you want to market this (our Identity Provider) as the "SSO Solution" that's fine, but just to clarify that it is basically the same</li>
<li>Not sure if mentioning authorization is a good idea, just to make sure clients don't expect to controll access rights from their Identity Providers</li>
</ol></ac:rich-text-body><p><br></p><p>SSO solutions that use federation enable true single sign-on by taking advantage of the organization’s identity provider (IdP), such as Microsoft Active Directory (AD) or Azure Active Directory (Azure AD). The identity provider usually acts as the authentication server and stores the user’s identity and information, such as the username, password, domains the user has access to, and even which activities the user is allowed to do on each site or within each app. (Verifying the activities that the user is allowed to do is called authorization.)</p><p>For true SSO, either the SSO solution is built into the identity provider or the SSO solution uses one or more identity providers to authenticate the user.</p><p>Authentication requests and information are passed using standard, secure protocols, such as SAML or OAuth. The websites requesting authentication have a trust relationship with the SSO solution, and trust relationships exist between the SSO solution and the identity providers. A trust relationship means that one domain trusts another’s information about user identities, devices, and access privileges.</p> (our Identity Provider) as the "SSO Solution" that's fine, but just to clarify that it is basically the same</li>
<li>Not sure if mentioning authorization is a good idea, just to make sure clients don't expect to controll access rights from their Identity Providers</li>
</ol></ac:rich-text-body><p><br></p><p>SSO solutions that use federation enable true single sign-on by taking advantage of the organization’s identity provider (IdP), such as Microsoft Active Directory (AD) or Azure Active Directory (Azure AD). The identity provider usually acts as the authentication server and stores the user’s identity and information, such as the username, password, domains the user has access to, and even which activities the user is allowed to do on each site or within each app. (Verifying the activities that the user is allowed to do is called authorization.)</p><p>For true SSO, either the SSO solution is built into the identity provider or the SSO solution uses one or more identity providers to authenticate the user.</p><p>Authentication requests and information are passed using standard, secure protocols, such as SAML or OAuth. The websites requesting authentication have a trust relationship with the SSO solution, and trust relationships exist between the SSO solution and the identity providers. A trust relationship means that one domain trusts another’s information about user identities, devices, and access privileges.</p>