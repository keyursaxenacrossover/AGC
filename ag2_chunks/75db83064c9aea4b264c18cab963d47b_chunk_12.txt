</h4>
<p class="wysiwyg-text-align-justify">You can use styles for input fields as well. Write your markup as follows:</p>
<pre><code class="language-text">&lt;div class="input input--animated"&gt;
    &lt;input type="text" oninput="this.value ? this.classList.add('input-filled') : this.classList.remove('input-filled');"&gt;
    &lt;label&gt;
        &lt;span class="text-ellipsis"&gt;This is the label&lt;/span&gt;
    &lt;/label&gt;
&lt;/div&gt;</code></pre>
<p class="wysiwyg-text-align-justify">Please pay attention to the order of the elements and their classes. The <em>oninput</em> event handler is required to add or remove the <em>input-filled</em> class according to the inputs value. If your input receives an initial value you have to add the <em>input-filled</em> class manually.</p>
<h4 id="selectboxes" class="wysiwyg-text-align-justify">Selectboxes</h4>
<p class="wysiwyg-text-align-justify">You can use native html selectboxes and they will be styled as close as possible to the original portals selectboxes. As those are generated by JavaScript, an exact replication is not possible.</p>
<pre><code class="language-text">&lt;div class="input input--animated input--select"&gt;
    &lt;select class="input-filled"&gt;
        &lt;option value="1"&gt;Value 1&lt;/option&gt;
        &lt;option value="2"&gt;Value 2&lt;/option&gt;
        &lt;option value="3"&gt;Value 3&lt;/option&gt;
    &lt;/select&gt;
    &lt;label&gt;
        &lt;span&gt;This is the label&lt;/span&gt;
    &lt;/label&gt;
&lt;/div&gt;</code></pre>
<p class="wysiwyg-text-align-justify">As native html selectboxes always have a value selected, the <em>input-filled</em> class is always set on the <em>select</em> element.</p>
<h2 id="opening-a-dialog-in-portals" class="wysiwyg-text-align-justify">Opening a dialog in Portals</h2>
<p class="wysiwyg-text-align-justify">The portalsApi has four methods that give you the ability to open a dialog outside of the scope of your iframe.</p>
<pre><code class="language-text">Questback.portalsApi.trigger.openDialog(text, title)
Questback.portalsApi.trigger.openConfirmDialog(text, title)
Questback.portalsApi.trigger.openIframeDialog(url, title, height, heightUnit)
Questback.portalsApi.trigger.openIframeConfirmDialog(url, title, height, heightUnit)</code></pre>
<h3 id="dialog-buttons" class="wysiwyg-text-align-justify">Dialog buttons</h3>
<p class="wysiwyg-text-align-justify">The methods <em>openDialog</em> and <em>openIframeDialog</em> open a dialog with a single "Close" button. The corresponding methods <em>openConfirmDialog</em> and <em>openIframeConfirmDialog</em> open a dialog with a "Cancel" and an "Ok" button.</p>
<h3 id="text-dialogs" class="wysiwyg-text-align-justify">Text dialogs</h3>
<p class="wysiwyg-text-align-justify">The methods <em>openDialog</em> and <em>openConfirmDialog</em> take a string as first parameter, which is the text shown in the main area of the dialog. The title is optional.</p>
<h3 id="iframe-dialogs" class="wysiwyg-text-align-justify">Iframe dialogs</h3>
<p class="wysiwyg-text-align-justify">The methods <em>openIframeDialog</em> and <em>openIframeConfirmDialog</em> render an iframe in the main area of the dialog with the url given at the first parameter. The <em>title</em>, <em>height</em> and <em>heightUnit</em> are optional. The paramters <em>height</em> and <em>heightUnit</em> define the height of the iframe in the dialog.</p>
<h3 id="simple-call" class="wysiwyg-text-align-justify">Simple call</h3>
<p class="wysiwyg-text-align-justify">The simplest way to open a dialog is by calling one of the dialog methods, give a text/url and not worry about any events:</p>
<pre><code class="language-text">Questback.portalsApi.trigger.openDialog('This is a simple dialog!');</code></pre>
<h3 id="handle-dialog-close" class="wysiwyg-text-align-justify">Handle dialog close</h3>
<p class="wysiwyg-text-align-justify">The dialog can either be closed or canceled/accepted and this event can be handled by implementing Promise methods, like this:</p>
<pre><code class="language-text">Questback.portalsApi.trigger.openDialog('This is a simple dialog!')
    .then(function() {
        console.log("Dialog has been closed");
    });</code></pre>
<p class="wysiwyg-text-align-justify">The <em>confirm</em> dialogs make use of the <em>then</em> and <em>catch</em> methods:</p>
