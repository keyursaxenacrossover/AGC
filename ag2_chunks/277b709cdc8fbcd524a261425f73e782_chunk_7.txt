 installation. Also add this account to the organization of the client. Don't use a Questback email address.<br>Login with this account to see which scale options the client can see and which belong to them.<br>Copy the visible scids (scale IDs).</p><pre><code class="language-sql">SELECT COUNT(*) FROM scala_def WHERE scid NOT IN ([previously copied scids]);
DELETE FROM scala_def WHERE scid NOT IN ([previously copied scids]);

SELECT COUNT(*) FROM scala_value WHERE scid NOT IN ([previously copied scids]);
DELETE FROM scala_value WHERE scid NOT IN ([previously copied scids]);</code></pre><h4 id="header-22">Delete projects that still are left (after having deleted organisations)</h4><p>Create an account in the teams of the client that owns the cloned installation. Also add this account to the organization of the client. Don't use a Questback email address.<br>Login with this account to see which projects the client can see and which belong to them.</p><ul><li><p>Find out Ids of remaining organisatzions (client, default and Questback)</p></li></ul><pre><code class="language-sql">SELECT id, name, description FROM admin_contract_org;</code></pre><ul><li><p>Create backup table of project Ids (will be used for two different cases)</p></li></ul><pre><code class="language-sql">CREATE TABLE backup_pid (pid INT NOT NULL);</code></pre><ul><li><p>Find out projects that are assigned to a deleted organisation (i.e- are assigned to an organisation that no longer exists = e.g. NOT IN (1 (default) ,9 (client organisation), 146 (QB_DE) )</p></li></ul><pre><code class="language-sql">SELECT count(po.pid) FROM project_org po JOIN project p ON (po.pid=p.pid) WHERE oid NOT IN (1,9,146);
SELECT p.pid FROM project_org po JOIN project p ON (po.pid=p.pid) WHERE oid NOT IN (1,9,146);</code></pre><ul><li><p>Add these pids to the backup table</p></li></ul><pre><code class="language-sql">INSERT INTO backup_pid (SELECT p.pid FROM project_org po JOIN project p ON (po.pid=p.pid) WHERE oid NOT IN (1,9,146));</code></pre><ul><li><p>Create a new organisation ("delete_me") and assign all remaining projects of deleted organisations to this one.</p></li></ul><pre><code class="language-sql">UPDATE project_org SET oid=[ID of "delete_me"] WHERE pid IN (SELECT pid FROM backup_pid);</code></pre><ul><li><p>Find out how many projects are assigned to organisation "delete_me" and to which only the root team has access to</p></li></ul><pre><code class="language-sql">SELECT COUNT(pid) FROM (SELECT pid, ptitle, group_concat(gname) AS tmp FROM project JOIN drago ON (pid=oid) JOIN groups USING (gid) GROUP BY pid) AS tables JOIN project_org USING (pid) JOIN admin_contract_org ON (id=oid) WHERE tmp="root" AND name="delete_me";</code></pre><ul><li><p>Double check one example</p></li></ul><pre><code class="language-sql">SELECT pid, ptitle AS Projekttitel, name AS Organisation, tmp AS Team FROM (SELECT pid, ptitle, group_concat(gname) AS tmp FROM project JOIN drago ON (pid=oid) JOIN groups USING (gid) GROUP BY pid) AS tables JOIN project_org USING (pid) JOIN admin_contract_org ON (id=oid) WHERE tmp="root" AND name="delete_me" limit 1;</code></pre><ul><li><p>Delete from backup table</p></li></ul><pre><code class="language-sql">DELETE FROM backup_pid;</code></pre><ul><li><p>Add projects that are assigned to "delete_me" but only root team has access to to backup table</p></li></ul><pre><code class="language-sql">INSERT INTO backup_pid (SELECT pid FROM (SELECT pid, ptitle, group_concat(gname) AS tmp FROM project JOIN drago ON (pid=oid) JOIN groups USING (gid) GROUP BY pid) AS tables JOIN project_org USING (pid) JOIN admin_contract_org ON (id=oid) WHERE tmp="root" AND name="delete_me");</code></pre><ul><li>
<p>Check how many drago entries there are for the projects in the backup table. If there are projects with more than one entry, this means that there are inconsistencies</p>
<p>and there is more than one team that has access to this project. These teams though already might have been deleted (that is the inconsistency!)</p>
</li></ul><pre><code class="language-sql">SELECT COUNT(oid), oid FROM drago WHERE oid IN (SELECT pid FROM backup_pid) GROUP BY oid HAVING COUNT(oid)&gt;1;</code></pre><ul><li><p>View these entries</p></li></ul><pre><code class="language-sql">SELECT * FROM drago WHERE oid IN ([oids from above select]) ORDER BY oid;</code></pre><ul>
<li><p>Copy gid of the output where gid is = 2 (root team) and manually open these teams in the GUI:</p></li>
<li><p>Open any team, change the oid in the URL and check the