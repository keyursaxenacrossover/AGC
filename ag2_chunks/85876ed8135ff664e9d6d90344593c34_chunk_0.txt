<p><b>Original Confluence URL:</b> <a href="https://qbdocs.atlassian.net/wiki/spaces/IAM/pages/1081704458">https://qbdocs.atlassian.net/wiki/spaces/IAM/pages/1081704458</a> - please cross-check the quality of the ZD article with the Confluence counterpart and remove this line before publishing the ZD article</p>

<h2>Table of Contents</h2>
<ul class="toc">
<ul>
<li><a href="#header-1">Noreply</a></li>
<ul>
<li><a href="#header-3">Shared users and API tokens</a></li>
<ul>
<li><a href="#header-5">Okta API User:</a></li>
<li><a href="#header-6">Development API Tokens:</a></li>
</ul>
</ul>
</ul>
</ul><h1 id="header-1">Noreply</h1><p>There is a user in Okta with the email-address “noreply@questback.com”. This user is deactivated and has to stay in exaclty that state.</p><p>A user that exists in Okta is identified by it’s email address in EFS and other applications. The special address “noreply@questback.com” is used for the root user of EFS. The root user of EFS has to login via the bypass route configured in EFS. Therefore this user exists in Okta to avoid accidental login via Okta.</p><p></p><h2 id="header-3">Shared users and API tokens</h2><p>In general shared users should be avoided. We currently have one exception:</p><p></p><h3 id="header-5">Okta API User:</h3><p>There is only one shared user that is not directly tied to a natural person. This is the API Token User. This user is only used for the purpose to manage API tokens for different installations.</p><p>Users that are tied to persons might be removed or changed. This user can stay the same. There should be a very limited number of people having access to that user. It is only used to create new API tokens. These tokens have to be stored somewhere else.</p><p>This user should never be used to fulfill any other tasks than creating and removing API tokens.</p><p>Technically every admin user is able to create API Tokens but per convention only the API Token User is allowed to create tokens for production purposes.</p><p></p><p>In case one shared admin user is a security issue multiple API users could be created. But they should not be tied to the account of a natural person.</p><p></p><h3 id="header-6">Development API Tokens:</h3><p>Tokens that are used for development purposes should be tied to the person using the token so that it will be removed as soon as the person is removed.</p>p><h2 id="header-3">Shared users and API tokens</h2><p>In general shared users should be avoided. We currently have one exception:</p><p></p><h3 id="header-5">Okta API User:</h3><p>There is only one shared user that is not directly tied to a natural person. This is the API Token User. This user is only used for the purpose to manage API tokens for different installations.</p><p>Users that are tied to persons might be removed or changed. This user can stay the same. There should be a very limited number of people having access to that user. It is only used to create new API tokens. These tokens have to be stored somewhere else.</p><p>This user should never be used to fulfill any other tasks than creating and removing API tokens.</p><p>Technically every admin user is able to create API Tokens but per convention only the API Token User is allowed to create tokens for production purposes.</p><p></p><p>In case one shared admin user is a security issue multiple API users could be created. But they should not be tied to the account of a natural person.</p><p></p><h3 id="header-6">Development API Tokens:</h3><p>Tokens that are used for development purposes should be tied to the person using the token so that it will be removed as soon as the person is removed.</p>