<p><b>Original Confluence URL:</b> <a href="https://qbdocs.atlassian.net/wiki/spaces/IAM/pages/1058832584">https://qbdocs.atlassian.net/wiki/spaces/IAM/pages/1058832584</a> - please cross-check the quality of the ZD article with the Confluence counterpart and remove this line before publishing the ZD article</p>

<p><strong>Single sign-on (SSO) enables your users to securely authenticate with multiple applications and websites by logging in only once—with just one set of credentials (username and password). With SSO, the application or website that the user is trying to access relies on a trusted third party to verify that users are who they say they are.</strong></p><p><br></p><p>Without single sign-on, each website maintains its own database of users and their credentials. This is what happens when you try to log in to an app or website:</p><ol>
<li>The website first checks to see whether you’ve already been authenticated. If you have, it gives you access to the site.</li>
<li>If you haven’t, it asks you to log in and it checks your username and password against the information in its user database.</li>
<li>After login, the site passes authentication verification data as you move through the site to verify that you are authenticated each time you go to a new page.</li>
</ol><p>The authentication verification data is usually passed as either cookies with session data or as tokens, which don’t track the session and are faster to process.</p><p><br></p><p><strong>How does SSO work?</strong></p><p class="auto-cursor-target"><br></p><ac:parameter ac:name="title">Comment -&gt; Robin:</ac:parameter><ac:rich-text-body><p>In this explanation SSO and federated authentication are being mixed up.<br>Possible correction:</p>
<p><br></p>
<ol>
<li>The website first checks to see whether you’ve already been authenticated by the <strong>Identity Provider</strong>, in which case it gives you access to the site.</li>
<li>If you haven’t, it sends you to the <strong>Identity Provider</strong> to log in.</li>
<li>You enter the single username/password for the <strong>Identity Provider</strong>
</li>
<li><s>The SSO solution requests authentication from the identity provider or authentication system that your company uses. It verifies your identity and notifies the SSO solution.</s></li>
<li>The <strong>Identity Provider</strong> passes authentication data to the website and returns you to that site.</li>
<li>After login, the site <strong>stores</strong> authentication verification data <strong>for</strong> you as you move through the site to verify that you are authenticated each time you go to a new page.</li>
<li>
<strong>NEW</strong>: If you visit another website all previous steps apply but you don't have to provide credentials again since the Identity Provider still remembers your session and you are directly sent to the website </li>
</ol></ac:rich-text-body><p><br></p><p>Authentication with SSO relies on a trust relationship between domains (websites). With single sign-on, this is what happens when you try to log in to an app or website:</p><ol>
<li>The website first checks to see whether you’ve already been authenticated by the SSO solution, in which case it gives you access to the site.</li>
<li>If you haven’t, it sends you to the SSO solution to log in.</li>
<li>You enter the single username/password that you use for corporate access.</li>
<li>The SSO solution requests authentication from the identity provider or authentication system that your company uses. It verifies your identity and notifies the SSO solution.</li>
<li>The SSO solution passes authentication data to the website and returns you to that site.</li>
<li>After login, the site passes authentication verification data with you as you move through the site to verify that you are authenticated each time you go to a new page.</li>
</ol><p>In SSO, authentication verification data takes the form of tokens.</p><ac:parameter ac:name="title">Comment -&gt; Robin:</ac:parameter><ac:rich-text-body><p>Are these still leftovers from a draft ?</p></ac:rich-text-body><p><br></p><p>The website redirects the user to the SSO website to log in. The user logs in with a single username and password.</p><p>The SSO website verifies the user’s identity with an identity provider, such as Active Directory.</p><p>When the user tries to access a different website, the new website checks with the SSO solution. Since the user has been authenticated, it verifies the user’s identity to the new website without requiring an additional login.</p><p><br></p><p><strong>What is federated SSO?</strong></p><p class="auto-cursor-target"><br></p><ac:parameter ac:name="title">Comment -&gt; Robin:</ac:parameter><ac:rich-text-body><p>Good explanation just a few little thoughts:</p>
<ol>
<li>such as Microsoft Active Directory (AD) → This is exactly the use case we don't plan to cover (see also Nicola's mail)</li>
<li>SSO solution = Identity Provider. If you want to market this (our Identity Provider) as the "SSO Solution" that's fine, but just to clarify that it is basically the same</li>
<li>Not sure if mentioning authorization is a good idea, just to make sure clients don