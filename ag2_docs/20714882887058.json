{
    "id": 20714882887058,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20714882887058.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20714882887058-Pull-data-from-installations",
    "author_id": 369584192734,
    "comments_disabled": false,
    "draft": false,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20714530860562,
    "created_at": "2024-08-12T17:02:57Z",
    "updated_at": "2024-09-02T10:21:25Z",
    "name": "Pull data from installations",
    "title": "Pull data from installations",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-09-02T10:21:23Z",
    "user_segment_id": 360000084973,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<h1 id=\"h_01J6S416E1TAN9DE416C0VW54N\">Overview</h1>\n<p>Pulling data from multiple installations can be a complex task, especially when dealing with large systems. This guide explains how to traverse all installations and extract data into a flat file. It includes detailed instructions for listing users, extracting module information, and executing specific scripts to gather information on installations and their usage.</p>\n<h1 id=\"header-1\">How to pull data from installations</h1>\n<p>how to taverse all installations and get a flat file:</p>\n<pre><code class=\"language-text\">clear &amp;&amp; for i in {{LISTOFINSTALLATIONS}};do cd /nfs/installations/$i/nfs/opst/$i.customervoice360.com/htdocs/ &amp;&amp; echo \"SET SQL_BIG_SELECTS=1;SELECT CONCAT_WS(';',{{COLUMN_1}},{{COLUMN_2}}...,{{COLUMN_n}}) FROM {{QUERY_AFTER_FROM}}\" | efslogin -mo | awk -v cluster=\"$(hostname | sed 's/servicegw-//g;s/^s/S/g;s/^p/P/g;s/bofa/BofA/g;s/-de-/-DE-/g;s/-us-/-US-/g')\" -v inst=\"$i\" 'NR&gt;3{OFS=\";\"; print cluster, inst, $0 | \"sort -n | uniq\"}';done</code></pre>\n<p> </p>\n<p>Queries used by Freddie’s data wrapper:</p>\n<p>Only some queries are fixed in the code. Mose of them are build on the fly like this:</p>\n<pre><code class=\"language-text\">$this-&gt;createDbTableInstances(array('Efs_Users','Efs_Admin_User_Contract','Efs_Admin_Contract_Org', 'Efs_Login_Att', 'Efs_User_Att'));\n\n$query = $this-&gt;db-&gt;select()\n                      -&gt;from($this-&gt;Efs_Users-&gt;info('name'),array('u_email'))\n                      -&gt;joinUsing($this-&gt;Efs_Admin_User_Contract-&gt;info('name'),'uid',array())\n                      -&gt;join($this-&gt;Efs_Admin_Contract_Org-&gt;info('name'),$this-&gt;Efs_Admin_User_Contract-&gt;info('name').'.org = '.$this-&gt;Efs_Admin_Contract_Org-&gt;info('name').'.id',array('name'))\n                      -&gt;join($this-&gt;Efs_Login_Att-&gt;info('name'), $this-&gt;Efs_Users-&gt;info('name').'.uid = '.$this-&gt;Efs_Login_Att-&gt;info('name').'.uid', array('FROM_UNIXTIME(lastlogin) as lastlogin'))\n                      -&gt;join($this-&gt;Efs_User_Att-&gt;info('name'), $this-&gt;Efs_User_Att-&gt;info('name').'.uid = '.$this-&gt;Efs_Login_Att-&gt;info('name').'.uid',array('created'));</code></pre>\n<p>Would be easier to let them run on the last installation in the Corbox and fetch the queries from the query log.</p>\n<h2 id=\"header-3\">List of Users</h2>\n<pre><code class=\"language-text\">SELECT \n                uid,\n                u_email as email,\n                FROM_UNIXTIME(login_expire) as account_login_expire,\n                FROM_UNIXTIME(lastlogin) as last_login,\n                (SELECT CONCAT(gname, ' (', gtitle, ')') FROM groups WHERE gid = prim_gid) as primary_team,\n                lang,\n                admin_contract_org.name as org,\n                contract_start as org_contract_start,\n                contract_end as org_contract_end,\n                num_logins,\n                GROUP_CONCAT(CONCAT(gname, ' (', gtitle, ')')) as teams,\n                user_att.created as created\n            FROM users\n            JOIN login_att USING(uid)\n            JOIN user_grp USING(uid)\n            JOIN admin_user_contract USING(uid)\n            JOIN user_att USING(uid)\n            JOIN admin_contract_org ON admin_contract_org.id = admin_user_contract.org\n            JOIN groups USING(gid)\n            GROUP BY uid;</code></pre>\n<p> </p>\n<h3 id=\"header-5\">available standard modules</h3>\n<pre><code class=\"language-text\">Exteriorviewdevices/Config/DESCRIPTION:Description:     Gathers Browser and OS information for logins in Downloadplattform, Orgprocessor and Feedbackcenter\nFeedbackcenter/Config/DESCRIPTION:Description:  Gathers numbers about used feedback centers\nFieldperiod/Config/DESCRIPTION:Description:     Gets numbers of projects by fieldperiods\nFieldreport/Config/DESCRIPTION:Description:     Gathers statistical data about fieldreports\nForums/Config/DESCRIPTION:Description:  Gathers general usage data about forums\nHrreporting/Config/DESCRIPTION:Description:     Gathers data about HR-Reporting in use\nIncentive/Config/DESCRIPTION:Description:       Gathers general data about incentive functionality\nInstallation/Config/DESCRIPTION:Description:    Gathers general data of the EFS installation itself (hostnames, gp_id, shared_installation flag)\nLanguages/Config/DESCRIPTION:Description:       Gathers data about languages in projects\nLists/Config/DESCRIPTION:Description:   Gathers statistical data about lists used in surveys\nLoftsurveys/Config/DESCRIPTION:Description:     Gathers basic data about multi source feedback surveys\nLoftwaves/Config/DESCRIPTION:Description:       Gets numbers of projects by wave counts\nLoginareas/Config/DESCRIPTION:Description:      Gathers numbers of logins to EFS backend areas\nLogistics/Config/DESCRIPTION:Description:       Gathers general statistic data about logistics module used in employee projects\nMails/Config/DESCRIPTION:Description:   Gathers general data about mail sending usage\nMasterdataallocation/Config/DESCRIPTION:Description:    Gathers statistical data about masterdata allocation in panel projects\nMasterdata/Config/DESCRIPTION:Description:      Gathers basic data about masterdata in panel\nMySight/Config/DESCRIPTION:Description: Gets Number of MySight Projects from EFS\nOrganisations/Config/DESCRIPTION:Description:   Gathers either number of organizations or all organizations with name, number of members etc... (configurable in jobs.ini)\nOrgstructure/Config/DESCRIPTION:Description:    Gathers basic informations about org structures in ES projects\nPages/Config/DESCRIPTION:Description:   Gathers generall data about pages in EFS projects\nPanelbonuses/Config/DESCRIPTION:Description:    Gathers statistical data about panel bonuses\nPanelgroups/Config/DESCRIPTION:Description:     Gathers statistical data about panel groups\nPanelists/Config/DESCRIPTION:Description:       Gatherd general data about panelists and their status\nPanelquotas/Config/DESCRIPTION:Description:     Gathers statistical data about panel quotas\nPanelstatus/Config/DESCRIPTION:Description:     Gathers basic data about panel status used\nParticipations/Config/DESCRIPTION:Description:  Gathers generall statistic data about user participations in surveys\nPersonaldata/Config/DESCRIPTION:Description:    Gathers numbers of mail addresses, names, first names and phone numbers\nPlausichecks/Config/DESCRIPTION:Description:    Gathers statistical data about plausichecks on the installation\nPortalActionBoard/Config/DESCRIPTION:Description:       Gathers information about the action-board module in efs-portals,\nPrintversion/Config/DESCRIPTION:Description:    Gathers count of created print versions\nProducts/Config/DESCRIPTION:Description:        Gathers information about which products are in use (panel, employee, loft .... etc)\nProjectchecks/Config/DESCRIPTION:Description:   Gathers number about projectchecks done in survey\nProjectexports/Config/DESCRIPTION:Description:  Gathers statistical data about exports done in EFS projects\nProjectlayout/Config/DESCRIPTION:Description:   Gathers data aboutproject layouts\nProjectlibraries/Config/DESCRIPTION:Description:        gathers statisticat data about project specific libraries\nProjects/Config/DESCRIPTION:Description:        Gathers general numbers about projects\nProjecttypes/Config/DESCRIPTION:Description:    Gathers numbers of projects in project list grouped by project type\nQuestions/Config/DESCRIPTION:Description:       Gathers statistical data about questions on EFS installation\nQuestiontypes/Config/DESCRIPTION:Description:   Gathers general data about question type usage\nQuickpolls/Config/DESCRIPTION:Description:      Gathers general usage data about quickpolls\nQuotations/Config/DESCRIPTION:Description:      Gathers statistical data about project quotations\nReporting/Config/DESCRIPTION:Description:       Gathers statistical data about the old reporting\nReportingplus/Config/DESCRIPTION:Description:   Gathers general data about reporting+ usage\nSinc/Config/DESCRIPTION:Description:    Gathers data about Sinc module in EFS\nSms/Config/DESCRIPTION:Description:     Gathers statistical data about SMS module in EFS\nTeams/Config/DESCRIPTION:Description:   Gathers data about teams on installation\nTrigger/Config/DESCRIPTION:Description: Gathers statistical data about triggers on the Efs installation\nUseragents/Config/DESCRIPTION:Description:      Gathers all useragents used and deciphers them into OS, Browser and Browserversion\nUsers/Config/DESCRIPTION:Description:   Gathers data about EFS Admin users\nWebsites/Config/DESCRIPTION:Description:        Gathers data about panel websites\nWildcards/Config/DESCRIPTION:Description:       Gather statistical data about wildcards used in EFS</code></pre>\n<p> </p>\n<h3 id=\"header-6\">Result of the UsagePM job on the last installation in the Corbox:</h3>\n<ul>\n<li class=\"media-group\"><a href=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21108016359826\">efs_usage_data_2023-09-01.csv</a></li>\n</ul>\n<h3 id=\"header-7\">Script to extract data from insts in the Corbox toidentify unsused installations</h3>\n<pre><code class=\"language-text\">#!/bin/bash\n# This script checks all installations in Frankfurt Data center to find zombies\n\nfor i in `find /nfs/opst* -maxdepth 1 -mindepth 1 -type d|grep -v \"temp\"| grep -v unipark| grep -v empty | grep -v \"_\"` # | head`\ndo\n #echo $i\n cd $i\n\nactive_orgas=$(echo 'select count(*) from admin_contract_org where name not like \"QB_%\"  and name not like \"GP_%\" and name != \"\\(default\\)\" and contract_end &gt; now();' | efslogin 2&gt;/dev/null | grep -v \"(^ERROR)|(cat)|(Could)\"| tail -1)\ninactive_orgas=$(echo 'select count(*) from admin_contract_org where name not like \"QB_%\" and name not like \"GP_%\" and name != \"\\(default\\)\" and contract_end &lt; now();' | efslogin efslogin 2&gt;/dev/null | grep -v \"(^ERROR)|(cat)|(Could)\"| tail -1)\n\norga_info=$(echo 'select GROUP_CONCAT(name,\",\",description,\",\",contract_start,\",\",contract_end,\",\",left(customer_no_globis,15) SEPARATOR \";\") from admin_contract_org  where name not like \"QB_%\" AND name not like \"GP_%\" and name != \"\\(default\\)\"' | efslogin 2&gt;/dev/null | grep -v \"(^ERROR)|(cat)|(Could)\" | tail -1 )\n\nsurvey_requests=$(echo 'select count(*) from ospe_time_log where DATE_ADD(log_date, INTERVAL 6 WEEK) &gt; NOW();' | efslogin 2&gt;/dev/null | grep -v \"(^ERROR)|(cat)|(Could)\"| tail -1)\n\npanel_hits=$( echo 'select count(*) from  panel_sitelog_hits where DATE_ADD(dt_when, INTERVAL 6 WEEK) &gt; NOW() AND uid!=0;' | efslogin 2&gt;/dev/null | grep -v \"(^ERROR)|(cat)|(Could)\"| tail -1)\n\nlogins_by_customers=$(echo 'SELECT count(*) from users,user_att,login_att,admin_user_contract,admin_contract_org WHERE admin_user_contract.uid=users.uid AND admin_user_contract.org = admin_contract_org.id AND users.uid=user_att.uid AND users.uid=login_att.uid AND u_email not like \"%servicelayer%\" AND DATE_ADD(from_unixtime(lastlogin), INTERVAL 6 WEEK) &gt; NOW() AND name!=\"(default)\" AND name not like \"QB_%\";' | efslogin 2&gt;/dev/null | grep -v \"(^ERROR)|(cat)|(Could)\"| tail -1)\n\nlogins_by_QB=$(echo 'SELECT count(*) AS \"QB_Logins\" from users,user_att,login_att,admin_user_contract,admin_contract_org WHERE admin_user_contract.uid=users.uid AND admin_user_contract.org = admin_contract_org.id AND users.uid=user_att.uid AND users.uid=login_att.uid AND u_email not like \"%servicelayer%\" AND DATE_ADD(from_unixtime(lastlogin), INTERVAL 6 WEEK) &gt; NOW() AND name like \"QB_%\";' | efslogin 2&gt;/dev/null | grep -v \"(^ERROR)|(cat)|(Could)\"| tail -1)\n\n\n    echo \"$i usage: $survey_requests $panel_hits $logins_by_customers $logins_by_QB $active_orgas $inactive_orgas $orga_info\"\ndone</code></pre>\n<p> </p>\n<h3 id=\"header-8\">script to get info about number of panelists grouped by status in the Corbox</h3>\n<pre><code class=\"language-text\">#!/bin/bash\n#\ninputfile=$1\n\n\n   while read instpath; do\n\n      if [ -d $instpath ]; then\n         cd \"$instpath\"\n         gpname=$(grep -o \"^\\$__gp_name[^;]*;\" conf/config.inc.php3 | awk '{print $NF}' )\n         echo 'select sum(if(pstatus=1,1,0)) AS status_1, sum(if(pstatus=2,1,0)) AS status2, sum(if(pstatus=3,1,0)) AS status_3, sum(if(pstatus=4,1,0)) AS status_4, sum(if(pstatus=5,1,0)) AS status_5, sum(if(pstatus=6,1,0)) AS status_6, sum(if(pstatus=7,1,0)) AS status_7, sum(if(pstatus=8,1,0)) AS status_8, sum(if(pstatus=9,1,0)) AS status_9, sum(if(pstatus=10,1,0)) AS status10, sum(if(pstatus=11,1,0)) AS status_11, sum(if(pstatus=12,1,0)) AS status_12, sum(if(pstatus=13,1,0)) AS status13, sum(if(pstatus=14,1,0)) AS status_14, sum(if(pstatus=15,1,0)) AS status_15, sum(if(pstatus=16,1,0)) AS status_16, sum(if(pstatus=32,1,0)) AS status_32 from panel_att;' | efslogin | grep -v \"Running\\|Connect\\|u_email\" | sed \"s/^/$gpname/g\" | sed \"s/\\t/;/g\"\n\n         else\n            echo \"$instpath not found.\"\n         fi\n\n   done &lt; \"$inputfile\"</code></pre>\n<p>in the inputfile the installationpaths ending with htdocs have to be listed</p>\n<p> </p>\n<p>All Queries from the PM job:</p>\n<ul>\n<li><a href=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21108190015890\">wrapperQueriesPMJob</a></li>\n</ul>\n<p class=\"media-group\"> </p>\n<p> </p>",
    "user_segment_ids": [
        360000084973
    ]
}