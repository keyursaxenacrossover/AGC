{
    "id": 20229615093778,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20229615093778.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20229615093778-How-to-Service-Layer",
    "author_id": 377518684840,
    "comments_disabled": true,
    "draft": false,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20234774909202,
    "created_at": "2024-07-18T11:51:00Z",
    "updated_at": "2024-08-28T09:54:55Z",
    "name": "How-to: Service Layer",
    "title": "How-to: Service Layer",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-07-31T10:00:03Z",
    "user_segment_id": null,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<p><span style=\"font-size: 2.1em;\">Overview</span></p>\n<article>\n<p class=\"wysiwyg-text-align-justify\">This article provides a comprehensive guide on how to use and configure the EFS Service Layer, which is the API that allows access to key EFS functionalities from external applications.</p>\n<h1 id=\"h_01HGKSMPRSYYE7GMM7DZ0VCKXK\" class=\"wysiwyg-text-align-justify\">Information</h1>\n<p class=\"wysiwyg-text-align-justify\">The EFS Service Layer enables developers to create applications outside of EFS that can interact with EFS data and functionalities. The services can be called from outside via HTTPS, using SOAP or REST specifications. Various data exchange formats can be used (e.g. JSON or XML). This guide covers configuration, access modes, format handlers, authentication methods, and provides examples of how to use the service.</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li><a href=\"#configuring_services\">Configuring the Services</a></li>\n<li><a href=\"#Access-Modes\">Access Modes</a></li>\n<li><a href=\"#Format-Handler\">Format Handlers</a></li>\n<li><a href=\"#Authentication\">Authentication</a></li>\n<li><a href=\"#Calling-the-Service-Description\">Calling the Service Description</a></li>\n<li><a href=\"#Important-Parameters\">Important Parameters</a></li>\n<li><a href=\"#Examples\">Examples</a></li>\n<li><a href=\"#h_01J3G9JCTAT5RWABHA4JAN0WWZ\">Exploring Available Services</a></li>\n<li><a href=\"#Filtering-results-with-conditions\">Filtering Results with Conditions</a></li>\n</ul>\n<h2 id=\"configuring_services\" class=\"wysiwyg-text-align-justify\">Configuring the Services</h2>\n<p class=\"wysiwyg-text-align-justify\" data-renderer-start-pos=\"745\">A dedicated configuration menu allows viewing and configuring of the services, which are available on your <em data-renderer-mark=\"true\">EFS</em> installation. The menu is in <strong data-renderer-mark=\"true\">Options</strong> → <strong data-renderer-mark=\"true\">Service-Layer</strong>. The <strong data-renderer-mark=\"true\">Service-Layer </strong>menu is only available if our support team has activated the usage of services for your installation. To view and access the menu, you need either read rights for the ACL right <em data-renderer-mark=\"true\">webservice_conf</em> or membership in the root team.</p>\n<p class=\"wysiwyg-text-align-justify\" data-renderer-start-pos=\"1151\">The following steps are necessary to use a specific service:</p>\n<ul class=\"ak-ul wysiwyg-text-align-justify\" data-indent-level=\"1\">\n<li>\n<p data-renderer-start-pos=\"1215\">Our support team has to add the service.</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"1259\">The service must be activated. If necessary, the button <strong data-renderer-mark=\"true\">Activate all services </strong>allows the activation of all available services at once.</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"1393\">The staff account used to access the service is allocated to a specific staff team. This staff team must have the necessary access rights to the service. Access rights to individual services can be assigned on the tab <strong data-renderer-mark=\"true\">Access Groups</strong>.</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"1629\">Furthermore, many services include a check for object rights. To use <em>survey.questionnaire.createPage</em> or <em>survey.questionnaire.deletePage</em>, for example, the staff team needs to write rights for the target project.</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"1842\">All calls are logged on the <strong data-renderer-mark=\"true\">Access log </strong>tab. The entries can be searched by IP address, name of the admin account used, service name and date.</p>\n</li>\n</ul>\n<h2 id=\"Access-Modes\" class=\"wysiwyg-text-align-justify\" data-renderer-start-pos=\"1987\">Access Modes</h2>\n<p class=\"wysiwyg-text-align-justify\" data-renderer-start-pos=\"2001\">The service layer offers two access modes:</p>\n<ul class=\"ak-ul wysiwyg-text-align-justify\" data-indent-level=\"1\">\n<li>\n<p data-renderer-start-pos=\"2047\"><strong data-renderer-mark=\"true\">Description</strong>: In this modus, the service layer will describe itself. In SOAP format, for example, a WSDL will be generated and delivered. This modus allows clients to find out which services are provided and which parameters they have</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"2284\"><strong data-renderer-mark=\"true\">Transaction</strong>: In this modus, a service method is called and executed. How you address these modes depends on the format handler used.</p>\n</li>\n</ul>\n<h2 id=\"Format-Handler\" class=\"wysiwyg-text-align-justify\" data-renderer-start-pos=\"2420\">Format Handler</h2>\n<p class=\"wysiwyg-text-align-justify\" data-renderer-start-pos=\"2436\">When requesting access to the EFS Service Layer, all format handlers can be used as needed. So one of your applications could access EFS using SOAP, while another using REST, through the same token or user authentication.<br>Currently, the service layer supports HTTPS and four handlers:</p>\n<ul class=\"ak-ul\" data-indent-level=\"1\">\n<li>\n<p data-renderer-start-pos=\"2723\"><strong data-renderer-mark=\"true\">SOAP</strong>: Provides API access using the SOAP protocol.</p>\n<ul class=\"ak-ul\" data-indent-level=\"2\">\n<li>\n<p data-renderer-start-pos=\"2777\">To activate the handler, use the URL parameter \"handler\" with the value \"soap\".</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"2860\">The name of the invoked method is handed over in the URL parameter \"method\". The method name is structured as follows: MODULENAME_ACTORNAME_METHODNAME (separator: underscore, ”_”).</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"3044\">If the URL parameter \"wsdl\" is set in the request, the description mode will be triggered and a WSDL will be generated. Otherwise, the transaction mode will be used. Since the WSDL also specifies a Stylesheet, the file is also viewable in a browser.</p>\n</li>\n</ul>\n</li>\n<li>\n<p data-renderer-start-pos=\"3299\"><strong data-renderer-mark=\"true\">REST</strong>: Provides REST API access, see the <a class=\"cc-1rn59kg\" title=\"/wiki/spaces/DOC/pages/1853128733\" href=\"https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20472841653138-List-of-EFS-Service-Layer-API-services\" data-testid=\"link-with-safety\" data-renderer-mark=\"true\">full list of services for REST examples</a>.</p>\n<ul class=\"ak-ul\" data-indent-level=\"2\">\n<li>\n<p data-renderer-start-pos=\"3383\">To activate the handler, just create the REST request, as specified in the documentation or RAML file, e.g. <code class=\"code cc-1o5d2cw\" data-renderer-mark=\"true\">GET https://efs-installation.com/service/survey/surveys/?token=TOKEN</code>.<br>The content type of all requests containing a HTTP body must be <code class=\"code cc-1o5d2cw\" data-renderer-mark=\"true\">application/json</code> and therefore all request bodies must be JSON encoded.</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"3700\">To get the RAML description file, triggering the description mode, create a request to /service/ using the URL parameters \"handler=rest&amp;raml=1\", e.g. <code class=\"code cc-1o5d2cw\" data-renderer-mark=\"true\">GET https://efs-installation.com/service/?handler=rest&amp;raml=1&amp;token=TOKEN</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p data-renderer-start-pos=\"3929\"><strong data-renderer-mark=\"true\">PHP-serialized</strong>: Here, the input and output parameters are transferred as serialized PHP arrays. This is the recommended approach for PHP clients.</p>\n<ul class=\"ak-ul\" data-indent-level=\"2\">\n<li>\n<p data-renderer-start-pos=\"4078\">To activate the handler, use the URL parameter \"handler\" with the value \"php\".</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"4160\">The name of the invoked method is handed over in the URL parameter \"method\". The method name is structured as follows: MODULENAME.ACTORNAME.METHODNAME (separator: periods).</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"4336\">If the request is an HTTP GET request, the description mode will be triggered. Otherwise, the transaction mode will be used.</p>\n</li>\n</ul>\n</li>\n<li>\n<p data-renderer-start-pos=\"4466\"><strong data-renderer-mark=\"true\">JSON</strong>: Data are transferred in JSON encoding. See the example below.</p>\n<ul class=\"ak-ul\" data-indent-level=\"2\">\n<li>\n<p data-renderer-start-pos=\"4537\">To activate the handler, use the URL parameter \"handler\" with the value \"json\".</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"4620\">The name of the invoked method is handed over in the URL parameter \"method\". The method name is structured as follows: MODULENAME.ACTORNAME.METHODNAME (separator: periods)</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"4795\">If the request is an HTTP GET request, the description mode will be triggered. Otherwise, the transaction mode will be used.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Authentication\" data-renderer-start-pos=\"4925\">Authentication</h2>\n<p class=\"wysiwyg-text-align-justify\" data-renderer-start-pos=\"4941\">Two authentication methods can be used:</p>\n<ul class=\"ak-ul\" data-indent-level=\"1\">\n<li class=\"wysiwyg-text-align-justify\">\n<p data-renderer-start-pos=\"4984\"><strong data-renderer-mark=\"true\">Tokens</strong>: (<em data-renderer-mark=\"true\">recommended</em>) Our support can provide tokens for you and your staff members. These tokens can be used for authentication when invoking a service (parameter name: \"token\").</p>\n</li>\n<li>\n<p class=\"wysiwyg-text-align-justify\" data-renderer-start-pos=\"5167\"><strong data-renderer-mark=\"true\">Account name and password for the EFS admin area</strong>: Uses basic authentication of the HTTP protocol. The passwords are the same as for the administration area of EFS. We recommend to use tokens.</p>\n</li>\n</ul>\n<h2 id=\"Calling-the-Service-Description\" data-renderer-start-pos=\"5362\">Calling the Service Description</h2>\n<p data-renderer-start-pos=\"5395\">Requesting the WSDL for SOAP access:<br><a class=\"cc-1rn59kg\" title=\"https://your-efs-installation.com/service/?handler=soap&amp;wsdl=1\" href=\"https://your-efs-installation.com/service/?handler=soap&amp;wsdl=1\" data-testid=\"link-with-safety\" data-renderer-mark=\"true\">https://your-efs-installation.com/service/?handler=soap&amp;wsdl=1</a></p>\n<p data-renderer-start-pos=\"5496\">Requesting the RAML file for REST access:<br><a class=\"cc-1rn59kg\" title=\"https://your-efs-installation.com/service/?handler=rest&amp;raml=1\" href=\"https://your-efs-installation.com/service/?handler=rest&amp;raml=1\" data-testid=\"link-with-safety\" data-renderer-mark=\"true\">https://your-efs-installation.com/service/?handler=rest&amp;raml=1</a></p>\n<p data-renderer-start-pos=\"5602\">Self-description of the PHP handler:<br><a class=\"cc-1rn59kg\" title=\"https://your-efs-installation.com/service/?handler=php\" href=\"https://your-efs-installation.com/service/?handler=php\" data-testid=\"link-with-safety\" data-renderer-mark=\"true\">https://your-efs-installation.com/service/?handler=php</a></p>\n<p data-renderer-start-pos=\"5602\">When accessing the service layer, you will find a dynamic list of services activated on your installation and which are accessible by the user. <a class=\"cc-1rn59kg\" style=\"background-color: #ffffff;\" title=\"/wiki/spaces/DOC/pages/1853128733\" href=\"https://qbdocs.atlassian.net/wiki/spaces/DOC/pages/1853128733\" data-testid=\"link-with-safety\" data-renderer-mark=\"true\">A list of all available services can be found on this page</a>.</p>\n<p> </p>\n<h2 id=\"Important-Parameters\" data-renderer-start-pos=\"5903\">Important Parameters</h2>\n<p data-renderer-start-pos=\"5925\">These are the most important parameters:</p>\n<ul class=\"ak-ul\" data-indent-level=\"1\">\n<li>\n<p data-renderer-start-pos=\"5969\">handler: name of the format handler (soap, rest, php, json).</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"6033\">method: name of the called method for PHP and JSON handler.</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"6096\">token: contains the token for authentication.</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"6145\">wsdl: generates the WSDL description, if the SOAP handler is used.</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"6215\">raml: generates the RAML description, if REST handler is used.</p>\n</li>\n</ul>\n<h2 id=\"Examples\" data-renderer-start-pos=\"6281\">Examples</h2>\n<p data-renderer-start-pos=\"6291\">Below are two examples. The first example illustrates JSON call with http authentication and the second illustrates SOAP call with http authentication.</p>\n<p>SOAP XML request and response</p>\n<p><strong>Request</strong></p>\n<pre><code class=\"language-text\">POST https://efs-installation.com/service/?handler=soap&amp;token=TOKEN HTTP/1.1\nAccept-Encoding: gzip,deflate\nContent-Type: text/xml;charset=UTF-8\nSOAPAction: \"https://efs-installation.com/service/?handler=soap&amp;token=TOKEN#survey_surveys_getList\"\nContent-Length: 241\nHost: efs-installation.com\nConnection: Keep-Alive\n\n&lt;soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://www.globalpark.com/efs/services\"&gt;\n   &lt;soapenv:Header/&gt;\n   &lt;soapenv:Body&gt;\n      &lt;ser:survey_surveys_getList/&gt;\n   &lt;/soapenv:Body&gt;\n&lt;/soapenv:Envelope&gt;</code></pre>\n<p><strong>Response</strong></p>\n<pre><code class=\"language-xml\">&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns1=\"http://www.globalpark.com/efs/services\"&gt;\n   &lt;SOAP-ENV:Body&gt;\n      &lt;ns1:survey_surveys_getListResponse&gt;\n         &lt;survey_surveys_getListResponseValue&gt;\n            &lt;success&gt;true&lt;/success&gt;\n            &lt;errors/&gt;\n            &lt;warnings/&gt;\n            &lt;messages/&gt;\n            &lt;return&gt;\n               &lt;survey&gt;\n                  &lt;id&gt;1234&lt;/id&gt;\n                  &lt;title&gt;Example Survey&lt;/title&gt;\n                  &lt;description/&gt;\n                  &lt;marked&gt;false&lt;/marked&gt;\n                  &lt;author&gt;Example User&lt;/author&gt;\n                  &lt;staff/&gt;\n                  &lt;comment/&gt;\n                  &lt;isMarked&gt;false&lt;/isMarked&gt;\n                  &lt;url&gt;https://efs-installation.com/uc/main/12345/&lt;/url&gt;\n                  &lt;createTime&gt;2019-10-18T13:44:43+00:00&lt;/createTime&gt;\n                  &lt;fieldTime&gt;\n                     &lt;startTime&gt;2019-10-18T00:00:00+00:00&lt;/startTime&gt;\n                     &lt;endTime&gt;2019-11-01T00:00:00+00:00&lt;/endTime&gt;\n                  &lt;/fieldTime&gt;\n                  &lt;status&gt;GENERATED&lt;/status&gt;\n                  &lt;type&gt;PERSONALIZED&lt;/type&gt;\n                  &lt;numberOfParameters&gt;0&lt;/numberOfParameters&gt;\n                  &lt;bonusPoints&gt;\n                     &lt;label/&gt;\n                     &lt;value&gt;0&lt;/value&gt;\n                  &lt;/bonusPoints&gt;\n               &lt;/survey&gt;\n            &lt;/return&gt;\n         &lt;/survey_surveys_getListResponseValue&gt;\n      &lt;/ns1:survey_surveys_getListResponse&gt;\n   &lt;/SOAP-ENV:Body&gt;\n&lt;/SOAP-ENV:Envelope&gt;</code></pre>\n<p> </p>\n<p>Example: JSON call with http authentication using PHP and Zend Framework</p>\n<pre><code class=\"language-php\">&lt;?php\n/* Example requires Zend Framework */\nrequire_once('Zend/Loader/Autoloader.php');\nfunction serviceLayerCall($method, $params=null)\n{\n    $autoloader = Zend_Loader_Autoloader::getInstance();\n    $url=\"http://EFSINSTALLATIONURL/service/index.php?handler=json&amp;token=TOKEN\";\n    $client = new Zend_Http_Client();\n    $client-&gt;setUri($url);\n    $client-&gt;setConfig(array('timeout' =&gt; 30));\n    $client-&gt;setMethod(Zend_Http_Client::POST);\n    /* not using TOKEN? Here is basic auth: */\n    //$user = \"USER\";\n    //$passwd = \"PASSWORD\";\n    //$client-&gt;setAuth($user, $passwd);\n    \n    $client-&gt;setRawData(json_encode(array('method' =&gt; $method, 'jsonrpc' =&gt; '2.0', 'id' =&gt; 1, 'params' =&gt; $params)));\n    $request = $client-&gt;request();\n    //print \"&lt;pre&gt;\";\n    //var_dump($request-&gt;getBody());\n    $return = json_decode($request-&gt;getBody());\n    $return=$return-&gt;result;\n    return $return-&gt;return;\n}\n\n/* 1. Step - Get projects\n */\nprint \"&lt;h3&gt;1. step - get projects&lt;/h3&gt;\";\n$projects=serviceLayerCall(\"survey.surveys.getList\");\n\nforeach($projects as $project)\n{\n    print \"- \".$project-&gt;title.\" (\".$project-&gt;id.\")&lt;br&gt;\";\n}\n\n\n//2. Step - Get Structure for Pid 1112\n, first a helper function:\nfunction sub($pages, &amp;$myquestions)\n{\n    foreach($pages as $page)\n    {\n        if(count($page-&gt;subPages) &gt; 0)\n            $this-&gt;sub($page-&gt;subPages, $myquestions);\n        foreach($page-&gt;questions as $question)\n        {\n            $myquestions[]=$question;\n        }\n    }\n    return $myquestions;\n}\n\n$relevantVars=array();\nprint \"&lt;hr&gt;&lt;h3&gt;2. step - get structure for Pid 1112&lt;/h3&gt;\";\n$project=serviceLayerCall(\"survey.surveys.getQuestionnaireStructure\", array(\"surveyId\" =&gt; 1112));\n$questions=sub($project, $myquestions);\nforeach($questions as $question)\n{\n    if($question-&gt;questiontext) {\n        print $question-&gt;questiontext . \"&lt;br&gt;\";\n        foreach ($question-&gt;variables as $variable) {\n            if ($variable-&gt;type == \"char\" || $variable-&gt;type == \"text\") {\n                print \"Text-Var: \".$variable-&gt;varname . \"&lt;br&gt;\";\n                //add to $relevantVars for export\n                $relevantVars[] = $variable-&gt;varname;\n            }\n        }\n    }\n}\n\n/* 3 - Relevant vars for export */\nprint \"&lt;hr&gt;&lt;h3&gt;3. Collected variables for export:&lt;/h3&gt;\";\nvar_dump($relevantVars);\nprint \"&lt;/pre&gt;\";\n\n/* 4 - Get CSV export */\nprint \"&lt;hr&gt;&lt;h3&gt;4. Get results for specific vars&lt;/h3&gt;\";\n$exportData=serviceLayerCall(\"survey.results.getRawdataCSV\", array(\"surveyId\" =&gt; 1112, \"exportTypes\" =&gt; array(\"QUESTIONNAIRE\"), \"includeVariables\" =&gt; $relevantVars));\nprint base64_decode($exportData);</code></pre>\n<p>The full <a href=\"https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20370447448210-List-of-EFS-Service-Layer-API-services\" target=\"_blank\" rel=\"noopener noreferrer\">EFS Service-Layer service</a> overview provides example REST requests and responses.</p>\n<h2 id=\"h_01J3GAYK26W65JPF4FHW4WVV3F\">Exploring available SOAP and REST services using 3rd party tools</h2>\n<p data-renderer-start-pos=\"11258\">You can easily get familiar with our EFS Service-Layer, by using 3rd party REST or SOAP clients. Two of such tools are <a class=\"cc-1rn59kg\" title=\"https://www.soapui.org\" href=\"https://www.soapui.org/\" data-testid=\"link-with-safety\" data-renderer-mark=\"true\">SoapUI</a> for SOAP requests and <a class=\"cc-1rn59kg\" title=\"https://www.postman.com/downloads/\" href=\"https://www.postman.com/downloads/\" data-testid=\"link-with-safety\" data-renderer-mark=\"true\">Postman</a> for REST.</p>\n<h3 id=\"h_01J3G9JCTANWTK8FGVQBBRH5MK\">Configuring SoapUI</h3>\n<p>You need to have the full URL to the WSDL description, as described above, and the token. Basic authentication is also possible, the client will ask you to provide login information automatically. In this example we use https://my-efs/service/?handler=soap&amp;wsdl=1&amp;token=1234567890.</p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21014837296274\"></p>\n<p>SoapUI will read the description and create example SOAP requests for all available services. Double-clicking on a request will open the following window, click on the green execute button to submit the request and a response will be shown.<img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21014837303314\"></p>\n<p> </p>\n<p><span style=\"font-size: 1.2em; font-weight: 600; white-space-collapse: preserve;\">Configuring Postman</span></p>\n<div class=\"cc-1m56rbn\" data-testid=\"expand-container-expand-expand-title-62\" data-node-type=\"expand\" data-title=\"Configuring Postman\" data-expanded=\"false\">\n<div class=\"cc-nl2klk\">\n<div class=\"expand-content-wrapper\">\n<div class=\"cc-1jke4yk\">\n<p>You can create single requests by clicking on “New” and selecting “Request”, selecting the correct method and pasting the link to the service. When using POST requests, you need to specify the Body, selecting “raw” and “JSON” in the respective settings. All other tabs can be left to default values.</p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21014884173330\"><br>To import all available EFS Service-Layer REST services, you will need to download the RAML file (https://my-efs/service/?handler=rest&amp;raml=1&amp;token=1234567890) and import it as a collection in Postman.</p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21014884167442\"><br>The collections tab will now have a list of all available services on the EFS installation.</p>\n<p>Please note, that some complex EFS rest services cause Postman to reject the RAML file. In that case we recommend creating the requests individually.</p>\n<div class=\"ak-editor-panel cc-tqp4ke\" data-panel-type=\"info\">\n<div class=\"ak-editor-panel__icon\"> </div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<h2 id=\"Filtering-results-with-conditions\" data-renderer-start-pos=\"12721\">Filtering results with conditions</h2>\n<p data-renderer-start-pos=\"12756\">Requests with “ByCriteria” in their name have the possibility to filter results by condition. These conditions can be simple one to one comparisons and complex requests joined by an operator. All examples are based on the <em data-renderer-mark=\"true\">POST /panel/circles/listByCondition </em>REST service, which returns a list of Portals groups (circles).</p>\n<h4 id=\"Comparison\" data-renderer-start-pos=\"13079\">Comparison</h4>\n<p data-renderer-start-pos=\"13091\">This is the easiest request, it matches the items based on a single property of the item, in this case the circleType. Please note, that <code class=\"code cc-1o5d2cw\" data-renderer-mark=\"true\">condition</code> must be replaced with the string <code class=\"code cc-1o5d2cw\" data-renderer-mark=\"true\">logicalCondition</code> for some services.</p>\n<pre><code class=\"language-text\">{\n    \"condition\": {\n        \"comparison\": {\n            \"variable\": \"circleType\",\n            \"operator\": \"EQUAL\",\n            \"value\": \"COMPANY_MANAGED\"\n        }\n    }\n}</code></pre>\n<p data-renderer-start-pos=\"13091\">Possible <code class=\"code cc-1o5d2cw\" data-renderer-mark=\"true\">operator</code> values for comparison: <code class=\"code cc-1o5d2cw\" data-renderer-mark=\"true\">EQUAL, UNEQUAL, LESS_EQUAL, LESS_THAN, GREATER_EQUAL, GREATER_THAN, CONTAINS</code>. Greater/smaller operators should only be applied to numeric values.</p>\n<h4 id=\"InComparison\" data-renderer-start-pos=\"13670\">InComparison</h4>\n<p data-renderer-start-pos=\"13684\">This request allows comparison of a property to a list of acceptable values.</p>\n<div class=\"code-block  cc-15qwbrk\">\n<div class=\"code-block  cc-15qwbrk\" style=\"margin: 0.75rem 0px 0px; padding: 0px; tab-size: 4; background-color: var(--ds-surface-raised, #f4f5f7); clear: both; max-width: 100%; display: block; position: relative; border-radius: var(--ds-border-radius-100, 3px); overflow-wrap: normal; color: #172b4d; font-family: -apple-system, BlinkMacSystemFont, ' Segoe UI' , Roboto, Oxygen, Ubuntu, ' Fira Sans' , ' Droid Sans' , ' Helvetica Neue' , sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre-wrap; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;\"><span class=\"prismjs cc-1slwsjo\" style=\"display: flex; line-height: 1.5rem; overflow-x: auto; white-space: pre; direction: ltr; font-size: 0.875rem; font-family: SFMono-Medium, ' SF Mono' , ' Segoe UI Mono' , ' Roboto Mono' , ' Ubuntu Mono' , Menlo, Consolas, Courier, monospace; font-weight: normal; background-color: var(--ds--code--bg-color,var(--ds-background-neutral, #f4f5f7)); color: var(--ds-text, #172b4d); border-style: none; border-radius: var(--ds-border-radius, 3px); background-image: linear-gradient(    to right,    var(--ds-background-neutral, #F4F5F7) var(--ds-space-300, 24px),    transparent var(--ds-space-300, 24px)  ),linear-gradient(    to right,    var(--ds-surface-raised, transparent) var(--ds-space-300, 24px),    transparent var(--ds-space-300, 24px)  ),linear-gradient(    to left,    var(--ds-background-neutral, #F4F5F7) var(--ds-space-100, 8px),    transparent var(--ds-space-100, 8px)  ),linear-gradient(    to left,    var(--ds-surface-raised, transparent) var(--ds-space-100, 8px),    transparent var(--ds-space-100, 8px)  ),linear-gradient(    to left,    var(--ds-shadow-overflow-spread, rgba(9, 30, 66, 0.13)) 0,    var(--ds-UNSAFE-transparent, rgba(99, 114, 130, 0))  var(--ds-space-100, 8px)  ),linear-gradient(    to left,    var(--ds-shadow-overflow-perimeter, transparent) 0,    var(--ds-UNSAFE-transparent, transparent)  var(--ds-space-100, 8px)  ),linear-gradient(    to right,    var(--ds-shadow-overflow-spread, rgba(9, 30, 66, 0.13)) 0,    var(--ds-UNSAFE-transparent, rgba(99, 114, 130, 0))  var(--ds-space-100, 8px)  ),linear-gradient(    to right,    var(--ds-shadow-overflow-perimeter, transparent) 0,    var(--ds-UNSAFE-transparent, transparent)  var(--ds-space-100, 8px)  ); background-attachment: local, local, local, local, scroll, scroll, scroll, scroll; background-position: 0px 0px, 0px 0px, 100% 0px, 100% 0px, 100% 0px, 100% 0px, 0px 0px, 0px 0px;\" data-code-lang=\"\" data-ds--code--code-block=\"\" data-testid=\"renderer-code-block\"><code class=\"language-\" style=\"color-scheme: unset; forced-color-adjust: unset; mask: unset; math-depth: unset; position: unset; position-anchor: unset; appearance: unset; color: unset; font: unset; font-palette: unset; font-synthesis: unset; inset-area: unset; text-orientation: unset; text-rendering: unset; text-spacing-trim: unset; -webkit-font-smoothing: unset; -webkit-locale: unset; -webkit-text-orientation: unset; -webkit-writing-mode: unset; writing-mode: unset; zoom: unset; accent-color: unset; place-content: unset; place-items: unset; place-self: unset; alignment-baseline: unset; anchor-name: unset; animation-composition: unset; animation: unset; app-region: unset; aspect-ratio: unset; backdrop-filter: unset; backface-visibility: unset; background-attachment: unset; background-blend-mode: unset; background-clip: unset; background-color: unset; background-image: linear-gradient(to right, var(--ds--code--line-number-bg-color,var(--ds-background-neutral, #EBECF0)), var(--ds--code--line-number-bg-color,var(--ds-background-neutral, #EBECF0))    calc(2ch + 16px), transparent calc(2ch + 16px), transparent); background-origin: unset; background-position: unset; background-repeat: unset; background-size: unset; baseline-shift: unset; baseline-source: unset; block-size: unset; border-block: unset; border: unset; border-radius: unset; border-collapse: unset; border-end-end-radius: unset; border-end-start-radius: unset; border-inline: unset; border-start-end-radius: unset; border-start-start-radius: unset; inset: unset; box-shadow: unset; box-sizing: unset; break-after: unset; break-before: unset; break-inside: unset; buffered-rendering: unset; caption-side: unset; caret-color: unset; clear: unset; clip: unset; clip-path: unset; clip-rule: unset; color-interpolation: unset; color-interpolation-filters: unset; color-rendering: unset; columns: unset; column-fill: unset; gap: unset; column-rule: unset; column-span: unset; contain: unset; contain-intrinsic-block-size: unset; contain-intrinsic-size: unset; contain-intrinsic-inline-size: unset; container: unset; content: unset; content-visibility: unset; counter-increment: unset; counter-reset: unset; counter-set: unset; cursor: unset; cx: unset; cy: unset; d: unset; display: unset; dominant-baseline: unset; empty-cells: unset; field-sizing: unset; fill: unset; fill-opacity: unset; fill-rule: unset; filter: unset; flex: 1 0 auto; flex-flow: unset; float: unset; flood-color: unset; flood-opacity: unset; grid: unset; grid-area: unset; height: unset; hyphenate-character: unset; hyphenate-limit-chars: unset; hyphens: unset; image-orientation: unset; image-rendering: unset; initial-letter: unset; inline-size: unset; inset-block: unset; inset-inline: unset; isolation: unset; letter-spacing: unset; lighting-color: unset; line-break: unset; list-style: unset; margin-block: unset; margin: unset; margin-inline: unset; marker: unset; mask-type: unset; math-shift: unset; math-style: unset; max-block-size: unset; max-height: unset; max-inline-size: unset; max-width: unset; min-block-size: unset; min-height: unset; min-inline-size: unset; min-width: unset; mix-blend-mode: unset; object-fit: unset; object-position: unset; object-view-box: unset; offset: unset; opacity: unset; order: unset; orphans: unset; outline: unset; outline-offset: unset; overflow-anchor: unset; overflow-clip-margin: unset; overflow-wrap: unset; overflow: unset; overlay: unset; overscroll-behavior-block: unset; overscroll-behavior-inline: unset; overscroll-behavior: unset; padding-block: unset; padding-inline: unset; page: unset; page-orientation: unset; paint-order: unset; perspective: unset; perspective-origin: unset; pointer-events: unset; position-try: unset; position-visibility: unset; quotes: unset; r: unset; resize: unset; rotate: unset; ruby-position: unset; rx: unset; ry: unset; scale: unset; scroll-behavior: unset; scroll-margin-block: unset; scroll-margin: unset; scroll-margin-inline: unset; scroll-padding-block: unset; scroll-padding: unset; scroll-padding-inline: unset; scroll-snap-align: unset; scroll-snap-stop: unset; scroll-snap-type: unset; scroll-timeline: unset; scrollbar-color: unset; scrollbar-gutter: unset; scrollbar-width: unset; shape-image-threshold: unset; shape-margin: unset; shape-outside: unset; shape-rendering: unset; size: unset; speak: unset; stop-color: unset; stop-opacity: unset; stroke: unset; stroke-dasharray: unset; stroke-dashoffset: unset; stroke-linecap: unset; stroke-linejoin: unset; stroke-miterlimit: unset; stroke-opacity: unset; stroke-width: unset; tab-size: 4; table-layout: unset; text-align: unset; text-align-last: unset; text-anchor: unset; text-combine-upright: unset; text-decoration: unset; text-decoration-skip-ink: unset; text-emphasis: unset; text-emphasis-position: unset; text-indent: unset; text-overflow: unset; text-shadow: unset; text-size-adjust: unset; text-transform: unset; text-underline-offset: unset; text-underline-position: unset; white-space: pre; timeline-scope: unset; touch-action: unset; transform: unset; transform-box: unset; transform-origin: unset; transform-style: unset; transition: unset; translate: unset; user-select: unset; vector-effect: unset; vertical-align: unset; view-timeline: unset; view-transition-class: unset; view-transition-name: unset; visibility: unset; border-spacing: unset; -webkit-box-align: unset; -webkit-box-decoration-break: unset; -webkit-box-direction: unset; -webkit-box-flex: 1; -webkit-box-ordinal-group: unset; -webkit-box-orient: unset; -webkit-box-pack: unset; -webkit-box-reflect: unset; -webkit-line-break: unset; -webkit-line-clamp: unset; -webkit-mask-box-image: unset; -webkit-print-color-adjust: unset; -webkit-rtl-ordering: unset; -webkit-ruby-position: unset; -webkit-tap-highlight-color: unset; -webkit-text-combine: unset; -webkit-text-decorations-in-effect: unset; -webkit-text-fill-color: unset; -webkit-text-security: unset; -webkit-text-stroke: unset; -webkit-user-drag: unset; widows: unset; width: unset; will-change: unset; word-break: break-word; word-spacing: unset; x: unset; y: unset; z-index: unset; padding: 8px 8px !important 8px 0px;\"><span class=\"\" style=\"display: flex; margin-right: -8px; padding-right: 8px !important;\" data-testid=\"renderer-code-block-line-1\" data-ds--code--row=\"\"><span class=\"\">{\n</span></span><span class=\"\" style=\"display: flex; margin-right: -8px; padding-right: 8px !important;\" data-testid=\"renderer-code-block-line-2\" data-ds--code--row=\"\">    \"condition\": {\n</span><span class=\"\" style=\"display: flex; margin-right: -8px; padding-right: 8px !important;\" data-testid=\"renderer-code-block-line-3\" data-ds--code--row=\"\">        \"inComparison\": {\n</span><span class=\"\" style=\"display: flex; margin-right: -8px; padding-right: 8px !important;\" data-testid=\"renderer-code-block-line-4\" data-ds--code--row=\"\">            \"variable\": \"circleType\",\n</span><span class=\"\" style=\"display: flex; margin-right: -8px; padding-right: 8px !important;\" data-testid=\"renderer-code-block-line-5\" data-ds--code--row=\"\">            \"operator\": \"IN\",\n</span><span class=\"\" style=\"display: flex; margin-right: -8px; padding-right: 8px !important;\" data-testid=\"renderer-code-block-line-6\" data-ds--code--row=\"\">            \"value\": [\n</span><span class=\"\" style=\"display: flex; margin-right: -8px; padding-right: 8px !important;\" data-testid=\"renderer-code-block-line-7\" data-ds--code--row=\"\">                \"COMPANY_MANAGED\",\n</span><span class=\"\" style=\"display: flex; margin-right: -8px; padding-right: 8px !important;\" data-testid=\"renderer-code-block-line-8\" data-ds--code--row=\"\">                \"USER_MANAGED\"\n</span><span class=\"\" style=\"display: flex; margin-right: -8px; padding-right: 8px !important;\" data-testid=\"renderer-code-block-line-9\" data-ds--code--row=\"\">            ]\n</span><span class=\"\" style=\"display: flex; margin-right: -8px; padding-right: 8px !important;\" data-testid=\"renderer-code-block-line-10\" data-ds--code--row=\"\">        }\n</span><span class=\"\" style=\"display: flex; margin-right: -8px; padding-right: 8px !important;\" data-testid=\"renderer-code-block-line-11\" data-ds--code--row=\"\">    }\n</span><span class=\"\" style=\"display: flex; margin-right: -8px; padding-right: 8px !important;\" data-testid=\"renderer-code-block-line-12\" data-ds--code--row=\"\">}</span></code></span></div>\n</div>\n<p data-renderer-start-pos=\"13999\">The only acceptable <code class=\"code cc-1o5d2cw\" data-renderer-mark=\"true\">operator</code> value for inComparison is <code class=\"code cc-1o5d2cw\" data-renderer-mark=\"true\">IN</code>.</p>\n<h4 id=\"Join\" data-renderer-start-pos=\"14059\">Join</h4>\n<p data-renderer-start-pos=\"14065\">This type allows more complex requests, allowing two conditions (comparison, inComparison or join) to be joined by an <code class=\"code cc-1o5d2cw\" data-renderer-mark=\"true\">AND</code> or <code class=\"code cc-1o5d2cw\" data-renderer-mark=\"true\">OR</code> operator.</p>\n<pre><code class=\"language-text\">{\n    \"condition\": {\n        \"join\": {\n            \"operator\": \"AND\",\n            \"condition1\": {\n                \"comparison\": {\n                    \"variable\": \"title\",\n                    \"operator\": \"CONTAINS\",\n                    \"value\": \"Test\"\n                }\n            },\n            \"condition2\": {\n                \"inComparison\": {\n                    \"variable\": \"circleType\",\n                    \"operator\": \"IN\",\n                    \"value\": [\n                        \"COMPANY_MANAGED\",\n                        \"USER_MANAGED\"\n                    ]\n                }\n            }\n        }\n    }\n}</code></pre>\n<p data-renderer-start-pos=\"14820\">The <code class=\"code cc-1o5d2cw\" data-renderer-mark=\"true\">operator</code> for joining two or more conditions can be <code class=\"code cc-1o5d2cw\" data-renderer-mark=\"true\">AND, OR</code>, the individual conditions are similarly structured as their single instances. Since <em data-renderer-mark=\"true\">join</em> is an acceptable condition, more complex structures are allowed:</p>\n<div class=\"code-block  cc-15qwbrk\">\n<div class=\"cc-9n57oc\">\n<div class=\"cc-v2tmjh\">\n<pre><code class=\"language-json\">{\n    \"condition\": {\n        \"join\": {\n            \"operator\": \"AND\",\n            \"condition1\": {\n                \"join\": {\n                    \"operator\": \"AND\",\n                    \"condition1\": {\n                        \"comparison\": {\n                            \"variable\": \"title\",\n                            \"operator\": \"CONTAINS\",\n                            \"value\": \"Test\"\n                        }\n                    },\n                    \"condition2\": {\n                        \"inComparison\": {\n                            \"variable\": \"circleProcessStatus\",\n                            \"operator\": \"IN\",\n                            \"value\": [\n                                \"IDLE\",\"IN_PROGRESS\"\n                            ]\n                        }\n                    }\n                }\n            },\n            \"condition2\": {\n                \"inComparison\": {\n                    \"variable\": \"circleType\",\n                    \"operator\": \"IN\",\n                    \"value\": [\n                        \"COMPANY_MANAGED\",\n                        \"USER_MANAGED\"\n                    ]\n                }\n            }\n        }\n    }\n}</code></pre>\n</div>\n</div>\n</div>\n<h1 id=\"h_01J3GAYK26YSW1WMWHR5P3CMZQ\">FAQ</h1>\n<h3 id=\"faq_1\">What is the EFS Service Layer?</h3>\n<p>The EFS Service Layer is an API that allows access to key EFS functionalities from external applications. It enables developers to create applications outside of EFS that can interact with EFS data and functionalities.</p>\n<h3 id=\"faq_2\">How can I authenticate requests to the EFS Service Layer?</h3>\n<p>You can authenticate using either tokens (recommended) provided by the support team, or by using your EFS admin area account name and password with basic HTTP authentication.</p>\n<h3 id=\"faq_3\">What format handlers are supported by the EFS Service Layer?</h3>\n<p>The EFS Service Layer supports four format handlers: SOAP, REST, PHP-serialized, and JSON.</p>\n<p> </p>\n</article>",
    "user_segment_ids": []
}