{
    "id": 20591442103314,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20591442103314.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20591442103314-EFS-Architecture-and-Building-Blocks-Technical-Overview",
    "author_id": 369584192734,
    "comments_disabled": false,
    "draft": false,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20234751255186,
    "created_at": "2024-08-06T09:46:32Z",
    "updated_at": "2024-08-06T11:11:19Z",
    "name": "EFS Architecture and Building Blocks - Technical Overview",
    "title": "EFS Architecture and Building Blocks - Technical Overview",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-08-06T11:08:24Z",
    "user_segment_id": 360000084973,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<h1 id=\"h_01J4KM3D5SR1YHTJX36705TZ0J\">Overview</h1>\n<p>This article provides an in-depth overview of the EFS Architecture, detailing its customer-facing, backend, and storage components. It covers the high-level architecture, general concepts, and specifics of various frontends, APIs, backend systems, storage solutions, message bus/queue systems, and additional services.</p>\n<p><strong><em>The source code URL's are not yet accessible to Central Support, however, once the migration is done, the article will be adjusted.</em></strong></p>\n<h2 id=\"h_01J4KKM83PQ8V1JN9268A7R6XM\">Table of Contents</h2>\n<ul>\n<li><a href=\"#header-1\">High level architecture</a></li>\n<li><a href=\"#h_01J4KN37DSTPDWYFH9V8CZ609W\">Deployment view</a></li>\n<li><a href=\"#h_01J4KNNZ15QBEKZPGY94V72XZ1\">EFS System Context</a></li>\n<li>\n<a href=\"#header-3\">General concepts</a>\n<ul>\n<li>\n<a href=\"#header-4\">Customer facing components</a>\n<ul>\n<li><a href=\"#header-6\">EFS Admin frontend</a></li>\n<li><a href=\"#header-7\">EFS Survey frontend</a></li>\n<li><a href=\"#header-8\">EFS Websites frontend</a></li>\n<li><a href=\"#header-9\">EFS Portals frontend</a></li>\n<li><a href=\"#header-10\">EFS Reporting+ frontend</a></li>\n<li><a href=\"#header-11\">EFS external API</a></li>\n</ul>\n</li>\n<li>\n<a href=\"#header-13\">Backend components</a>\n<ul>\n<li><a href=\"#header-15\">EFS internal API</a></li>\n<li><a href=\"#header-16\">EFS Backend</a></li>\n<li><a href=\"#header-17\">EFS Jobs</a></li>\n</ul>\n</li>\n<li>\n<a href=\"#header-19\">Storage</a>\n<ul>\n<li><a href=\"#header-21\">MariaDB</a></li>\n<li><a href=\"#header-22\">Exasol</a></li>\n<li><a href=\"#header-23\">Memcached</a></li>\n<li><a href=\"#header-24\">Elasticsearch</a></li>\n<li><a href=\"#header-25\">NFS</a></li>\n</ul>\n</li>\n<li>\n<a href=\"#header-27\">Message Bus / Queues</a>\n<ul>\n<li><a href=\"#header-29\">Kafka</a></li>\n<li><a href=\"#header-30\">RabbitMQ</a></li>\n</ul>\n</li>\n<li>\n<a href=\"#header-32\">Services</a>\n<ul>\n<li><a href=\"#header-34\">Aspose PPTX-Service</a></li>\n<li><a href=\"#header-35\">Tableau</a></li>\n<li><a href=\"#header-36\">Okta</a></li>\n<li><a href=\"#header-37\">Hurricane MTA</a></li>\n<li><a href=\"#header-38\">Tyntec SMS</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#h_01J4KMC3H0YXQ01BAXG1XMQ84A\">Continuous Tasks</a></li>\n</ul>\n<h1 id=\"header-1\">High level architecture</h1>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20591458751250\" alt=\"EFS high level architecture - Seite 1.png\"></p>\n<h1 id=\"h_01J4KN37DSTPDWYFH9V8CZ609W\">Deployment view</h1>\n<p>The core EFS deployment consists of several components that have interfaces to external systems or infrastructural components.</p>\n<p>A core EFS instance can also be seen in the following repository: <a href=\"https://bitbucket.org/qbengineering/efs-chart/src/master/\">https://bitbucket.org/qbengineering/efs-chart/src/master/</a> <strong>(this will be replaced with Github URL once the import is finished)</strong></p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20593336125202\" alt=\"System Scope and Context - Deployment LvL 2(1).png\"></p>\n<ul>\n<li>\n<p data-renderer-start-pos=\"454\"><strong data-renderer-mark=\"true\">nginx:</strong> The webserver container that serves static files and forwards traffic via fast CGI to the PHP container.</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"567\"><strong data-renderer-mark=\"true\">PHP FPM:</strong> A process pool container that serves PHP related requests and contains the main business logic.</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"673\"><strong data-renderer-mark=\"true\">maria db:</strong> The database that stores the data of EFS. It is part of an RDS instance.</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"757\"><strong data-renderer-mark=\"true\">memcached: </strong>An in-memory cache that caches data of the PHP FPM container.</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"831\"><strong data-renderer-mark=\"true\">Elasticsearch: </strong>A search database that is used by different modules to sync data and search for that data.</p>\n</li>\n</ul>\n<h1 id=\"h_01J4KNNZ15QBEKZPGY94V72XZ1\">EFS System Context</h1>\n<p>EFS is <strong>built in PHP</strong> and uses a monolithic architecture approach using PHP modules for modularization and cutting the complexity in scopes units. More details can be found in <a href=\"https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20591344055826\" target=\"_blank\" rel=\"noopener noreferrer\">Third Party Software/Technologies Used in EFS</a>.</p>\n<ul>\n<li>The Software is installation based, meaning that the software is deployed once per tenant in most use cases. The software itself has multi-tenant capabilities that might be used in subcontractor cases or special cases.</li>\n<li>An installation based deployment with a sharing on tenants gives the flexibility to change each installation individually with “deep” customizations without affecting any other tenant. </li>\n</ul>\n<p>There is no sharp dividing line between EFS and the systems around it. The following shows a picture of the system context and the surrounding components:</p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20593679622674\" alt=\"System Scope and Context.png\"></p>\n<h1 id=\"header-3\">General concepts</h1>\n<ul>\n<li>\n<p>Single tenancy SaaS application.</p>\n</li>\n<li>\n<p>At least all components within the k8s cluster are deployed per customer.</p>\n</li>\n<li>\n<p>All other services are shared to some extend.</p>\n<ul>\n<li>\n<p>A MariaDB instance may be reserved to one high-volume/high-concurrency customer.</p>\n</li>\n<li>\n<p>A NFS instance may be reserved to one high-volume customer.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"header-4\">Customer facing components</h2>\n<h3 id=\"header-6\">EFS Admin frontend</h3>\n<ul>\n<li>\n<p>UI for all administrative functions within EFS i.e. survey and questionnaire definition, participants management and so on.</p>\n</li>\n<li>\n<p>Separate login for EFS administrators either handled directly by EFS Backend or delegated to Okta for SSO intergration.</p>\n</li>\n<li>\n<p>Used technologies:</p>\n<ul>\n<li>\n<p>HTML markup rendered by PHP on EFS Backend</p>\n</li>\n<li>\n<p>Various JS frameworks: Dojo, JQuery, CanJS, mootools ….</p>\n</li>\n<li>\n<p>Static CSS created via Sass at build-time</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Hosted on EFS Backend pods</p>\n</li>\n<li>\n<p>Used APIs on EFS Backend:</p>\n<ul>\n<li>\n<p>HTTP queries</p>\n</li>\n<li>\n<p>Internal Rest-API</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Sourcecode</p>\n<ul>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/questback_client_efs_survey/src/master/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/questback_client_efs_survey/src/master/</a></p>\n</li>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/modules/survey/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/modules/survey/</a></p>\n</li>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/modules/efs/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/modules/efs/</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-7\">EFS Survey frontend</h3>\n<ul>\n<li>\n<p>UI for survey projects, displays questionnaires and handles response collection</p>\n</li>\n<li>\n<p>Separate login for participants of personalized survey projects handled by EFS Backend</p>\n<ul>\n<li>\n<p>Type of login is configurable per project i.e. email/password, login-code</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Used technologies:</p>\n<ul>\n<li>\n<p>HTML markup rendered by PHP on EFS Backend</p>\n<ul>\n<li>\n<p>Using Smarty-templates modifiable by customer within EFS Admin area</p>\n</li>\n</ul>\n</li>\n<li>\n<p>JS frameworks: Dojo enriched by homebrew widgets, JQuery</p>\n</li>\n<li>\n<p>CSS dynamically created via Sass at modification time, customer can modify CSS within EFS Admin area</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Hosted on EFS Backend pods and NFS</p>\n</li>\n<li>\n<p>Used APIs on EFS Backend:</p>\n<ul>\n<li>\n<p>HTTP queries</p>\n</li>\n<li>\n<p>Internal Rest-API</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Sourcecode</p>\n<ul>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/modules/survey/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/modules/survey/</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-8\">EFS Websites frontend</h3>\n<ul>\n<li>\n<p>UI for Panelwebsites, Orgprocessor, MSF-Feedbackcenter, Filemanager, Translator, Reporting …</p>\n</li>\n<li>\n<p>Separate login for resp. user-groups handled by EFS Backend</p>\n<ul>\n<li>\n<p>Type of login is configurable per Website type i.e. email/password, login-code</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Used technologies:</p>\n<ul>\n<li>\n<p>HTML markup rendered by PHP on EFS Backend</p>\n<ul>\n<li>\n<p>Partially using Smarty-templates modifiable by customer within EFS Admin area</p>\n</li>\n</ul>\n</li>\n<li>\n<p>JS frameworks: Dojo enriched by homebrew widgets, JQuery</p>\n</li>\n<li>\n<p>CSS created via Sass at modification time, customer partially can modify CSS within EFS Admin area</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Hosted on EFS Backend pods and NFS</p>\n</li>\n<li>\n<p>Used APIs on EFS Backend:</p>\n<ul>\n<li>\n<p>HTTP queries</p>\n</li>\n<li>\n<p>Internal Rest-API</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Sourcecode</p>\n<ul>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/questback_client_efs_panel/src/master/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/questback_client_efs_panel/src/master/</a></p>\n</li>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/modules/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/modules/</a></p>\n</li>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/panelwebsite/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/panelwebsite/</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-9\">EFS Portals frontend</h3>\n<ul>\n<li>\n<p>UI for Portals single-page application</p>\n<ul>\n<li>\n<p>Separate login for portalists either handled directly by EFS Backend or delegated to Okta for SSO intergration.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Used technologies:</p>\n<ul>\n<li>\n<p>Static bootstrap HTML markup rendered at build-time, stored within Docker image</p>\n</li>\n<li>\n<p>JS frameworks: CanJS</p>\n</li>\n<li>\n<p>CSS created via Sass at build-time</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Hosted on EFS Backend pods and NFS</p>\n</li>\n<li>\n<p>Used APIs on EFS Backend:</p>\n<ul>\n<li>\n<p>Internal Rest-API</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Sourcecode</p>\n<ul>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/questback_client_efs_portals/src/master/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/questback_client_efs_portals/src/master/</a></p>\n</li>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/questback_client_efs_portals-canjs2-cms/src/master/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/questback_client_efs_portals-canjs2-cms/src/master/</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-10\">EFS Reporting+ frontend</h3>\n<ul>\n<li>\n<p>UI for Reporting+ single-page application</p>\n<ul>\n<li>\n<p>No separate login, accessible from EFS Admin area only.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Used technologies:</p>\n<ul>\n<li>\n<p>Bootstrap HTML markup rendered by PHP on EFS Backend.</p>\n</li>\n<li>\n<p>JS frameworks: Dojo</p>\n</li>\n<li>\n<p>CSS created via Sass at build-time</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Hosted on EFS Backend pods</p>\n</li>\n<li>\n<p>Used APIs on EFS Backend:</p>\n<ul>\n<li>\n<p>Internal Rest-API</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Sourcecode</p>\n<ul>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/reporting/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/reporting/</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-11\">EFS external API</h3>\n<ul>\n<li>\n<p>Customer facing public API</p>\n</li>\n<li>\n<p>Directly integrated into EFS Backend pods, doesn’t use internal API</p>\n</li>\n<li>\n<p>Usable only with access-token or HTTP-Basic auth</p>\n<ul>\n<li>\n<p>Access-token is generated within EFS Admin area for dedicated ACL rights</p>\n</li>\n<li>\n<p>HTTP-Basic auth uses credentials of admininstrator login and inherits resp. ACL rights</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Covers a subset of all functionality available in EFS</p>\n</li>\n<li>\n<p>Used technologies:</p>\n<ul>\n<li>\n<p>PHP</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Hosted on EFS Backend pods</p>\n</li>\n<li>\n<p>Supported protocols:</p>\n<ul>\n<li>\n<p>REST</p>\n</li>\n<li>\n<p>SOAP</p>\n</li>\n<li>\n<p>JSON (homebrew protocol usually used by Product-Customizing)</p>\n</li>\n<li>\n<p>PHP (homebrew protocol usually used by Product-Customizing)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Sourcecode</p>\n<ul>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/modules/service/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/modules/service/</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"header-13\">Backend components</h2>\n<h3 id=\"header-15\">EFS internal API</h3>\n<ul>\n<li>\n<p>API for all UI components</p>\n</li>\n<li>\n<p>Usable only with active EFS Session or JWT token</p>\n</li>\n<li>\n<p>Used technologies:</p>\n<ul>\n<li>\n<p>PHP</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Covers all functionality available in EFS</p>\n</li>\n<li>\n<p>Hosted on EFS Backend pods</p>\n</li>\n<li>\n<p>Sourcecode</p>\n<ul>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/modules/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/modules/</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-16\">EFS Backend</h3>\n<ul>\n<li>\n<p>Functionality for all domains and modules</p>\n</li>\n<li>\n<p>Used technologies:</p>\n<ul>\n<li>\n<p>LEMP Stack</p>\n<ul>\n<li>\n<p>Separated into 2 pods</p>\n</li>\n<li>\n<p>Nginx pod</p>\n</li>\n<li>\n<p>PHP-FPM pod with EFS codebase</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Storage</p>\n<ul>\n<li>\n<p>MariaDB</p>\n</li>\n<li>\n<p>Exasol</p>\n</li>\n<li>\n<p>Memcached</p>\n</li>\n<li>\n<p>Elasticsearch</p>\n</li>\n<li>\n<p>NFS</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Message Bus/Queue</p>\n<ul>\n<li>\n<p>Kafka</p>\n</li>\n<li>\n<p>RabbitMQ</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Services</p>\n<ul>\n<li>\n<p>Aspose PPTX-Service</p>\n</li>\n<li>\n<p>Tableau</p>\n</li>\n<li>\n<p>Okta</p>\n</li>\n<li>\n<p>Hurricane MTA</p>\n</li>\n<li>\n<p>Tyntec SMS</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Sourcecode</p>\n<ul>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-17\">EFS Jobs</h3>\n<ul>\n<li>\n<p>Background jobs for EFS</p>\n</li>\n<li>\n<p>Runs various background-jobs for EFS i.e.</p>\n<ul>\n<li>\n<p>Mail/sms delivery</p>\n</li>\n<li>\n<p>Datasync to Kafka/Exasol</p>\n</li>\n<li>\n<p>Reportgeneration for Reporting+</p>\n</li>\n<li>\n<p>Bouncemanagement handling from Hurricane MTA via RabbitMQ</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Used technologies</p>\n<ul>\n<li>\n<p>Separate PHP pods with EFS codebase</p>\n<ul>\n<li>\n<p>Handling jobs for all EFS installations</p>\n</li>\n</ul>\n</li>\n<li>\n<p>PHP</p>\n</li>\n<li>\n<p>crond</p>\n</li>\n<li>\n<p>Storage</p>\n<ul>\n<li>\n<p>MariaDB</p>\n</li>\n<li>\n<p>Exasol</p>\n</li>\n<li>\n<p>Elasticsearch</p>\n</li>\n<li>\n<p>NFS</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Message Bus/Queue</p>\n<ul>\n<li>\n<p>Kafka</p>\n</li>\n<li>\n<p>RabbitMQ</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Services</p>\n<ul>\n<li>\n<p>Aspose PPTX-Service</p>\n</li>\n<li>\n<p>Hurricane MTA</p>\n</li>\n<li>\n<p>Tyntec SMS</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Sourcecode</p>\n<ul>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/www/support/jobmaker.php3\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/tivian_server_application_efs/src/master/www/support/jobmaker.php3</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"header-19\">Storage</h2>\n<h3 id=\"header-21\">MariaDB</h3>\n<ul>\n<li>\n<p>Primary storage of EFS</p>\n<ul>\n<li>\n<p>Needs to provide ACID-compliance to avoid data-loss/inconsistencies (strong-consistency)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>AWS managed RDS instances</p>\n</li>\n<li>\n<p>Vertical scalable on high load</p>\n<ul>\n<li>\n<p>EFS can handle an additional read-replica to separate reads from writes on hot-tables</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Contains all data of all domains/modules</p>\n<ul>\n<li>\n<p>Admin-account data and credentials</p>\n<ul>\n<li>\n<p>If no SSO integration is enabled (Okta)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Survey/Project/Questionnaire definitions</p>\n</li>\n<li>\n<p>Participants/Panelists data</p>\n</li>\n<li>\n<p>Survey result data</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-22\">Exasol</h3>\n<ul>\n<li>\n<p>Analytics database for Tableau Dashboards</p>\n</li>\n<li>\n<p>Tivian managed on VMWare esxi guest</p>\n<ul>\n<li>\n<p>Software provided by vendor</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Contains snapshots of survey participants</p>\n<ul>\n<li>\n<p>Data is transferred from MariaDB to Exasol by Cron-Jobs</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-23\">Memcached</h3>\n<ul>\n<li>\n<p>Cache for query results from MariaDB</p>\n</li>\n<li>\n<p>Caches non volatile data from hot-tables only</p>\n<ul>\n<li>\n<p>Questionnaire definitions</p>\n</li>\n<li>\n<p>Survey table definitions</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-24\">Elasticsearch</h3>\n<ul>\n<li>\n<p>Fulltext search engine for panelists/panelwebsite data</p>\n</li>\n<li>\n<p>Tivian managed in k8s cluster</p>\n</li>\n<li>\n<p>Contains data from hot-tables for better search performance on high-volume installations</p>\n<ul>\n<li>\n<p>Panelists data</p>\n</li>\n<li>\n<p>System error notifications</p>\n</li>\n<li>\n<p>Panelwebsite community content (discussions, blogs, forum)</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-25\">NFS</h3>\n<ul>\n<li>\n<p>Filesystem for shared content</p>\n<ul>\n<li>\n<p>Needed for horizontal scaling of Nginx/PHP-FPM pods</p>\n</li>\n</ul>\n</li>\n<li>\n<p>AWS managed EFS</p>\n</li>\n<li>\n<p>Contains files shared between different pods</p>\n<ul>\n<li>\n<p>Images/CSS/Templates for customization of survey layouts</p>\n</li>\n<li>\n<p>Results export files</p>\n</li>\n<li>\n<p>Product-Customizing code mounted into PHP-FPM containers</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"header-27\">Message Bus / Queues</h2>\n<h3 id=\"header-29\">Kafka</h3>\n<p>Kafka is a streaming service that is used an asynchronous message bus to communicate between different internal systems. Currently the <strong>Dashbo</strong> product is mainly using data published by EFS.</p>\n<ul>\n<li>\n<p>Message bus for communication between EFS and satellite applications/microservices</p>\n</li>\n<li>\n<p>AWS managed MSK cluster</p>\n</li>\n<li>\n<p>Used for events published by EFS and consumed by subscribers in satellite applications/microservices</p>\n<ul>\n<li>\n<p>Survey responses</p>\n</li>\n<li>\n<p>Portal Guides events</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-30\">RabbitMQ</h3>\n<ul>\n<li>\n<p>Message queue for mail delivery status</p>\n</li>\n<li>\n<p>Tivian managed on VMWare esxi guest</p>\n</li>\n<li>\n<p>Used for bounce-management of emails sent from EFS via Hurricane MTA</p>\n<ul>\n<li>\n<p>Survey invitation emails</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"header-32\">Services</h2>\n<h3 id=\"header-34\">Aspose PPTX-Service</h3>\n<ul>\n<li>\n<p>PPTX file generator based on XML descriptions</p>\n</li>\n<li>\n<p>Tivian managed on VMWare esxi guest</p>\n<ul>\n<li>\n<p>Homebrew SOAP service wrapped around Aspose C# library</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Used for export of charts/reports in EFS Reporting+</p>\n</li>\n<li>\n<p>Sourcecode</p>\n<ul>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/questback_service_iis_pptx-exporter/src/master/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/questback_service_iis_pptx-exporter/src/master/</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-35\">Tableau</h3>\n<p>Tableau is a self hosted licensed product that is used to show dashboards based on EFS data.</p>\n<ul>\n<li>\n<p>Dashboards integrated into Portals</p>\n</li>\n<li>\n<p>Tivian managed on VMWare esxi guest</p>\n<ul>\n<li>\n<p>Software provided by vendor</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Renders Dashboards into Iframe embedded into Portals</p>\n<ul>\n<li>\n<p>Dashboards individually configured by Product-Customizing</p>\n</li>\n<li>\n<p>Data individually prepared in Exasol by Product-Customizing with Altery</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-36\">Okta</h3>\n<p>Okta is used as optional module in EFS. It is an Identity Provider that is used to implement SSO capabilities. Users are synced to this provider.</p>\n<ul>\n<li>\n<p>SSO SaaS provider</p>\n</li>\n<li>\n<p>Identity provider for EFS and Portal accounts</p>\n</li>\n<li>\n<p>Individually setup by 2nd level support for customers using EFS IdentityAccessManager module</p>\n</li>\n</ul>\n<h3 id=\"header-37\">Hurricane MTA</h3>\n<p>The Hurricane is a self hosted Email relay that gives EFS capabilities to send and track emails.</p>\n<ul>\n<li>\n<p>Tivian managed on VMWare esxi guest</p>\n<ul>\n<li>\n<p>Software provided by vendor</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Handles delivery and status-tracking of all emails sent by EFS</p>\n<ul>\n<li>\n<p>Mailstatus is published via RabbitMQ back to EFS</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"header-38\">Tyntec SMS</h3>\n<ul>\n<li>\n<p>SMS delivery SaaS provider</p>\n</li>\n<li>\n<p>Handles delivery of SMS from EFS</p>\n</li>\n<li>\n<p>Individually setup by 2nd level support for customers using EFS SMS module</p>\n<ul>\n<li>\n<p>Optional, SMS delivery services are configurable in EFS</p>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"h_01J4KMC3H0YXQ01BAXG1XMQ84A\">Continuous Tasks</h1>\n<p>There are several different occasions where tasks have to run independently from a request-response cycle. Reasons for that are:</p>\n<ul>\n<li>\n<p>time based tasks</p>\n</li>\n<li>\n<p>tasks that would run too long in a request-response cycle</p>\n</li>\n<li>\n<p>tasks that are run in background as they are not bound to any request-response cycle but other triggers like database entries</p>\n</li>\n</ul>\n<p>For this purpose a dedicated machine is setup that runs these different tasks. There are four overall concepts that run these tasks:</p>\n<ul>\n<li>\n<p><strong>snailmail:</strong> Snailmail is a cronjob that executes a fixed script to send out emails</p>\n</li>\n<li>\n<p><strong>dbreport:</strong> The DB Report is also a fixed script that gets executed as a cronjob. Is cleans up the database.</p>\n</li>\n<li>\n<p><strong>jobmaker:</strong> The Jobmaker is a cronjob that relies on tasks in a database table. </p>\n</li>\n<li>\n<p><strong>custom cron jobs:</strong> Custom cron jobs are used to run installation specific custom tasks that are requested by a customer and implemented as a customization for the installation. The tasks they fulfill depend on the requested solution.</p>\n</li>\n</ul>\n<p> </p>\n<p> </p>",
    "user_segment_ids": [
        360000084973
    ]
}