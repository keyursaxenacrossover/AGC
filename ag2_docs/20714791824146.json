{
    "id": 20714791824146,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20714791824146.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20714791824146-Support-tips-and-tricks-WIP",
    "author_id": 369584192734,
    "comments_disabled": false,
    "draft": false,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20714530860562,
    "created_at": "2024-08-12T17:01:25Z",
    "updated_at": "2024-09-10T15:25:36Z",
    "name": "Support tips and tricks (WIP)",
    "title": "Support tips and tricks (WIP)",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-09-10T15:25:35Z",
    "user_segment_id": 360000084973,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<h2 id=\"h_01J6S8NB7GCSJP7G9BYGBMCF43\">Table of Contents</h2>\n<ul>\n<li><a href=\"#header-1\">How do I unpack archived projects and change the special characters</a></li>\n<li><a href=\"#header-3\">Collect all EFS users in a cluster and pack them into a csv file</a></li>\n<li><a href=\"#header-4\">Run across installations and count the db size</a></li>\n<li><a href=\"#header-5\">Send mail from command line or from shell scriptz</a></li>\n</ul>\n<h2 id=\"Wie-entpacke-ich-archivierte-Projekte-und-ändere-die-Sonderzeichen.\" data-renderer-start-pos=\"4\"><font>How do I unpack archived projects and change the special characters? </font></h2>\n<pre><code class=\"language-text\">unzip Project_3899.zip\nmv survey.xml survey.xml2.gz\ngunzip survey.xml2.gz\nvi survey.xml2 (Replace invalid chars)\ngzip survey.xml2\nmv survey.xml2.gz survey.xml\nzip -FF -u Project_3899.zip conjoint_calculation.sql conjoint_graph.sql diffs.sql sample_data.desc sample_data.sql structure_users_4674.dump survey.xml users_4674.dump</code></pre>\n<p> </p>\n<h2 id=\"Sammle-alle-EFS-Nutzer-in-einem-Cluster-und-packe-sie-in-eine-csv-Datei\" data-renderer-start-pos=\"403\"><font> Collect all EFS users in a cluster and pack them into a csv file </font></h2>\n<pre><code class=\"language-bash\">echo \"installation; created; u_firstname; u_namelower; u_email; u_account; gender; language; lastlogin; num_logins; login_expire; login_disabled; ORGA; contract_end\" &gt;&gt; /nfs/dumps/EFS_Users$(date \"+%Y-%m-%d\").csv &amp;&amp; for i in  $(ls /nfs/installations); do cd /nfs/installations/$i/nfs/opst/$i.customervoice360.com/htdocs; pwd; echo \"SELECT \\\"$i\\\", created, u_firstname, u_name, lower(u_email), u_account, CASE WHEN u_gender=1 Then 'male' WHEN u_gender=2 Then 'female' ELSE 'no info' END AS gender, lang AS language, if(lastlogin='NULL','never',from_unixtime(lastlogin)) AS lastlogin, num_logins, if(login_expire != 'NULL', from_unixtime(login_expire), 'unrestricted') AS login_expire, login_disabled, name AS ORGA, contract_end FROM users,user_att,login_att,admin_user_contract,admin_contract_org WHERE admin_contract_org.id=admin_user_contract.org AND admin_user_contract.uid=users.uid AND users.uid=user_att.uid AND user_att.uid=login_att.uid AND u_email not like '%questback%' AND u_email not like '%servicelayer%' AND u_email not like '%dummy%' AND u_email not like '%tivian%' AND u_email not like '%globalpark%' AND u_email not like '%3uu%' AND u_email not like '%teilnehmer%' AND u_email not like '%invalid%' AND u_email not like '%gmail%' AND u_email not like '%support%' AND u_email not like '%soporte%'  AND u_email not like '%client%' AND u_email not like '%training%' AND u_email not like '%sistemas%' AND u_email not like '%invalid%' AND u_email not like '%@student%' AND u_email not like '%test%';\" | efslogin | grep -v '^Running\\|^Connecting\\|^customer\\|u_account' | sed 's/\\t/;/g;s/\\/nfs\\/[^\\/]*\\///g'  &gt;&gt; /nfs/dumps/EFS_Users$(date \"+%Y-%m-%d\").csv; done</code></pre>\n<p><span style=\"color: #172b4d; background-color: #ffffff;\">The whole thing in comprehensible and readable format:</span></p>\n<pre><code class=\"language-bash\">echo \"installation; created; u_firstname; u_name; u_email; u_account; gender; language; lastlogin; num_logins; login_expire; login_disabled; ORGA; contract_end\" \n&gt;&gt; /nfs/dumps/EFS_Users$(date \"+%Y-%m-%d\").csv \n&amp;&amp; \nfor i in  $(ls /nfs/installations); \ndo cd /nfs/installations/$i/nfs/opst/$i.customervoice360.com/htdocs; \npwd; \necho \"SELECT \n\\\"$i\\\", \ncreated, \nu_firstname, \nu_name, \nlower(u_email), \nu_account, \nCASE WHEN u_gender=1 Then 'male' WHEN u_gender=2 Then 'female' ELSE 'no info' END AS gender, \nlang AS language, \nif(lastlogin='NULL','never',from_unixtime(lastlogin)) AS lastlogin, \nnum_logins, \nif(login_expire != 'NULL', from_unixtime(login_expire), 'unrestricted') AS login_expire, \nlogin_disabled, \nname AS ORGA, \ncontract_end \nFROM users,user_att,login_att,admin_user_contract,admin_contract_org \nWHERE admin_contract_org.id=admin_user_contract.org \nAND admin_user_contract.uid=users.uid \nAND users.uid=user_att.uid \nAND user_att.uid=login_att.uid \nAND u_email not like '%questback%' \nAND u_email not like '%servicelayer%' \nAND u_email not like '%dummy%' \nAND u_email not like '%tivian%' \nAND u_email not like '%globalpark%' \nAND u_email not like '%3uu%' \nAND u_email not like '%teilnehmer%' \nAND u_email not like '%invalid%'  \nAND u_email not like '%support%' \nAND u_email not like '%soporte%'  \nAND u_email not like '%client%' \nAND u_email not like '%training%' \nAND u_email not like '%sistemas%' \nAND u_email not like '%invalid%' \nAND u_email not like '%@student%' \nAND u_email not like '%test%';\" \n| efslogin \n| grep -v '^Running\\|^Connecting\\|^customer\\|u_account' \n| sed 's/\\t/;/g;s/\\/nfs\\/[^\\/]*\\///g'  \n&gt;&gt; /nfs/dumps/EFS_Users$(date \"+%Y-%m-%d\").csv; done</code></pre>\n<p> </p>\n<h2 id=\"header-4\">Run across installations and count the db size</h2>\n<pre><code class=\"language-text\">for i in $(cat ~/wave7tocountsize.txt) ; do i2 $i; size=$(echo 'SELECT table_schema AS \"Database\",  ROUND(SUM(data_length + index_length) / 1024 / 1024 / 1024, 2) AS \"Size (GB)\"  FROM information_schema.TABLES  GROUP BY table_schema;' | efslogin | grep -v \"Running\" | grep \"opst\\|tbl\" | awk '{ SUM += $2} END { print SUM }'); echo \"$i ; $size\" &gt;&gt; ~/wave7totals.txt; done</code></pre>\n<p data-renderer-start-pos=\"4288\"><font>What we do:</font></p>\n<ol class=\"ak-ol\" start=\"1\" data-indent-level=\"1\">\n<li>\n<p data-renderer-start-pos=\"4305\"><font>output a list with cat and read it into i</font></p>\n</li>\n<li>\n<p data-renderer-start-pos=\"4354\"><font>switch to installation</font></p>\n</li>\n<li>\n<p data-renderer-start-pos=\"4383\"><font>send command to efslogin to spit out db size</font></p>\n</li>\n<li>\n<p data-renderer-start-pos=\"4438\"><font>remove the unnecessary accessories from the result</font></p>\n</li>\n<li>\n<p data-renderer-start-pos=\"4489\"><font>Two numbers are spit out, these are added together with AWK</font></p>\n</li>\n<li>\n<p data-renderer-start-pos=\"4556\"><font> then installation and calculated DB size packed into a txt file </font></p>\n</li>\n</ol>\n<p> </p>\n<h2 id=\"header-5\">Send mail from command line or from shell scripts</h2>\n<p>This has been possible using the mailx command in the Corbox</p>\n<pre><code class=\"language-text\">mailx -s \"Post aus Bremen\" -r mathias.thurn@tivian.com -a jf3233_injections.zip  mathias.thurn@tivian.com</code></pre>\n<p>In the example an attched file is sent from <code>mathias.thurn@tivian.com</code> to <code>mathias.thurn@tivian.com</code></p>\n<p>In the AWS we have the msmtp command. It can be used with a configuration file in your home folder</p>\n<p><code>~/.msmtprc</code></p>\n<pre><code class=\"language-text\">thurn_mathias@servicegw-prod-de-03:~$ cat .msmtprc\ndefaults\ntls off\n\naccount techsupport\nauth off\nhost postfix-adhoc.global-services.svc.cluster.local\nport 25\nfrom techsupport@tivian.com\n\naccount default : techsupport\n</code></pre>\n<p>You can send text from a file, that includes data like the recipient. The Subject is always part of the message and is not passed via parameter.</p>\n<p><code>message_0001.txt</code></p>\n<pre><code class=\"language-text\">To: mathias.thurn@tivian.com\nSubject: Testmail 0001\nHi,\ndies ist eine Testmail.\nViele Gruesse,\nMathias</code></pre>\n<p>You can send mails like this</p>\n<pre><code class=\"language-text\">cat message_0001.txt | msmtp -vt \nor\nmsmtp -vt &lt; message_0001.txt </code></pre>\n<p>You can specify the location of the configuration file or pass all info as parameters like in this example:</p>\n<pre><code class=\"language-text\">cat &lt;(echo \"Subject: Some Subject for the mail\") &lt;(iconv -f UTF-8 -t ISO8859-1 message_only.txt) | msmtp --host=\"postfix-adhoc.global-services.svc.cluster.local\" --port=25 --from=\"techsupport@tivian.com\" --auth=off --tls=off mathias.thurn@tivian.com</code></pre>\n<p>In this example the message_only.txt is converted from UTF-8 to ISO.8859-1 on the fly to avoid, that Umlaute aren’t displayed properly in mail clients like Outlook.</p>",
    "user_segment_ids": [
        360000084973
    ]
}