{
    "id": 20716795487378,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20716795487378.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20716795487378-Okta-Resources-used-in-Tivian-DXI",
    "author_id": 369584192734,
    "comments_disabled": false,
    "draft": false,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20714711445138,
    "created_at": "2024-08-12T19:43:48Z",
    "updated_at": "2024-08-26T12:29:08Z",
    "name": "Okta Resources used in Tivian DXI",
    "title": "Okta Resources used in Tivian DXI",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-08-26T12:29:03Z",
    "user_segment_id": 360000084973,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<h1 id=\"h_01J679Z3E0D14AHN1CGGPB4FHR\">Overview</h1>\n<p>The topics below contain resources of Okta used in Tivian. There are explanations for different configuration fields in the scope of how we use them. This is not a general Okta documentation but scoped to use cases we offer in our packages.</p>\n<h2 id=\"h_01J67AB3Z5X1XMH3BVGGVHESY0\">Table of Contents</h2>\n<ul>\n<li><a href=\"#h_01J67A14NE5GKCRX1ZMZYK045K\">Application (OIDC)</a></li>\n<li><a href=\"#h_01J679R075MB44V7NHKF8FZNJN\">Okta Sign-on Policy</a></li>\n<li><a href=\"#h_01J679RW2J93J5WE1Y5BG3YD7P\">Okta Groups</a></li>\n<li><a href=\"#h_01J679RW2J93J5WE1Y5BG3YD7P\">Okta Groups</a></li>\n<li><a href=\"#h_01J67A70WG9K8FCY5NS17HS5T0\">Okta Factor Enrollment</a></li>\n</ul>\n<h1 id=\"h_01J67A14NE5GKCRX1ZMZYK045K\">Application (OIDC)</h1>\n<p>An Application is an instance in Okta that takes care of the connection between the Identity Provider and one application. In conjunction with Authorization Servers it defines the contract between an application and the Identity Provider. Therefore it is the central piece of enabling applications to use the Identity Provider.</p>\n<p> </p>\n<table border=\"1\" data-layout=\"default\">\n<colgroup>\n<col style=\"width: 340.0px;\">\n<col style=\"width: 340.0px;\">\n</colgroup>\n<tbody>\n<tr>\n<th>\n<p><strong>What</strong></p>\n</th>\n<th>\n<p><strong>Explanation</strong></p>\n</th>\n</tr>\n<tr>\n<td>\n<p>Sign on method and platform</p>\n</td>\n<td>\n<p>Open ID Connect → see <a href=\"https://openid.net/connect/\">https://openid.net/connect/</a></p>\n</td>\n</tr>\n<tr>\n<td colspan=\"2\" data-highlight-colour=\"#f4f5f7\">\n<p class=\"wysiwyg-text-align-center\"><strong>General</strong></p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Grant Types</p>\n</td>\n<td>\n<p>Client credentials - NOT IN USE</p>\n<ul>\n<li>\n<strong>Implicit flow:</strong><br>This flow is mostly used for Single Page Applications. It directly delivers tokens to the browser that can be stored temporarily and validated during backend requests.</li>\n<li>\n<strong>Code Flow + Refresh Token:</strong><br>The Code Flow is best suited for scenarios where tokens are managed on a server and not on a client. In this case only the server has the tokens for a user and manages them. The Refresh Token grant will enable the server to get new tokens if the given ones are invalid but the user still has a valid session.</li>\n</ul>\n</td>\n</tr>\n<tr>\n<td>\n<p>Login Redirect URI <strong>***</strong></p>\n</td>\n<td>\n<p>Okta will redirect a user back to this Login URI after the login process. The can be multiple Login URIs. A request to Okta will contain the matching Login URI for selecting the correct redirection. But it has to exactly match.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Logout Redirect URI <strong>***</strong></p>\n</td>\n<td>\n<p>The same as Login Redirect URI but for logout. It can be the same as login but it doesn’t have to be same.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Initiate Login URI</p>\n</td>\n<td>\n<p>Currently not in use</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Client ID</p>\n</td>\n<td>\n<p>This is an identifier used by OIDC to identify a specific application that wants to use the login from Okta. It will be used in all requests to the Identity Provider to match the correct connection.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Client Secret</p>\n</td>\n<td>\n<p>The client secret is only used in code-flow scenarios to create trust between Okta and the application.</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"2\" data-highlight-colour=\"#f4f5f7\">\n<p class=\"wysiwyg-text-align-center\"><strong>Sign On</strong></p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Issuer and Audience</p>\n</td>\n<td>\n<p>Issuer is the one that created the token and audience is the group of entities that is should get access with that token. Both values can be used to check validity of a token.</p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#f4f5f7\">\n<p><strong>Assignments</strong></p>\n</td>\n<td>\n<p>Applications can be assigned to groups. Only members of these groups are allowed to access. This is currently not used. See Access and Authorization with IAM module</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<p><strong>***</strong> If an application corresponds with an EFS installation which is configured for many different domain-aliases, for each such alias the Login Redirect URI / Logout Redirect URI have to be entered manually in OKTA. In case of portal-specific applications the redirect URI will be configured for each domain-alias registered in EFS (Options / Domains) at creation or edit application. The migration script offers an additional option to update all portal-specific applications to get their redirect links up-to-date.</p>\n<p><strong><u>For API Access see: <a href=\"https://developer.okta.com/docs/reference/api/apps/\">https://developer.okta.com/docs/reference/api/apps/</a></u></strong></p>\n<h1 id=\"h_01J679R075MB44V7NHKF8FZNJN\">Okta Sign-on Policy</h1>\n<p>A Sign-On Policy defines the session lifetime for a user and how often a user is asked for additional factors (MFA).</p>\n<p>A Sign-On-Policy Contains of a container construct bundling a set of rules.</p>\n<table border=\"1\" data-layout=\"default\">\n<tbody>\n<tr>\n<th>\n<p><strong>What</strong></p>\n</th>\n<th>\n<p><strong>Explanation</strong></p>\n</th>\n</tr>\n<tr>\n<td colspan=\"2\" data-highlight-colour=\"#f4f5f7\">\n<p class=\"wysiwyg-text-align-center\"><strong>General settings</strong></p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Group Assignment</p>\n</td>\n<td>\n<p>The Group for which this policy takes effect.</p>\n</td>\n</tr>\n<tr>\n<td class=\"wysiwyg-text-align-center\" colspan=\"2\" data-highlight-colour=\"#f4f5f7\">\n<p><strong>Rule Settings</strong></p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Prompt for Factor</p>\n</td>\n<td>\n<p>This enables MFA. It has to take care of the factor enrollment settings. Else the login might be broken.</p>\n<p>MFA can have it’s own session lifetime or it could be enabled only once per device or every time.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Session lifetime</p>\n</td>\n<td>\n<p>The lifetime of the Okta session.</p>\n<p>Also see <a href=\"https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20716301558418\" target=\"_blank\" rel=\"noopener noreferrer\">Sessions Explained</a></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<p><strong><u>For API Access see:</u></strong></p>\n<p><strong>Sign-On Policy:</strong></p>\n<p><a href=\"https://developer.okta.com/docs/reference/api/policy/#okta-sign-on-policy\">https://developer.okta.com/docs/reference/api/policy/#okta-sign-on-policy</a></p>\n<p><strong>Rules (also Sign-On Policy rules):</strong></p>\n<p><a href=\"https://developer.okta.com/docs/reference/api/policy/#rules-operations\">https://developer.okta.com/docs/reference/api/policy/#rules-operations</a></p>\n<p> </p>\n<h1 id=\"h_01J679RW2J93J5WE1Y5BG3YD7P\">Okta Groups</h1>\n<p>Groups are a way in Okta to manage people and create scoped sets of rules.</p>\n<p>In our case groups are not used for authorization but to create a scope for specific use cases. As we are managing multiple tenants in one Okta tenant this is also a tool to separate tenants.</p>\n<p>Okta Authorization Server</p>\n<p>An Authorization Server is an entity that is used to gather tokens. It defined the security boundary from one tenant to another. The tokens from one Authorization Server could not be used in the scope of another authorization server.</p>\n<p>An Authorization Server requires some configuration.</p>\n<table border=\"1\" data-layout=\"default\">\n<colgroup>\n<col style=\"width: 170.0px;\">\n<col style=\"width: 508.0px;\">\n</colgroup>\n<tbody>\n<tr>\n<th data-highlight-colour=\"#f4f5f7\">\n<p><strong>What</strong></p>\n</th>\n<th>\n<p><strong>Explanation</strong></p>\n</th>\n</tr>\n<tr>\n<td>\n<p>Audience</p>\n</td>\n<td>\n<p>The audience defined the scope a token is used for. It will always be a domain.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Issuer</p>\n</td>\n<td>\n<p>The issuer is the instance that created the token.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Metadata URI</p>\n<p>Well-known document</p>\n<p>Discovery Document</p>\n</td>\n<td>\n<p>This document contains metadata of the authorization server. It contains information about the algorithms and flows that are supported as well as URIs to endpoints that can be used to integrate.</p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#f4f5f7\">\n<p>Scopes</p>\n</td>\n<td>\n<p>Scopes that are supported by this authorization server. Scopes can be requested by a client and will refer to a specific set of claims. An authorization server might allow or reject requesting a scope.</p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#f4f5f7\">\n<p>Claims</p>\n</td>\n<td>\n<p>Claims are specific values of a user. They can be tied to a scope and also to a specific token type.</p>\n<p>In our case the first name and the last name have to be present in the ID Tokens when requesting the profile scope.</p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#f4f5f7\">\n<p>Access Policies</p>\n<p>Access Policy Rules</p>\n</td>\n<td>\n<p>An access policy will configure the flows that are allowed in that authorization server as well as the lifetime of tokens.</p>\n<p>In our case Authorization Code and Implicit flow are only required.</p>\n<p>For the token lifetime see <a href=\"https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20716301558418\" target=\"_blank\" rel=\"noopener noreferrer\">Tivian Access Sessions Explained</a></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<p><strong><u>For API Access see:</u></strong></p>\n<p><strong>Authorization Server:</strong></p>\n<p><a href=\"https://developer.okta.com/docs/reference/api/authorization-servers/#authorization-server-operations\">https://developer.okta.com/docs/reference/api/authorization-servers/#authorization-server-operations</a></p>\n<p><strong>Scopes:</strong></p>\n<p><a href=\"https://developer.okta.com/docs/reference/api/authorization-servers/#scope-operations\">https://developer.okta.com/docs/reference/api/authorization-servers/#scope-operations</a></p>\n<p><strong>Claims:</strong></p>\n<p><a href=\"https://developer.okta.com/docs/reference/api/authorization-servers/#claim-operations\">https://developer.okta.com/docs/reference/api/authorization-servers/#claim-operations</a></p>\n<p><strong>Policies (Access Policies):</strong></p>\n<p><a href=\"https://developer.okta.com/docs/reference/api/authorization-servers/#policy-operations\">https://developer.okta.com/docs/reference/api/authorization-servers/#policy-operations</a></p>\n<h1 id=\"h_01J67A70WG9K8FCY5NS17HS5T0\">Okta Factor Enrollment</h1>\n<p>Factor enrollment is a process in Okta that takes care of collecting Multi Factor information from users accessing applications. Factor enrollment defines which users have to provide Multi Factor data.</p>\n<p><strong>Keep in mind that the factor enrollment does not mean that MFA is active. MFA will be activated using a Sign-On Policy see: <a href=\"#h_01J679R075MB44V7NHKF8FZNJN\">Sign-On Policy</a>.</strong></p>\n<p> </p>\n<table style=\"height: 516px;\" border=\"1\" data-layout=\"default\">\n<tbody>\n<tr style=\"height: 22px;\">\n<th style=\"height: 22px; width: 111.266px;\">\n<p><strong>What</strong></p>\n</th>\n<th style=\"height: 22px; width: 581.734px;\">\n<p><strong>Explanation</strong></p>\n</th>\n</tr>\n<tr style=\"height: 44px;\">\n<td class=\"wysiwyg-text-align-center\" style=\"height: 44px; width: 103.266px;\" colspan=\"2\" data-highlight-colour=\"#f4f5f7\">\n<p><strong>Multifactor Policy</strong></p>\n</td>\n</tr>\n<tr style=\"height: 74px;\">\n<td style=\"height: 74px; width: 103.266px;\">\n<p>Group Assignment</p>\n</td>\n<td style=\"height: 74px; width: 573.734px;\">\n<p>The group assignment is used to scope Multi Factor Authentication and should be as precise as possible.</p>\n<p>This is the main tool that should be used to handle multi factors.</p>\n</td>\n</tr>\n<tr style=\"height: 132px;\">\n<td style=\"height: 132px; width: 103.266px;\">\n<p>Eligible Factors</p>\n</td>\n<td style=\"height: 132px; width: 573.734px;\">\n<p>The factors for which as user is asked for. There are three possible values:</p>\n<ul>\n<li>Optional: This factor can be provided. In case there are optional factors at least one of these factor has to be provided.</li>\n<li>Disabled: Users cannot configure that factor.</li>\n<li>Required: This factor has to be provided.</li>\n</ul>\n</td>\n</tr>\n<tr style=\"height: 22px;\">\n<td class=\"wysiwyg-text-align-center\" style=\"height: 22px; width: 103.266px;\" colspan=\"2\" data-highlight-colour=\"#f4f5f7\">\n<p><strong>Policy Rule</strong></p>\n</td>\n</tr>\n<tr style=\"height: 22px;\">\n<td style=\"height: 22px; width: 103.266px;\">\n<p>Access</p>\n</td>\n<td style=\"height: 22px; width: 573.734px;\">\n<p>Scoping for the rule.</p>\n</td>\n</tr>\n<tr style=\"height: 200px;\">\n<td style=\"height: 200px; width: 103.266px;\">\n<p>Enrollment</p>\n</td>\n<td style=\"height: 200px; width: 573.734px;\">\n<p>There are three different cases:</p>\n<ul>\n<li>The first time a user is challenged for MFA → This happens as soon as a user attempts to access an application that requires MFA. A user could have entered different other applications without MFA beforehand.</li>\n<li>The first time a user signs in → This happens independently from the application the user accesses. Therefore a user could be asked for MFA information without being challenged for MFA.</li>\n<li>Do not enroll → self-explanatory</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>",
    "user_segment_ids": [
        360000084973
    ]
}