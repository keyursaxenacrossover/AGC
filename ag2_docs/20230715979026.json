{
    "id": 20230715979026,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20230715979026.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20230715979026-Uniform-distribution-in-Random-Trigger",
    "author_id": 369584192734,
    "comments_disabled": true,
    "draft": false,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20278886810002,
    "created_at": "2024-07-18T12:32:37Z",
    "updated_at": "2024-08-28T10:03:31Z",
    "name": "Uniform distribution in Random-Trigger",
    "title": "Uniform distribution in Random-Trigger",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-07-22T10:37:05Z",
    "user_segment_id": null,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<p>Overview</p>\n<article>\n<p>This article explains how to create a uniform distribution in Random-Trigger using user-defined variables, Recoding-Trigger, and the Modulo function. It provides an alternative solution to overcome the limitations of using a Random-Trigger with infinite participants.</p>\n<h1 id=\"h_01HGKSMPRSYYE7GMM7DZ0VCKXK\">Information</h1>\n<p>The article focuses on implementing a uniform distribution for random triggering in surveys, particularly when dealing with a large number of participants. It introduces the concept of Modulo and explains how to use it with user-defined variables and Recoding-Trigger to achieve the desired result.</p>\n<ul>\n<li><a href=\"#h_01HGKSMPRSZ7QJNP3JXBJ8XDVT\">Understanding the Problem</a></li>\n<li><a href=\"#h_01HGKSMPRS3TNQXCQXJ5QXHG9M\">Introduction to Modulo</a></li>\n<li><a href=\"#h_01HGKSMPRSQNKXBXQXD4QXBG9N\">Implementing Uniform Distribution</a></li>\n</ul>\n<h2 id=\"h_01HGKSMPRSZ7QJNP3JXBJ8XDVT\">Understanding the Problem</h2>\n<p>When using a Random-Trigger with a uniform distribution and infinite participants, the query for the trigger becomes very complex. This complexity leads to several issues:</p>\n<ul>\n<li>The installation process becomes very slow</li>\n<li>Participants may be rejected from the survey</li>\n<li>The trigger takes an excessive amount of time to load</li>\n</ul>\n<p>To address these problems, an alternative approach using user-defined variables, Recoding-Trigger, and the Modulo function is recommended.</p>\n<h2 id=\"h_01HGKSMPRS3TNQXCQXJ5QXHG9M\">Introduction to Modulo</h2>\n<p>Modulo (mod) is a mathematical function that returns the remainder when dividing two integers. For example:</p>\n<ul>\n<li>10 mod 3 = 1 (10 divided by 3 equals 3 with a remainder of 1)</li>\n<li>14 mod 5 = 4 (14 divided by 5 equals 2 with a remainder of 4)</li>\n<li>16 mod 3 = 1 (16 divided by 3 equals 5 with a remainder of 1)</li>\n</ul>\n<h2 id=\"h_01HGKSMPRSQNKXBXQXD4QXBG9N\">Implementing Uniform Distribution</h2>\n<p>To implement a uniform distribution for random triggering, follow these steps:</p>\n<p data-renderer-start-pos=\"666\"><strong data-renderer-mark=\"true\">Solution:</strong><br>Recoding-Trigger with LFDN and Mod</p>\n<p data-renderer-start-pos=\"712\"><strong data-renderer-mark=\"true\">What is  lfdn?</strong><br>Every participant has a unique lfdn (participants consequente number). If you use this number with mod you create also a random trigger with a uniform distribtution.</p>\n<p data-renderer-start-pos=\"894\"><strong data-renderer-mark=\"true\">Setup uniform distribution for numbers 1-5</strong></p>\n<ol class=\"ak-ol\" start=\"1\" data-indent-level=\"1\">\n<li>\n<p data-renderer-start-pos=\"940\">Setup User-defined-variables (Project properties -&gt; user-defined-variables -&gt; Number of user-defined-variables: 1)</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"1058\">Jump to the page where you wanna setup your random uniform distribution</p>\n</li>\n<li>\n<p data-renderer-start-pos=\"1133\">Create Recoding Trigger (Suvey-Menu -&gt; Questionnaire-Editor -&gt; Page-&gt; Trigger -&gt; Recoding-Trigger)</p>\n</li>\n</ol>\n<p data-renderer-start-pos=\"1235\"><br>Settings of the Trigger:</p>\n<p data-renderer-start-pos=\"1235\"><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21015136277778\"></p>\n<p><span style=\"color: #172b4d; background-color: #ffffff;\">Detail configuration:</span></p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21015136284562\"></p>\n<p data-renderer-start-pos=\"1291\">Variable to be recoded: c_000x</p>\n<p data-renderer-start-pos=\"1323\">Value: MOD(#lfdn# , 5 ) + 1</p>\n<p data-renderer-start-pos=\"1352\">For 6 Random-numbers use 6 instead of 5..<br>If you wanna see the values of the lfdn and c_000x (user-defined-variable) use the following code in the questionnaire text or where you want</p>\n<p data-renderer-start-pos=\"1352\"><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21015166328338\"></p>\n<p> </p>\n<h1 id=\"h_01HGKSMPRSER9ENY5QWWRZZ863\">FAQ</h1>\n<h3 id=\"h_01HGKSMPRSQNKXBXQXD4QXBG9S\">What is lfdn?</h3>\n<p>lfdn stands for \"laufende Feldnummer\" in German, which translates to \"consecutive field number\" in English. Every participant has a unique lfdn, which is essentially a participant's consecutive number. By using this number with the Modulo function, you can create a random trigger with a uniform distribution.</p>\n<h3 id=\"h_01HGKSMPRSQNKXBXQXD4QXBG9T\">Why is this method better than using a Random-Trigger with infinite participants?</h3>\n<p>This method using Modulo and Recoding-Trigger is more efficient because it avoids the complexity of running through all participants, which can cause slow installation, participant rejection, and long loading times for the trigger. It provides a simpler and faster way to achieve a uniform distribution for random triggering.</p>\n<p> </p>\n</article>",
    "user_segment_ids": []
}