{
    "id": 20305001847954,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20305001847954.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20305001847954-SQL-Functions-and-Operators-available-for-EFS",
    "author_id": 369584192734,
    "comments_disabled": false,
    "draft": false,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20234751255186,
    "created_at": "2024-07-22T15:16:12Z",
    "updated_at": "2024-07-26T11:49:07Z",
    "name": "SQL Functions and Operators available for EFS",
    "title": "SQL Functions and Operators available for EFS",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-07-26T11:17:48Z",
    "user_segment_id": 360000084973,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<p><span style=\"font-size: 2.1em;\">Overview</span></p>\n<article>\n<p>This article provides an overview of SQL functions and operators, including arithmetic, comparison, and logical operators, as well as a list of accepted and not accepted functions in EFS.</p>\n<h1 id=\"h_01HGKSMPRSYYE7GMM7DZ0VCKXK\">Information</h1>\n<p>This guide focuses on SQL functions and operators for internal use, covering various types of operators and functions that are accepted or not accepted in the system.</p>\n<ul>\n<li><a href=\"#arithmetic_operators\">Arithmetic Operators</a></li>\n<li><a href=\"#comparison_operators\">Comparison Operators</a></li>\n<li><a href=\"#logical_operators\">Logical Operators</a></li>\n<li><a href=\"#accepted_functions\">Accepted Functions</a></li>\n<li><a href=\"#not_accepted_functions\">Not Accepted Functions</a></li>\n<li><a href=\"#date_functions\">Date Functions</a></li>\n</ul>\n<p> </p>\n<h2 id=\"arithmetic_operators\">Arithmetic Operators</h2>\n<p>The following arithmetic operators are supported:</p>\n<ul>\n<li>Addition: <code>+</code>\n</li>\n<li>Subtraction: <code>-</code>\n</li>\n<li>Multiplication: <code>*</code>\n</li>\n<li>Division: <code>/</code>\n</li>\n<li>Modulus: <code>%</code>\n</li>\n</ul>\n<h2 id=\"comparison_operators\">Comparison Operators</h2>\n<p>The following comparison operators are supported:</p>\n<ul>\n<li>Equal: <code>=</code> or <code>==</code>\n</li>\n<li>Identical: <code>=</code>\n</li>\n<li>Not Equal: <code>!=</code> or <code>&lt;&gt;</code>\n</li>\n<li>Not Identical: <code>==</code>\n</li>\n<li>Less Than: <code>&lt;</code>\n</li>\n<li>Greater Than: <code>&gt;</code>\n</li>\n<li>Less Than or Equal: <code>&lt;=</code>\n</li>\n<li>Greater Than or Equal: <code>&gt;=</code>\n</li>\n</ul>\n<h2 id=\"logical_operators\">Logical Operators</h2>\n<p>The following logical operators are supported:</p>\n<ul>\n<li>AND: <code>AND</code> or <code>&amp;&amp;</code>\n</li>\n<li>OR: <code>OR</code> or <code>||</code>\n</li>\n</ul>\n<h2 id=\"accepted_functions\">Accepted Functions</h2>\n<p>The following functions are accepted:</p>\n<ul>\n<li><code>abs($value)</code></li>\n<li><code>accessval($var)</code></li>\n<li><code>checkemail($var)</code></li>\n<li><code>checkformat($var,$regex)</code></li>\n<li><code>checkkombination($questname, $oper, $value)</code></li>\n<li><code>checkkombination_range($questname, $min, $max)</code></li>\n<li><code>checkrange($var,$start,$end)</code></li>\n<li><code>getmonthdiff($year,$month)</code></li>\n<li><code>isalpha($value)</code></li>\n<li><code>isalpha_de($value)</code></li>\n<li><code>isalphanumeric($value)</code></li>\n<li><code>isalphanumeric_de($value)</code></li>\n<li><code>isblank($value)</code></li>\n<li><code>ishidden($variable)</code></li>\n<li><code>isinrange($value,$min,$max)</code></li>\n<li><code>isint($value)</code></li>\n<li><code>ismissing($value)</code></li>\n<li><code>isnegative($value)</code></li>\n<li><code>isnumber($value)</code></li>\n<li><code>ispositive($value)</code></li>\n<li><code>issamestring($value1,$value2)</code></li>\n<li><code>isvaliddate($value)</code></li>\n<li><code>iszero($value)</code></li>\n<li><code>lowercase($value)</code></li>\n<li><code>matches($var,$regx)</code></li>\n<li><code>matches_regex($var,$regx)</code></li>\n<li><code>netstringlength($value)</code></li>\n<li><code>not_matches($var,$regx)</code></li>\n<li><code>not_only_numbers($var)</code></li>\n<li><code>numberformat($value, $precision)</code></li>\n<li><code>outofrange($var,$start,$end)</code></li>\n<li><code>pow($exp,$base)</code></li>\n<li><code>setval($value)</code></li>\n<li><code>sgn($value)</code></li>\n<li><code>stringlength($value)</code></li>\n<li><code>trim($value)</code></li>\n<li><code>uppercase($value)</code></li>\n</ul>\n<h2 id=\"not_accepted_functions\">Not Accepted Functions</h2>\n<p>The following functions are NOT accepted:</p>\n<ul>\n<li><code>ceil($value)</code></li>\n<li><code>floor($value)</code></li>\n<li><code>get_value($value)</code></li>\n<li><code>iseven($value)</code></li>\n<li><code>isodd($value)</code></li>\n<li><code>max($value1,$value2)</code></li>\n<li><code>min($value1,$value2)</code></li>\n<li><code>neg($value)</code></li>\n<li><code>pos($value)</code></li>\n<li><code>round($value)</code></li>\n<li><code>sqr($value)</code></li>\n<li><code>sqrt($value)</code></li>\n<li><code>truncate($value)</code></li>\n</ul>\n<h2 id=\"date_functions\">Date Functions</h2>\n<p>To use date functions, select c_0001 as the variable to be recoded and use the following in the Value field:</p>\n<h3 id=\"h_01J3QBPTBXFME94ERPWQVWSQG8\">CURDATE()</h3>\n<p>This writes the current date in the format YYYY-MM-DD to c_0001 (e.g., 2012-08-23)</p>\n<h3 id=\"h_01J3QBPTBXM408HT02VZ2H5ZP7\">YEAR(CURDATE())</h3>\n<p>This returns the current year.</p>\n<p> </p>\n<h1 id=\"h_01HGKSMPRSER9ENY5QWWRZZ863\">FAQ</h1>\n<h3 id=\"faq_2\">Are all standard SQL functions supported?</h3>\n<p>No, not all standard SQL functions are supported. The guide provides a list of accepted and not accepted functions. It's important to refer to these lists when working with SQL in this specific context.</p>\n<h3 id=\"faq_3\">How can I use date functions in this system?</h3>\n<p>To use date functions, you should select c_0001 as the variable to be recoded. You can then use functions like CURDATE() to get the current date or YEAR(CURDATE()) to get the current year.</p>\n</article>",
    "user_segment_ids": [
        360000084973
    ]
}