{
    "id": 20714731619474,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20714731619474.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20714731619474-Smarty-Implementation-in-EFS-DXI",
    "author_id": 369584192734,
    "comments_disabled": false,
    "draft": false,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20714530860562,
    "created_at": "2024-08-12T16:56:59Z",
    "updated_at": "2024-09-10T14:18:48Z",
    "name": "Smarty Implementation in EFS/DXI",
    "title": "Smarty Implementation in EFS/DXI",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-09-10T14:18:46Z",
    "user_segment_id": 360000084973,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<h1 id=\"h_01J7E4MR1F8X6B0ZGAMQ9NZH1D\">Overview</h1>\n<p>Smarty is a web template engine written in PHP that facilitates the separation of application logic from presentation. This allows developers to manage the front-end and back-end of web applications more efficiently.<br>It uses special tags within documents to generate web content, making it easier for web designers to work without needing extensive PHP knowledge.<br>Table of Contents</p>\n<ul>\n<li><a href=\"#header-3\">Official Smarty documentation</a></li>\n<li><a href=\"#header-4\">Security mode</a></li>\n<li><a href=\"#header-5\">Smarty Plugins</a></li>\n<li><a href=\"#header-6\">Usage examples</a></li>\n<li><a href=\"#header-7\">What Smarty in EFS/surveys also is capable of</a></li>\n</ul>\n<h1 id=\"header-1\">Information about Smarty</h1>\n<p>This page shall include information about the template engine Smarty relevant for EFS Technical Support.</p>\n<h2 id=\"header-3\">Official Smarty documentation</h2>\n<p>The official Smarty documentation can be found here:</p>\n<ul>\n<li>\n<p>DE: <a href=\"http://www.smarty.net/docsv2/de/\"><u>http://www.smarty.net/docsv2/de/</u></a></p>\n</li>\n<li>\n<p>EN: <a href=\"http://www.smarty.net/docsv2/en/\"><u>http://www.smarty.net/docsv2/en/</u></a></p>\n</li>\n</ul>\n<h2 id=\"header-4\">Security mode</h2>\n<ul>\n<li>\n<p>$security = TRUE, see official documentation page: <a href=\"http://www.smarty.net/docsv2/de/variable.security.tpl\"><u>security</u></a>, <a href=\"http://www.smarty.net/docsv2/de/variable.security.settings.tpl\"><u>security settings</u></a></p>\n</li>\n<li>\n<p>The security mode always is active if the \"setup_version\" config flag is &gt;=7.1 or if the \"high security mode\" config flag is set to true.</p>\n</li>\n<li>\n<p>If the security mode is active by default all Smarty functions are deactivated. There is a whitelist to explicitly activate special Smarty functions.</p>\n</li>\n<li>\n<p>Which functions are whitelisted? <strong>ggf. noch nachpflegen</strong></p>\n</li>\n</ul>\n<p> </p>\n<h2 id=\"header-5\">Smarty Plugins</h2>\n<p>Smarty plugins available for EFS in general:</p>\n<ul>\n<li>\n<p>can be found here: <strong>wcp/3rd/smarty/plugins</strong></p>\n</li>\n</ul>\n<p>Smarty plugins available for EFS Survey:</p>\n<ul>\n<li>\n<p>can be found here: <strong>www/themes/plugins</strong></p>\n<ul>\n<li>\n<p>e.g. function.debuginfo.php:</p>\n<ul>\n<li>\n<p>function: \"smarty_function_debuginfo\"</p>\n</li>\n<li>\n<p>The text \"smarty_function\" is removed by EFS when the smarty engine is initialised.</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"header-6\">Usage examples</h2>\n<p>Smarty can be used in</p>\n<ul>\n<li>\n<p>layout templates of Surveys</p>\n</li>\n<li>\n<p>mail templates</p>\n</li>\n<li>\n<p>templates of panel websites</p>\n</li>\n</ul>\n<p>Show debug console in Surveys:</p>\n<ul>\n<li>\n<p>Navigate <strong>Survey Menu &gt;&gt; Layout &gt;&gt; Pro Editor</strong></p>\n</li>\n<li>\n<p>open e.g page_main.tpl template</p>\n</li>\n<li>\n<p>add</p>\n<pre><code class=\"language-text\">{debug}</code></pre>\n<p>within the code</p>\n</li>\n<li>\n<p>Open (preview of ) survey</p>\n</li>\n</ul>\n<p>Show debug console on panel website:</p>\n<ul>\n<li>\n<p>Navigate to <strong>Website &gt;&gt; Select language version &gt;&gt; Settings &gt;&gt; Debugging</strong></p>\n</li>\n<li>\n<p>select \"Show debug information on the website\"</p>\n</li>\n<li>\n<p>Add your IP address to text field \"IP address range\"</p>\n</li>\n<li>\n<p>Login to the panelwebsite</p>\n</li>\n</ul>\n<h2 id=\"header-7\">What Smarty in EFS/surveys also is capable of</h2>\n<pre><code class=\"language-text\">functions:\n\n- assign                    =&gt; {assign var=\"varname\" value=\"value\"}                                                             =&gt; Assign variable at runtime\n- append                    =&gt; {append var=\"arrayname\" value=\"testvalue\" index=10}                                              =&gt; Assign array values at runtime  \n- counter                   =&gt; {counter start=0 skip=2 assign=\"counter\"} -&gt; iterate through {counter}                           =&gt; Counter that works as an Iterator!!!!!\n- cycle                     =&gt; {cycle values=\"val1,val2,val3\"} -&gt; iterator in foreach                                           =&gt; Cycling though predefined values -&gt; Iterator!!!!\n- debug                     =&gt; {debug}                                                                                          =&gt; Print debug console\n- eval                      =&gt; {eval var=\"SMARTY_CODE\"}                                                                         =&gt; Parse Smarty code\n- get_dispcode              =&gt; {get_dispcode} -&gt; assigns to {$dispcode}                                                         =&gt; Get Disposition code (not in preview)\n- html_checkboxes           =&gt; {html_checkboxes name=\"id\" options=$name selected=\"ahhh\" separator=\"&lt;br /&gt;\"}                     =&gt; Print checkboxes for array of values\n- html_image                =&gt; {html_image file=\"images/someImage.jpg\"}                                                         =&gt; Print html images\n- html_options              =&gt; &lt;select name=\"customer_id\"&gt;{html_options values=$name output=$name selected=$name[2]}&lt;/select&gt;   =&gt; Add options from array to select box\n- html_radios               =&gt; {html_radios name=\"id\" options=$name selected=2 separator=\"&lt;br /&gt;\"}                              =&gt; Print radiobuttons from array\n- html_select_date          =&gt; {html_select_date}                                                                               =&gt; Three dropdowns Y - M - D\n- html_select_time          =&gt; {html_select_time}                                                                               =&gt; Three dropdowns H - M - S\n- html_table                =&gt; {html_table loop=$name}                                                                          =&gt; print html table from array\n- in_array                  =&gt; {if in_array(\"John\", $name)} {/if}                                                               =&gt; Check if value is in array\n- labelall                  =&gt; {labelall var=2 label=$name seperator=\"&lt;br /&gt;\"}                                                  =&gt; Print array values with seperator\n- mailto                    =&gt; {mailto address=\"frederik.wauters@questback.com\"}                                                =&gt; Set Mailto Tag\n- math                      =&gt; {math equation=\"x + y\" x=4 y=5}                                                                  =&gt; Fancy ... Parse any mathematical equasion\n- popup_init                =&gt; {popup_init src=\"/layout/lib/js/overlib/overlib.js\"}                                             =&gt; Called a popup but it's more like a mouse over hint\n- popup                     =&gt; &lt;a href=\"/\" {popup text=\"This link takes you to my page!\"}&gt;mypage&lt;/a&gt; (More like a hover)        =&gt; Called a popup but it's more like a mouse over hint\n- var_dump                  =&gt; {var_dump var=$variable}                                                                         =&gt; Print varibale using var_dump\n- fetch                     =&gt; {fetch file=\"http://SOMEFILE\" assing=\"variable\"}                                                 =&gt; Loads file and assigns to variable -&gt; Fancy\n\nmodifiers:\n\n- cat                       =&gt; {$variable|cat:\" concat string\"}                                                                 =&gt; concatination\n- count_characters          =&gt; {$variable|count_characters}                                                                     =&gt; counting chars\n- count_paragraphs          =&gt; {$variable|count_paragraphs}                                                                     =&gt; counting paragraphs\n- count_sentences           =&gt; {$variable|count_sentences}                                                                      =&gt; counting sentences\n- count_words               =&gt; {$variable|count_words}                                                                          =&gt; counting words\n- date_format               =&gt; {$smarty.now|date_format:\"%H:%M:%S\"}                                                             =&gt; Format\n- debug_print_var           =&gt; {$variable|debug_print_var}                                                                      =&gt; basically a print_r\n- default                   =&gt; {$variable|default:'Default string if variable is empty'}                                        =&gt; Fallback for empty var\n- escape                    =&gt; {$variable|escape:\"html\"}                                                                        =&gt; Escape ... \n- indent                    =&gt; {$variable|indent:10}  -&gt; only in &lt;pre&gt;                                                          =&gt; Indents string X spaces\n- lower                     =&gt; {$variable|lower}                                                                                =&gt; String to lower\n- nl2br                     =&gt; {$variable|nl2br}                                                                                =&gt; HTMLify newlines\n- regex_replace             =&gt; {$variable|regex_replace:\"/[\\r\\t\\n]/\":\" \"}                                                       =&gt; regex replace\n- replace                   =&gt; {$variable|replace:\"Bob\":\"Hans\"}                                                                 =&gt; well ... it replaces ^^\n- round                     =&gt; {$a-$b|round:2}                                                                                  =&gt; Print with rounding precision\n- spacify                   =&gt; {$variable|spacify}                                                                              =&gt; Adds Spaces between Chars\n- string_format             =&gt; {$variable|string_format:\"%.2f\"}                                                                 =&gt; See PHP's sprint_f\n- strip                     =&gt; {$variable|strip}                                                                                =&gt; Removes spaces and linebreaks\n- strip_tags                =&gt; {$variable|strip_tags}                                                                           =&gt; See PHP's strip tags\n- to_timestamp              =&gt; {\"2017-02-02 00:00:00\"|to_timestamp}                                                             =&gt; Timestamp conversion\n- truncate                  =&gt; {$variable|truncate:30:\"---\"}                                                                    =&gt; Cut string at X and add some other stuff\n- upper                     =&gt; {$variable|upper}                                                                                =&gt; Upper Case\n- utf8_encode               =&gt; {$variable|utf8_encode}                                                                          =&gt; Encodes ... in utf8 ... duh!\n- wordwrap                  =&gt; {$artikelTitel|wordwrap:50}                                                                      =&gt; New line after 50 chars\n</code></pre>",
    "user_segment_ids": [
        360000084973
    ]
}