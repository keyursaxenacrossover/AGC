{
    "id": 20716442506130,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20716442506130.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20716442506130-Tivian-Access-Architecture-and-Flows",
    "author_id": 369584192734,
    "comments_disabled": false,
    "draft": false,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20714711445138,
    "created_at": "2024-08-12T19:04:40Z",
    "updated_at": "2024-08-22T13:22:40Z",
    "name": "Tivian Access Architecture and Flows",
    "title": "Tivian Access Architecture and Flows",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-08-22T13:22:38Z",
    "user_segment_id": 360000084973,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<h1 id=\"h_01J5WZ5RS47RT76Q4CJHZBZ1S5\">Table of Contents</h1>\n<ul>\n<li>\n<a href=\"#header-1\">Architecture Overview</a>\n<ul>\n<li><a href=\"#header-3\">Connecting external AD/LDAP</a></li>\n</ul>\n</li>\n<li>\n<a href=\"#header-1\">Authentication</a>\n<ul>\n<li>\n<a href=\"#header-3\">Code Flow</a>\n<ul>\n<li><a href=\"#header-5\">Implicit Flow</a></li>\n</ul>\n</li>\n<li><a href=\"#header-7\">Session Management</a></li>\n<li><a href=\"#header-8\">Logout</a></li>\n<li><a href=\"#header-9\">Create new EFS account user</a></li>\n<li><a href=\"#header-10\">Update existing EFS user account</a></li>\n<li><a href=\"#header-11\">Create Portal</a></li>\n<li><a href=\"#header-12\">Assign Participant to Portal</a></li>\n<li><a href=\"#header-13\">Sign in to portal</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"header-1\">Architecture Overview</h1>\n<p>The overall architecture consists of several high level services and components.</p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20907732649362\"></p>\n<p> </p>\n<h2 id=\"header-3\">Connecting external AD/LDAP</h2>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20907702364178\"></p>\n<h1 id=\"01J5X3KRD8Q2D1Z9WP4AP6RVNT\">Authentication</h1>\n<h2 id=\"01J5X3KRD85C36V1VMVTST5XKD\">Code Flow</h2>\n<p> </p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20909657905170\" alt=\"Authentication Code Flow - EFS Admin __ IdP(3).png\"></p>\n<pre><code class=\"language-text\">title Authentication Code Flow - EFS Admin &lt;&gt; IdP\n \nparticipant User (Browser)\nparticipant IdP\nparticipant EFS\n \n \nnote right of EFS: application secret is set\nUser (Browser)-&gt;EFS: Enter landing page\nEFS-&gt;User (Browser): Redirect to IdP\nUser (Browser)-&gt;IdP: Follow Redirect\nIdP-&gt;User (Browser):  Show login page\nUser (Browser)-&gt;IdP: Enter login credentials, click login\nIdP-&gt;+IdP: Validate credentials\nIdP-&gt;User (Browser): Redirect back with Code and send master session cookie\nUser (Browser)-&gt;EFS: Follow Redirect\nEFS-&gt;IdP: Use code and application secret to ask for Access and Refresh token\nIdP-&gt;+EFS: Access and refresh token\nEFS-&gt;EFS: Validate access token\nEFS-&gt;EFS: Store access and refresh token\nEFS-&gt;EFS: Request user existance and authorization\n \nalt authorized and exists\nEFS-&gt;User (Browser): Show admin landing page and send session cookie\nelse not authorized or not exists\nEFS-&gt;User (Browser): Show Error page</code></pre>\n<p> </p>\n<p><br><br></p>\n<h3 id=\"header-5\">Implicit Flow</h3>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20909686625554\" alt=\"Authentication Implicit Flow - Portals __ IdP(2).png\"></p>\n<p> </p>\n<pre><code class=\"language-text\">title Authentication Implicit Flow - Portals &lt;&gt; IdP\n  \nparticipant User (Browser)\nparticipant IdP\nparticipant Portals Frontend\n  \n  \nnote right of Portals Frontend: no application secret needed\nUser (Browser)-&gt;Portals Frontend: Enter landing page\nPortals Frontend-&gt;User (Browser): Store current hash/query status\nPortals Frontend-&gt;User (Browser): Redirect to IdP\nUser (Browser)-&gt;IdP: Follow Redirect\nIdP-&gt;User (Browser):  Show login page\nUser (Browser)-&gt;IdP: Enter login credentials, click login\nIdP-&gt;+IdP: Validate credentials\nIdP-&gt;User (Browser): Redirect back with ID and access token in hash\nUser (Browser)-&gt;Portals Frontend: Follow Redirect\nPortals Frontend-&gt;User (Browser): Store ID and access token\nPortals Frontend-&gt;User (Browser): Restore hash/query state\nalt authorized and exists\nPortals Frontend-&gt;User (Browser): Show portal private home\nelse not authorized or not exists\nPortals Frontend-&gt;User (Browser): Show Error page</code></pre>\n<p> </p>\n<p> </p>\n<p> </p>\n<h2 id=\"header-7\">Session Management</h2>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20909657910162\" alt=\"Session Management - EFS Admin __ IdP(1).png\"></p>\n<p> </p>\n<pre><code class=\"language-text\">title Session Management - EFS Admin &lt;&gt; IdP\n \nparticipant User (Browser)\nparticipant IdP\nparticipant EFS\n \n \nnote right of EFS: User is logged in, server has refresh-token\nUser (Browser)-&gt;EFS: User triggers any route at EFS\nnote right of EFS: Session lifetime is about to expire\nEFS-&gt;IdP: request a new access token using the refresh-token\nalt Refresh token is valid\nIdP-&gt;EFS: send new access token\nEFS-&gt;EFS: validate access token\nEFS-&gt;EFS: Store access token and renew session\nEFS-&gt;User (Browser): respond to the triggered action\nelse Refresh token expired\nEFS-&gt;EFS: remove session\nEFS-&gt;User (Browser): redirect user to IdP\nnote left of User (Browser): start with authentication\nend</code></pre>\n<p> </p>\n<h2 id=\"header-8\">Logout</h2>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20909686630930\" alt=\"Logout - EFS Admin __ IdP.png\"></p>\n<p> </p>\n<pre><code class=\"language-text\">title Logout - EFS Admin &lt;&gt; IdP\n \nparticipant User (Browser)\nparticipant IdP\nparticipant EFS\n \n \nnote right of EFS: User is logged in\nUser (Browser)-&gt;EFS: User triggers logout\nEFS-&gt;EFS: Remove local session\nEFS-&gt;User (Browser): Redirect user to IdP logout\nUser (Browser)-&gt;IdP: Follow Redirect\nIdP-&gt;IdP: Remove master session\nIdP-&gt;User (Browser): Redirect user back to installation\nUser (Browser)-&gt;EFS: Follow redirect\nEFS-&gt;User (Browser): Show logout/login page</code></pre>\n<h2 id=\"header-9\">Create new EFS account user</h2>\n<p> </p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20909657916562\" alt=\"create new account user.png\"></p>\n<p> </p>\n<pre><code class=\"language-text\">title Sync data on create EFS user account\n\nparticipant EFS\nparticipant IdP\n\n\nnote right of EFS: user is logged in and has access rights to create user\nEFS-&gt;EFS: Admin user opens \"create user account\" page\nEFS-&gt;EFS: Admin user enters new account user information \\n (user name, first name, name, email and other necessary information) \nEFS-&gt;EFS: Admin clicks save \nEFS-&gt;EFS: new entry in users table\nEFS-&gt;IdP: GET request to /api/v1/users/[email address]\nIdP-&gt;IdP: Checks if entry exists\nIdP-&gt;EFS: Send response\nnote right of IdP: {email, firstName, lastName}\nalt\nEFS-&gt;EFS: Response user: use insert()\nEFS-&gt;IdP: POST request to /api/v1/users?activate=true\nIdP-&gt;IdP: Creates new IdP entry\nelse\nEFS-&gt;EFS: Response user: use update()\nEFS-&gt;IdP: POST request to /api/v1/users/[oktaId]\nIdP-&gt;IdP: Update IdP entry\nend\nnote right of IdP: {\\n id: string unique identifier, \\n profile: { \\n     email: string email, \\n     login: string email, \\n     firstName: string firstName, \\n     lastName: string lastName \\n }\\n}\nnote right of IdP: @see https://developer.okta.com/docs/reference/api/users/#response-example-10\nIdP-&gt;EFS: Send Response\nalt\nEFS-&gt;EFS: create entry in iam_user_reference table\nelse\nEFS-&gt;EFS: update entry in iam_user_reference table\nend\nEFS-&gt;EFS: show successfully created</code></pre>\n<p class=\"auto-cursor-target\"> </p>\n<h2 id=\"header-10\" class=\"auto-cursor-target\">Update existing EFS user account</h2>\n<p> </p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20909657921298\" alt=\"update account user.png\"></p>\n<div class=\"alert alert-info\" role=\"alert\">\n<p><strong>POST</strong> request is used to update incremental: <a href=\"https://developer.okta.com/docs/reference/api/users/#update-user\">https://developer.okta.com/docs/reference/api/users/#update-user</a></p>\n</div>\n<pre><code class=\"language-text\">title Sync data on update EFS user account\n\nparticipant EFS\nparticipant IdP\n\n\nnote right of EFS: user is logged in and has access rights to update user\nEFS-&gt;EFS: Admin user opens user entry and opens \"change user data\" page\nEFS-&gt;EFS: Admin user changes user information \\n (first name, name) \nEFS-&gt;EFS: Admin clicks save \nEFS-&gt;EFS: entry is updated in users table\nEFS-&gt;EFS: receives uuid for oktaId from iam_user_reference_table\nEFS-&gt;EFS: use update()\nEFS-&gt;IdP: POST request to /api/v1/users/[oktaId] with changed data\nIdP-&gt;IdP: Update IdP entry\nnote right of IdP: {\\n id: string unique identifier, \\n profile: { \\n     email: string email, \\n     login: string email, \\n     firstName: string firstName, \\n     lastName: string lastName \\n }\\n}\nnote right of IdP: @see https://developer.okta.com/docs/reference/api/users/#response-example-10\nIdP-&gt;EFS: Send Response\nEFS-&gt;EFS: update updated_at in iam_user_reference table\nEFS-&gt;EFS: show successfully updated</code></pre>\n<p class=\"auto-cursor-target\"> </p>\n<h2 id=\"header-11\" class=\"auto-cursor-target\">Create Portal</h2>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20909657924498\" alt=\"new_portal.png\"></p>\n<p> </p>\n<pre><code class=\"language-text\">title Create Portal and receive client_id from IdP\n\nparticipant Portalsadmin\nparticipant IdP\n\nnote right of Portalsadmin: user is logged in and has access rights to create portals\nPortalsadmin--&gt;Portalsadmin: create new portal\nPortalsadmin--&gt;IdP: create application with active=true\nIdP--&gt;Portalsadmin: send client_id\nPortalsadmin--&gt;IdP: add to group\nIdP--&gt;Portalsadmin: send response\nPortalsadmin--&gt;IdP: create trusted origin\nIdP--&gt;Portalsadmin: send response\nnote right of Portalsadmin: in case of existing, catch Exception and ignore\nPortalsadmin--&gt;Portalsadmin: create entry in iam_portal_settings</code></pre>\n<p class=\"auto-cursor-target\"> </p>\n<h2 id=\"header-12\" class=\"auto-cursor-target\">Assign Participant to Portal</h2>\n<p> </p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20909686644882\" alt=\"assign_participant_to_portal.png\"></p>\n<p> </p>\n<pre><code class=\"language-text\">title Assign Participant to Portal\n\nparticipant Portalsadmin\nparticipant IdP\n\nnote right of Portalsadmin: user is logged in and has access rights to invite participiants portals\nPortalsadmin--&gt;Portalsadmin: open newly created portal\nPortalsadmin--&gt;Portalsadmin: open participant section\nPortalsadmin--&gt;Portalsadmin: select participant(s) to invite and invite participant(s)\nPortalsadmin--&gt;IdP: get user by email\nalt\nIdP--&gt;Portalsadmin: no result\nPortalsadmin--&gt;IdP: create user\nIdP--&gt;Portalsadmin: send UserModel\nPortalsadmin--&gt;Portalsadmin: create entry in iam_portals_user_referenc\nelse\nIdP--&gt;Portalsadmin: send UserModel\nPortalsadmin--&gt;Portalsadmin: create entry in iam_portals_user_referenc\nend</code></pre>\n<p class=\"auto-cursor-target\"> </p>\n<h2 id=\"header-13\" class=\"auto-cursor-target\">Sign in to portal</h2>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20909686652946\" alt=\"portal_login.png\"></p>\n<pre><code class=\"language-text\">title Portal login\n\nparticipant PortalFe\nparticipant PortalBe\nparticipant IdP\nparticipant AD\n\nPortalFe--&gt;PortalFe: open http(s)://www.example.com/portals/portal-n\nPortalFe--&gt;PortalBe: receive portal configuration by portalId\nalt:\nPortalBe--&gt;PortalFe: send Status Code 444 (iam_module_active=false)\nPortalFe--&gt;PortalBe: follow usual flow\nPortalBe--&gt;PortalFe: login\nelse:\nPortalBe--&gt;PortalFe: send portal configuration object\nPortalFe--&gt;IdP: redirect to\nIdP--&gt;IdP: LoginProcess by user\nalt:\nnote right of IdP: user exists and has access rights\nIdP--&gt;AD: prompt password\nAD--&gt;AD: sign in\nAD--&gt;IdP: send status\nIdP--&gt;IdP: create session\nIdP--&gt;PortalFe: redirect with id_token and access_token\nPortalFe--&gt;PortalBe: post data to /api/iam/auth/signIn\nPortalBe--&gt;PortalBe: get identity from id_token and access_token\nPortalBe--&gt;PortalBe: check in portal_users_reference\nalt:\nPortalBe--&gt;PortalFe: user not exists\nelse:\nPortalBe--&gt;PortalBe: create X-Authorization token\nPortalBe--&gt;PortalBe: create local session\nPortalBe--&gt;PortalFe: send header and payload\nPortalFe--&gt;PortalFe: show screen after logged in\nend:\nelse:\nnote right of IdP: user does not exists or has no access rights\nAD--&gt;IdP: send status\nIdP--&gt;IdP: show login screen\nend:\nend:</code></pre>\n<p> </p>",
    "user_segment_ids": [
        360000084973
    ]
}