{
    "id": 20717180352274,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20717180352274.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20717180352274-Services",
    "author_id": 369584192734,
    "comments_disabled": false,
    "draft": false,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20714711445138,
    "created_at": "2024-08-12T20:20:32Z",
    "updated_at": "2024-08-29T08:12:59Z",
    "name": "Services",
    "title": "Services",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-08-29T08:12:56Z",
    "user_segment_id": 360000084973,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<h1 id=\"h_01J6EJSM73YRCV26WCWQFDYZDK\">Overview</h1>\n<p>This guide outlines the steps to set up a password inline hook and static service, which allows for the migration of user passwords without requiring them to reset or receive activation emails. This method ensures a seamless transition for users, making their experience identical to a standard login.</p>\n<p> </p>\n<ul>\n<li><a href=\"#h_01J6EHQR8WQFVNHWV03W3NFD31\">Password Inline Hook Setup</a></li>\n<li><a href=\"#h_01J6EHQFR2ND5ET5D4P0QV67Y6\">Static Service</a></li>\n</ul>\n<p> </p>\n<h2 id=\"h_01J6EHQR8WQFVNHWV03W3NFD31\">Password Inline Hook Setup</h2>\n<p>When migrating users with a password from one Okta account to another we have two options:</p>\n<ol>\n<li>\n<p>Just copy users from one account to the other without setting any password, users will get an activation email in that case</p>\n</li>\n<li>\n<p>Use a passwort import inline hook from Okta to migrate the passwords</p>\n</li>\n</ol>\n<p>The scope of this page if the second option that might be desired by the customer.</p>\n<p> </p>\n<h2 id=\"header-1\">Resources</h2>\n<h3 id=\"header-3\">Repositories</h3>\n<ul>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_resource_helm_okta-hooks/src/master/\">Helm Okta Hooks</a></p>\n</li>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_server_application_okta-hooks/src/master/\">Source Code Okta Hooks</a></p>\n</li>\n</ul>\n<h3 id=\"header-5\">Pipelines</h3>\n<ul>\n<li>\n<p><a href=\"https://concourse.live.tivian.com/teams/engineering/pipelines/build.tivian_resource_helm_okta-hooks\">Helm Okta Hooks</a></p>\n</li>\n<li>\n<p><a href=\"https://concourse.live.tivian.com/teams/engineering/pipelines/build.tivian_server_application_okta-hooks\">Build Image Okta Hooks</a></p>\n</li>\n</ul>\n<p> </p>\n<h3 id=\"header-7\">Basic Idea</h3>\n<p>The basic idea is describe in the following links:</p>\n<p><a href=\"https://developer.okta.com/blog/2020/09/18/password-hook-migration\" data-card-appearance=\"inline\">https://developer.okta.com/blog/2020/09/18/password-hook-migration</a></p>\n<p><a href=\"https://developer.okta.com/docs/reference/password-hook/#value\" data-card-appearance=\"inline\">https://developer.okta.com/docs/reference/password-hook/#value</a></p>\n<p> </p>\n<p>On our end the technical components and the flow would look like the following:</p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21034905149970\" alt=\"Okta Migration Tivian Questback - Inline Hook(2).png\"></p>\n<p> </p>\n<p>A user would not see the inline hook. The workflow for a user looks like a normal login.</p>\n<p> </p>\n<h2 id=\"header-8\">How to configure?</h2>\n<h3 id=\"header-10\">Service</h3>\n<p>The service will be deployed in the dev-qa and in the production cluster. It has some configuration:</p>\n<p><code>auth token</code></p>\n<p>The auth token is a string that will be sent via header to create trust between Okta and the inline hook service. It can be a random string. It has to be configured in the helm release (see values file of <a href=\"https://bitbucket.org/qbengineering/tivian_resource_helm_okta-hooks/src/master/\" data-card-appearance=\"inline\">https://bitbucket.org/qbengineering/tivian_resource_helm_okta-hooks/src/master/</a> ) and in Okta (see below)</p>\n<p> </p>\n<p><code>oktaQuestbackBaseUrl</code></p>\n<p>This URL is the base URL to the Okta where the service should validate the credentials of the user.</p>\n<p>For <strong>dev-qa</strong> it will be: <a href=\"https://questback-poc.oktapreview.com\">https://questback-poc.oktapreview.com</a></p>\n<p>For <strong>production </strong>it will be: <a href=\"https://questback.okta.com\">https://questback.okta.com</a></p>\n<p> </p>\n<h3 id=\"header-11\">In Okta</h3>\n<p><strong>Name: </strong>Some good name</p>\n<p><strong>URL:</strong> The base URL to the inline hook service adding the path <code>/inline-hooks/importpassword</code></p>\n<p><strong>Authentication field:</strong> authorization</p>\n<p><strong>Authentication secret:</strong> The secret token prefixed with <code>Bearer </code></p>\n<p>Nothing else has to be configured. The secret token will be stored by IT OPs/2nd LvL Support</p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21034905150482\" alt=\"grafik-20211222-120227.png\"></p>\n<p> </p>\n<h2 id=\"h_01J6EHQFR2ND5ET5D4P0QV67Y6\">Static Service</h2>\n<p>The Okta Login screen uses static assets that are delivered via a small nginx service in the current DE cluster.</p>\n<p> </p>\n<h2 id=\"01J6EHQ7KF52AKQE7TE58E1W6J\">Resources</h2>\n<p>The following repositories are used by this service:</p>\n<ul>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_resource_helm_static-okta-assets/src/master/\">Helm Chart for Static Assets</a></p>\n</li>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_resource_assets_static-okta-assets-login/src/master/\">Static Assets for Login</a></p>\n</li>\n<li>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_resource_assets_static-okta-assets-email/src/master/\">Email Customizations + Static Assets for Emails</a></p>\n</li>\n</ul>\n<p> </p>\n<p>With the following pipelines in concourse:</p>\n<ul>\n<li>\n<p><a href=\"https://concourse.live.questback.com/teams/engineering/pipelines/BUILD%20-%20tivian_resource_helm_static-okta-assets\">Static Assets Helm Chart</a></p>\n</li>\n<li>\n<p><a href=\"https://concourse.live.questback.com/teams/engineering/pipelines/BUILD%20-%20tivian_resource_assets_static-okta-assets\">Static Assets Image</a> (Combines the assets from both the login and email repository in one image)</p>\n</li>\n</ul>\n<p> </p>\n<p><a href=\"https://bitbucket.org/qbengineering/tivian_resource_tools_okta-local-demo/src/master/\">Local Demo (Test Application)</a> (can be used instead of EFS/Portals/… to test Okta Authentication)</p>\n<p> </p>\n<h2 id=\"01J6EHQ7KFA453MFYKRWM34H51\">Basic Idea</h2>\n<p>The below picture shows roughly where the service and other resources are located:</p>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21034844929042\" alt=\"Okta Migration Tivian Questback - Static Service.png\"></p>\n<h3 id=\"01J6EHQ7KF3W8XMSY2BVX78DPN\">Description:</h3>\n<p>The Okta Tivian is an Okta tenant used by our clients. Inside there are configuration options for customization. They contain static HTML files containing the basic login screen and a basic error screen but they only contain one HTML file.</p>\n<p>To also serve additional static assets like images, javascript and css there is an Okta static service in our kubernetes cluster that only contains an nginx with the static resources that are loaded by the customized login screen.</p>\n<p>Any arbitrary app (like EFS or Tivian Analytics) will redirect to Okta and Okta will show the login screen (index.html) and load the static assets for that purpose.</p>\n<p> </p>\n<p><strong>Only Tivian Okta</strong></p>\n<p>Current there are two Okta tenants. Only the new tenant contains this kind of customization. The old that is fading out does not use that customization.</p>",
    "user_segment_ids": [
        360000084973
    ]
}