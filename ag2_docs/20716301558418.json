{
    "id": 20716301558418,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20716301558418.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20716301558418-Tivian-Access-Sessions-Explained",
    "author_id": 369584192734,
    "comments_disabled": false,
    "draft": false,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20714711445138,
    "created_at": "2024-08-12T18:58:26Z",
    "updated_at": "2024-08-22T13:32:10Z",
    "name": "Tivian Access Sessions Explained",
    "title": "Tivian Access Sessions Explained",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-08-22T13:32:09Z",
    "user_segment_id": 360000084973,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<h1 id=\"h_01J5X456Y2VZEZAD12C0HK02BE\">Table of Contents</h1>\n<ul>\n<li>\n<a href=\"#header-1\">Overview</a>\n<ul>\n<li><a href=\"#header-3\">Examples for user flows with Active/Inactive Sessions</a></li>\n<li><a href=\"#header-4\">Logout</a></li>\n<li><a href=\"#01J5X4BYKHC2NFJFY47QZRD0A0\">Default Session Times</a></li>\n<li><a href=\"#01J5X4BYKJBQVSMPGXT5Y5M57H\">Where are Sessions stored in our current Architecture?</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"header-1\">Overview</h1>\n<p>Sessions should fulfill the following purpose: Once you authenticate you are remembered for x time and do not need to authenticate again.</p>\n<p>A <strong>session</strong> (in the case of a website) is always <strong>bound to the environment</strong> you are currently in. Normally this is defined by the user agent you are using (e.g: Google Chrome, Firefox). This means if you switch the context (e.g: login to chrome and then open a link in another browser), you will need to authenticate again</p>\n<p>In the context of IAM the following sessions exists and should be thought of:</p>\n<ul>\n<li>\n<p><strong>Tivian Identity Provider</strong> <strong>Session </strong>- This is the session which enables SSO for the products/apps of the Tivian Platform. Since the Identity Provider is the centralised place to authenticate, <strong>this session decides if you need to provide credentials again or not</strong>.</p>\n</li>\n<li>\n<p><strong>Application Session</strong> - The session an application creates for a user when the user authenticates for the application. <strong>This session decides if a user can do actions in the application</strong> or if another authentication at the Identity Provider is required.</p>\n</li>\n<li>\n<p><strong>External Identity Provider Session - </strong>The session which is created for employees in the “<strong>Intranet</strong>” of a client. This session is usually used to <strong>enable SSO for apps the employees use</strong>. In case of the federation with an external Identity Provider this session is also used to resolve the delegated authentication request. <strong>This session decides if you need to provide credentials again or not</strong></p>\n</li>\n</ul>\n<p>All of the above <strong>sessions</strong> can have <strong>different durations</strong>. A typical Identity Provider session is longer than an application session, because if an application session runs out and the Identity Provider session is still valid, no additional authentication is needed and the user experience is the same as with a longer application session.</p>\n<p>The difference of application session times actually should only affect security. In case there is a short session time the impact of stealing one session token is smaller than with a long session time. A longer application session means that it’s checked fewer times if the user is actually still logged in at the Identity Provider.</p>\n<h2 id=\"header-3\">Examples for user flows with Active/Inactive Sessions</h2>\n<p>Authentication setup is always: App → Identity Provider → External Identity Provider</p>\n<h3 id=\"h_01J5X47WVRGRJJN8BGM55ZJQY2\">1. User has no active Session</h3>\n<p>When the user tries to access the <strong>app</strong> but he has no active session (=unauthenticated) he will be redirected to the <strong>Identity Provider</strong>.<br>If the <strong>Identity Provider</strong> also has no session he will be further redirected to the <strong>external Identity Provider</strong>. If there is also no session, the user has to authenticate there and a session is created at the <strong>external Identity Provider</strong>. <br>After that the user will be authenticated at the <strong>Identity Provider</strong> using the <strong>external Identity Provider</strong> session, and a session is created for the user at the <strong>Identity Provider</strong>. Last but not least, the <strong>app</strong> will also create a session for the user.</p>\n<p><span style=\"color: #36b37e;\">App → Identity Provider → External Identity Provider → Authenticate → </span><strong><span style=\"color: #36b37e;\">+</span></strong><span style=\"color: #36b37e;\">Session (External Identity Provider) → </span><strong><span style=\"color: #36b37e;\">+</span></strong><span style=\"color: #36b37e;\">Session (Identity Provider) → </span><strong><span style=\"color: #36b37e;\">+</span></strong><span style=\"color: #36b37e;\">Session (App)</span></p>\n<h3 id=\"h_01J5X48687HM87MDHRA5RYNC66\">2. User has only external Identity Provider Session</h3>\n<p>The same as 1.), but when the <strong>Identity Provider</strong> send the user to the <strong>external Identity Provider</strong>, the user will not need to provide any credentials.</p>\n<p><span style=\"color: #36b37e;\">App → Identity Provider → External Identity Provider → </span><strong><span style=\"color: #36b37e;\">+</span></strong><span style=\"color: #36b37e;\">Session (Identity Provider) → </span><strong><span style=\"color: #36b37e;\">+</span></strong><span style=\"color: #36b37e;\">Session (App)</span></p>\n<h3 id=\"h_01J5X48KK3WGGQ1BHYHPXCKFAA\">3. User has Identity Provider Session</h3>\n<p>This scenario is different, because the user will <strong>never even visit the external Identity Provider</strong></p>\n<p><span style=\"color: #36b37e;\">App → Identity Provider → App</span></p>\n<h3 id=\"h_01J5X48RD69HQZBV26XP2FSC57\">4. User has app session</h3>\n<p>The user <strong>will not leave the app</strong> and is directly able to perform his work</p>\n<p><span style=\"color: #36b37e;\">App </span></p>\n<p> </p>\n<p>All scenarios where e.g: an app session exists, no Identity Provider session but an external Identity Provider Session are irrelevant because the user flow will not visit those places (because he will never leave the app, see point 4).</p>\n<h2 id=\"header-4\">Logout</h2>\n<p>Logging out means the following: A session is cleared and the user is forced to provide his credentials again before continuing his work. But not all logouts are equal. A logout can take place in the <strong>Identity Provider </strong>(which will just invalidate the Identity Provider session) or it takes place in the <strong>app</strong> (where it can either clear the app session alone or the app session + the Identity Provider session)</p>\n<p>The <strong>external Identity Provider</strong> session is only invalidated if the user signs out there.</p>\n<p>The different states which can be achieved by that can be seen in the examples above.</p>\n<h2 id=\"01J5X4BYKHC2NFJFY47QZRD0A0\">Default Session Times</h2>\n<p>(Please note that these are times are configured right now in okta)</p>\n<p><strong>Identity Provider Session</strong> (Okta): 2 hours</p>\n<p><strong>Application Session</strong> (EFS): 1 hour </p>\n<p><strong>Application Session</strong> (Portals): 1 day </p>\n<p><strong>External Identity Provider Session</strong>: Not configurable by us, only the client can change that</p>\n<h2 id=\"01J5X4BYKJBQVSMPGXT5Y5M57H\">Where are Sessions stored in our current Architecture?</h2>\n<p><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/20910035913106\" alt=\"Session Lifetimes - Schön.png\"></p>\n<p style=\"text-align: center;\">“Locations” of sessions in the architecture diagram</p>",
    "user_segment_ids": [
        360000084973
    ]
}