{
    "id": 20383087387922,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20383087387922.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20383087387922-Portals-Extension-Module",
    "author_id": 369584192734,
    "comments_disabled": true,
    "draft": false,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20234537912850,
    "created_at": "2024-07-26T10:21:54Z",
    "updated_at": "2024-08-28T10:00:13Z",
    "name": "Portals Extension Module",
    "title": "Portals Extension Module",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-07-26T10:27:12Z",
    "user_segment_id": null,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<h1 id=\"h_01HGKSMPRS9JVGC6E9EA3DB98K\" class=\"wysiwyg-text-align-justify\">Overview</h1>\n<p class=\"wysiwyg-text-align-justify\">This article provides comprehensive documentation on the Portals Extension Module, which allows integration of third-party content and applications within Portals. It covers various aspects of the API, including initialization, message bus usage, data querying, and interaction with MySight Tableau instances.</p>\n<h1 id=\"h_01HGKSMPRSYYE7GMM7DZ0VCKXK\" class=\"wysiwyg-text-align-justify\">Information</h1>\n<p class=\"wysiwyg-text-align-justify\">The Portals Extension Module documentation is divided into several sections, each focusing on different aspects of the API and its functionality. This guide will help developers integrate their applications with Portals and utilize various features provided by the API.</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li><a href=\"#including-portals-api-in-your-application\">Including Portals API in your application</a></li>\n<li><a href=\"#using-the-portals-message-bus\">Using the Portals message bus</a></li>\n<li><a href=\"#querying-data-from-portals\">Querying data from Portals</a></li>\n<li><a href=\"#trigger-actions-in-portals\">Trigger actions in Portals</a></li>\n<li><a href=\"#accessing-mysight-instances-in-portals\">Accessing MySight instances in Portals</a></li>\n<li><a href=\"#listening-to-mysight-tableau-events\">Listening to MySight Tableau events</a></li>\n<li><a href=\"#use-portals-styles\">Use Portals styles</a></li>\n<li><a href=\"#opening-a-dialog-in-portals\">Opening a dialog in Portals</a></li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\"> </p>\n<h2 id=\"including-portals-api-in-your-application\" class=\"wysiwyg-text-align-justify\">Including Portals API in your application</h2>\n<p class=\"wysiwyg-text-align-justify\"><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21015011247506\" alt=\"ExtensionModule.png\"></p>\n<p class=\"wysiwyg-text-align-justify\">The Extension module allows integration of your application into portals by providing an iFrame for your content and an API for communication with Portals. The module accepts an url and allows dynamic GET parameters to be passed to your application through that url. Just select the participant variables and master data you want to pass to your application and provide names for the GET keys.<br>A portals page can have several Extension modules on a single page and all modules can communicate with each other through the provided message bus in the Portals API.<br>For enhanced data exchange with EFS, we recommend that your application uses the EFS ServiceLayer in the backend to query and update data in EFS.</p>\n<h3 id=\"import\" class=\"wysiwyg-text-align-justify\">Import</h3>\n<p class=\"wysiwyg-text-align-justify\">In your application, you have to import the PortalsAPI JavaScript file in order to be able to use the message bus or other Portals API functions.</p>\n<pre><code class=\"language-js\">&lt;script src=\"https://{yourEFSInstallation}/public/modules/portals/dist/portalsApi/portalsApi-1.0.js\"&gt;&lt;/script&gt;</code></pre>\n<h3 id=\"initialization\" class=\"wysiwyg-text-align-justify\">Initialization</h3>\n<p class=\"wysiwyg-text-align-justify\">After your document has finished loading you need to initialize the api. This registers your document with Portals for messaging.</p>\n<pre><code class=\"language-js\">&lt;script&gt;\n    Questback.portalsApi.initialize()\n        .then(function() {\n            ...\n        }\n        .catch(function(error) {\n            ...\n        });\n&lt;/script&gt;</code></pre>\n<p class=\"wysiwyg-text-align-justify\"> </p>\n<h3 id=\"checking-initialization-status\" class=\"wysiwyg-text-align-justify\">Checking initialization status</h3>\n<p class=\"wysiwyg-text-align-justify\">You can check the initialization status by calling <em>isInitialized</em>, though it is generally recommended to do your api operations in the <em>then</em>-handler of the <em>initialize</em> method as shown above.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.isInitialized();</code></pre>\n<h3 id=\"unregister\" class=\"wysiwyg-text-align-justify\">Unregister</h3>\n<p class=\"wysiwyg-text-align-justify\">You can completely revert the registration of the iFrame and unregister all its handlers by calling <em>unregister</em>.</p>\n<pre><code class=\"language-text\">Questback.portalsApi.unregister();</code></pre>\n<p class=\"wysiwyg-text-align-justify\"> </p>\n<hr>\n<h2 id=\"using-the-portals-message-bus\" class=\"wysiwyg-text-align-justify\">Using the Portals message bus</h2>\n<p class=\"wysiwyg-text-align-justify\">The message bus is intended for communication between extension module iFrames. You can send and listen to your own events and transfer any data you want.</p>\n<h3 id=\"listening-for-messages\" class=\"wysiwyg-text-align-justify\">Listening for messages</h3>\n<p class=\"wysiwyg-text-align-justify\">After the initialization has been completed you can start to register handlers for events from other iFrames. The example code registers a handler for an event called \"myEvent\". This is an event name that you expect other iFrames to send messages for.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.initialize().then(function() {\n    Questback.portalsApi.bus.subscribe('myEvent', function(data) {\n        ...\n    });\n};</code></pre>\n<h3 id=\"sending-messages\" class=\"wysiwyg-text-align-justify\">Sending messages</h3>\n<p class=\"wysiwyg-text-align-justify\">Sending a message to other iFrames is just as simple. You just call the <em>send</em> method with an eventname that you chose and a data object as second parameter.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.bus.send('myEvent', { foo : \"bar\"});</code></pre>\n<p class=\"wysiwyg-text-align-justify\">Just note that you do not get a result back from this call, as it works like a broadcast. Also note that by default the sending iFrame will not receive its own event back, even if it has registered a handler for it. You can supply a third parameter to <em>send</em> with a value of <em>true</em> to force sending the event to the sender iFrame, too.</p>\n<h3 id=\"stop-listening-for-messages\" class=\"wysiwyg-text-align-justify\">Stop listening for messages</h3>\n<p class=\"wysiwyg-text-align-justify\">You can remove handlers for events by an eventname.</p>\n<pre><code class=\"language-text\">Questback.portalsApi.bus.unsubscribe('myEvent');</code></pre>\n<p class=\"wysiwyg-text-align-justify\">Note that this removes all handlers for the given eventname for this iFrame at once.</p>\n<hr>\n<h2 id=\"querying-data-from-portals\" class=\"wysiwyg-text-align-justify\">Querying data from Portals</h2>\n<p class=\"wysiwyg-text-align-justify\">The api supplies a set of methods to request specific data from Portals.</p>\n<h3 id=\"query-portalinfo\" class=\"wysiwyg-text-align-justify\">query.portalInfo</h3>\n<p class=\"wysiwyg-text-align-justify\">Get information about the portal.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.query.portalInfo().then(function(result) {\n    console.log(result.portal.id);\n});</code></pre>\n<h3 id=\"query-user\" class=\"wysiwyg-text-align-justify\">query.user</h3>\n<p class=\"wysiwyg-text-align-justify\">Get the user object of the currently logged in user. Returns null if there is no logged in user.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.query.user().then(function(result) {\n    console.log(result.user);\n});</code></pre>\n<h3 id=\"query-language\" class=\"wysiwyg-text-align-justify\">query.language</h3>\n<p class=\"wysiwyg-text-align-justify\">Get the language object of the currently used language.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.query.language().then(function(result) {\n    console.log(result.language);\n});</code></pre>\n<h3 id=\"query-token\" class=\"wysiwyg-text-align-justify\">query.token</h3>\n<p class=\"wysiwyg-text-align-justify\">Returns the Portals Api token, which can be used in external software to additionally validate the user via EFS web service.</p>\n<pre><code class=\"language-text\">Questback.portalsApi.query.token().then(function(result) {\n    console.log(result.token);\n});</code></pre>\n<p class=\"wysiwyg-text-align-justify\">If the user is logged in, the <em>token</em> field will contain the users api token, which you can validate by calling the following EFS web service. Otherwise, <em>token</em> will be an empty string.</p>\n<pre><code class=\"language-text\">portal.users.getUserDataByToken</code></pre>\n<p class=\"wysiwyg-text-align-justify\">If the token is valid the userId and portalId is returned. Otherwise an exception is thrown. Please refer to the web services documentation for more details on this service call.</p>\n<h3 id=\"query-deviceinfo\" class=\"wysiwyg-text-align-justify\">query.deviceInfo</h3>\n<p class=\"wysiwyg-text-align-justify\">Get information about the client device.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.query.deviceInfo().then(function(result) {\n    console.log(result.device.isMobile);\n});</code></pre>\n<h3 id=\"query-ajax-reserved-for-future-use\" class=\"wysiwyg-text-align-justify\">query.ajax (reserved for future use)</h3>\n<p class=\"wysiwyg-text-align-justify\">Makes an ajax call to the internal portals server API and returns the result. Since Portals itself does not provide a public portals server API, this function is reserved for future use.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.query\n    .ajax('GET', '/api/portal/client/pages')\n    .then(function(result) {\n        console.log(result);\n    })\n    .catch(function(error) {\n        console.log(error);\n    });</code></pre>\n<hr>\n<h2 id=\"trigger-actions-in-portals\" class=\"wysiwyg-text-align-justify\">Trigger actions in Portals</h2>\n<p class=\"wysiwyg-text-align-justify\">The api supplies a set of methods to trigger specific actions in Portals.</p>\n<h3 id=\"trigger-height\" class=\"wysiwyg-text-align-justify\">trigger.height</h3>\n<p class=\"wysiwyg-text-align-justify\">Set the iFrames height to a specified value, given as a string including the unit.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.trigger.height('300px');</code></pre>\n<h3 id=\"trigger-autoheight\" class=\"wysiwyg-text-align-justify\">trigger.autoHeight</h3>\n<p class=\"wysiwyg-text-align-justify\">Set the iFrames height to the height of its content. This is done once per call, not repeatedly. So you have to react to resize events yourself.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.trigger.autoHeight();</code></pre>\n<h3 id=\"trigger-logout\" class=\"wysiwyg-text-align-justify\">trigger.logout</h3>\n<p class=\"wysiwyg-text-align-justify\">Log out the current user from Portals and thus redirect to the configured landing page. The iFrame will be removed from the DOM by this opreation.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.trigger.logout();</code></pre>\n<h3 id=\"trigger-route\" class=\"wysiwyg-text-align-justify\">trigger.route</h3>\n<p class=\"wysiwyg-text-align-justify\">Redirect to the given page slug. The iFrame will be removed from the DOM by this opreation.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.trigger.route('targetPageSlug');</code></pre>\n<hr>\n<h2 id=\"accessing-mysight-instances-in-portals\" class=\"wysiwyg-text-align-justify\">Accessing MySight instances in Portals</h2>\n<p class=\"wysiwyg-text-align-justify\"><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21015041349010\" alt=\"MySightId.png\"></p>\n<p class=\"wysiwyg-text-align-justify\">There are a number of methods to interact with Tableau in a MySight module. For all of these you need the <em>pageModuleIdentifier</em> of a MySight module to target your requests. This identifier is set in the Portals CMS in the settings for the MySight page module and can be reused on other pages for the same or even different Tableau instances.</p>\n<h3 id=\"mysight-vizgetisready\" class=\"wysiwyg-text-align-justify\">mySight.vizGetIsReady</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets whether the onFirstInteractive event has been fired yet.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizGetIsReady(pageModuleIdentifier)\n    .then(function(ready) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizgetaretabshidden\" class=\"wysiwyg-text-align-justify\">mySight.vizGetAreTabsHidden</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets whether the tabs are hidden or not.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizGetAreTabsHidden(pageModuleIdentifier)\n    .then(function(hidden) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizgetistoolbarhidden\" class=\"wysiwyg-text-align-justify\">mySight.vizGetIsToolbarHidden</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets whether the tabs are hidden or not.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizGetIsToolbarHidden(pageModuleIdentifier)\n    .then(function(hidden) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizgeturl\" class=\"wysiwyg-text-align-justify\">mySight.vizGetUrl</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the url of the viz.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizGetUrl(pageModuleIdentifier)\n    .then(function(url) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizgetcurrenturl\" class=\"wysiwyg-text-align-justify\">mySight.vizGetCurrentUrl</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the current url of the viz.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizGetCurrentUrl(pageModuleIdentifier)\n    .then(function(currentUrl) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizgetishidden\" class=\"wysiwyg-text-align-justify\">mySight.vizGetIsHidden</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets whether the viz is hidden or not.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizGetIsHidden(pageModuleIdentifier)\n    .then(function(hidden) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizshow\" class=\"wysiwyg-text-align-justify\">mySight.vizShow</h3>\n<p class=\"wysiwyg-text-align-justify\">Shows the viz.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizShow(pageModuleIdentifier)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizhide\" class=\"wysiwyg-text-align-justify\">mySight.vizHide</h3>\n<p class=\"wysiwyg-text-align-justify\">Hides the viz.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizHide(pageModuleIdentifier)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizdispose\" class=\"wysiwyg-text-align-justify\">mySight.vizDispose</h3>\n<p class=\"wysiwyg-text-align-justify\">Disposes the viz.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizDispose(pageModuleIdentifier)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizgetareautomaticupdatespaused\" class=\"wysiwyg-text-align-justify\">mySight.vizGetAreAutomaticUpdatesPaused</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the status of automatic updates.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizGetAreAutomaticUpdatesPaused(pageModuleIdentifier)\n    .then(function(paused) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizpauseautomaticupdates\" class=\"wysiwyg-text-align-justify\">mySight.vizPauseAutomaticUpdates</h3>\n<p class=\"wysiwyg-text-align-justify\">Pauses automatic updates.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizPauseAutomaticUpdates(pageModuleIdentifier)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizresumeautomaticupdates\" class=\"wysiwyg-text-align-justify\">mySight.vizResumeAutomaticUpdates</h3>\n<p class=\"wysiwyg-text-align-justify\">Resumes automatic updates.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizResumeAutomaticUpdates(pageModuleIdentifier)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-viztoggleautomaticupdates\" class=\"wysiwyg-text-align-justify\">mySight.vizToggleAutomaticUpdates</h3>\n<p class=\"wysiwyg-text-align-justify\">Toggles automatic updates.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizToggleAutomaticUpdates(pageModuleIdentifier)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizrevertall\" class=\"wysiwyg-text-align-justify\">mySight.vizRevertAll</h3>\n<p class=\"wysiwyg-text-align-justify\">Restores the initial state. Note that url parameters will be ignored in this operation and as such the restored state may differ from the real initial state.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizRevertAll(pageModuleIdentifier)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizrefreshdata\" class=\"wysiwyg-text-align-justify\">mySight.vizRefreshData</h3>\n<p class=\"wysiwyg-text-align-justify\">Refreshes data from the server.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizRefreshData(pageModuleIdentifier)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizshowdownloadworkbookdialog\" class=\"wysiwyg-text-align-justify\">mySight.vizShowDownloadWorkbookDialog</h3>\n<p class=\"wysiwyg-text-align-justify\">Shows the download workbook dialog.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizShowDownloadWorkbookDialog(pageModuleIdentifier)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizshowexportimagedialog\" class=\"wysiwyg-text-align-justify\">mySight.vizShowExportImageDialog</h3>\n<p class=\"wysiwyg-text-align-justify\">Shows the export image dialog.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizShowExportImageDialog(pageModuleIdentifier)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizshowexportpdfdialog\" class=\"wysiwyg-text-align-justify\">mySight.vizShowExportPDFDialog</h3>\n<p class=\"wysiwyg-text-align-justify\">Shows the export PDF dialog.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizShowExportPDFDialog(pageModuleIdentifier)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizshowexportdatadialog\" class=\"wysiwyg-text-align-justify\">mySight.vizShowExportDataDialog</h3>\n<p class=\"wysiwyg-text-align-justify\">Shows the export data dialog for the current or a specific sheet.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizShowExportDataDialog(pageModuleIdentifier, sheetName)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizshowexportcrosstabdialog\" class=\"wysiwyg-text-align-justify\">mySight.vizShowExportCrossTabDialog</h3>\n<p class=\"wysiwyg-text-align-justify\">Shows the export cross tab dialog for the current or a specific sheet.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizShowExportCrossTabDialog(pageModuleIdentifier, sheetName)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizshowsharedialog\" class=\"wysiwyg-text-align-justify\">mySight.vizShowShareDialog</h3>\n<p class=\"wysiwyg-text-align-justify\">Shows the share dialog for the current or a specific sheet.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizShowShareDialog(pageModuleIdentifier, sheetName)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-vizsetframesize\" class=\"wysiwyg-text-align-justify\">mySight.vizSetFrameSize</h3>\n<p class=\"wysiwyg-text-align-justify\">Sets the vizs frame size. Note that the min-width might be set to 100% by Portals, taking precedence over any width that is set here.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.vizSetFrameSize(pageModuleIdentifier, width, height)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookgetname\" class=\"wysiwyg-text-align-justify\">mySight.workbookGetName</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the name of the workbook.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.workbookGetName(pageModuleIdentifier)\n    .then(function(name) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookgetsheetsinfo\" class=\"wysiwyg-text-align-justify\">mySight.workbookGetSheetsInfo</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets information about all sheets.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.workbookGetSheetsInfo(pageModuleIdentifier)\n    .then(function(sheetsInfo) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookgetactivesheetname\" class=\"wysiwyg-text-align-justify\">mySight.workbookGetActiveSheetName</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the name of the active sheet.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.workbookGetActiveSheetName(pageModuleIdentifier)\n    .then(function(name) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookgetactivesheetindex\" class=\"wysiwyg-text-align-justify\">mySight.workbookGetActiveSheetIndex</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the index of the active sheet.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.workbookGetActiveSheetIndex(pageModuleIdentifier)\n    .then(function(index) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookactivatesheet\" class=\"wysiwyg-text-align-justify\">mySight.workbookActivateSheet</h3>\n<p class=\"wysiwyg-text-align-justify\">Actives a sheet by its name or index.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.workbookActivateSheet(pageModuleIdentifier, sheetNameOrIndex)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookrevertall\" class=\"wysiwyg-text-align-justify\">mySight.workbookRevertAll</h3>\n<p class=\"wysiwyg-text-align-justify\">Restores the initial state of the workbook. Note that url parameters will be ignored in this operation and as such the restored state may differ from the real initial state.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.workbookRevertAll(pageModuleIdentifier)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookgetparameternames\" class=\"wysiwyg-text-align-justify\">mySight.workbookGetParameterNames</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets a list of the parameter names.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.workbookGetParameterNames(pageModuleIdentifier)\n    .then(function(names) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookgetparametercurrentvalue\" class=\"wysiwyg-text-align-justify\">mySight.workbookGetParameterCurrentValue</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the current value of a parameter.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.workbookGetParameterCurrentValue(pageModuleIdentifier, parameterName)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookgetparameterdatatype\" class=\"wysiwyg-text-align-justify\">mySight.workbookGetParameterDataType</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the data type of a parameter.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.workbookGetParameterDataType(pageModuleIdentifier, parameterName)\n    .then(function(dataType) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookgetparameterallowablevaluestype\" class=\"wysiwyg-text-align-justify\">mySight.workbookGetParameterAllowableValuesType</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the type of allowable values of a parameter.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.workbookGetParameterAllowableValuesType(pageModuleIdentifier, parameterName)\n    .then(function(allowableValuesType) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookgetparameterallowablevalues\" class=\"wysiwyg-text-align-justify\">mySight.workbookGetParameterAllowableValues</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets a list of allowable values of a parameter.</p>\n<pre><code class=\"language-text\">Questback.portalsApi.mySight.workbookGetParameterAllowableValues(pageModuleIdentifier, parameterName)\n    .then(function(allowableValues) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookgetparameterminvalue\" class=\"wysiwyg-text-align-justify\">mySight.workbookGetParameterMinValue</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the min value of a parameter.</p>\n<pre><code class=\"language-text\">Questback.portalsApi.mySight.workbookGetParameterMinValue(pageModuleIdentifier, parameterName)\n    .then(function(minValue) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookgetparametermaxvalue\" class=\"wysiwyg-text-align-justify\">mySight.workbookGetParameterMaxValue</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the max value of a parameter.</p>\n<pre><code class=\"language-text\">Questback.portalsApi.mySight.workbookGetParameterMaxValue(pageModuleIdentifier, parameterName)\n    .then(function(maxValue) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookgetparameterstepsize\" class=\"wysiwyg-text-align-justify\">mySight.workbookGetParameterStepSize</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the step size of a parameter.</p>\n<pre><code class=\"language-text\">Questback.portalsApi.mySight.workbookGetParameterStepSize(pageModuleIdentifier, parameterName)\n    .then(function(stepSize) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookgetparameterdatestepperiod\" class=\"wysiwyg-text-align-justify\">mySight.workbookGetParameterDateStepPeriod</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the date step period of a parameter.</p>\n<pre><code class=\"language-text\">Questback.portalsApi.mySight.workbookGetParameterDateStepPeriod(pageModuleIdentifier, parameterName)\n    .then(function(dateStepPeriod) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-workbookchangeparametervalue\" class=\"wysiwyg-text-align-justify\">mySight.workbookChangeParameterValue</h3>\n<p class=\"wysiwyg-text-align-justify\">Sets a parameter to a given value.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.workbookChangeParameterValue(pageModuleIdentifier, parameterName, value)\n    .then(function(newValue) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetgetname\" class=\"wysiwyg-text-align-justify\">mySight.sheetGetName</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the name of a sheet by its index.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetGetName(pageModuleIdentifier)\n    .then(function(name) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetgetindex\" class=\"wysiwyg-text-align-justify\">mySight.sheetGetIndex</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the index of a sheet by its name.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetGetIndex(pageModuleIdentifier)\n    .then(function(index) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetgetisactive\" class=\"wysiwyg-text-align-justify\">mySight.sheetGetIsActive</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets whether a sheet is active or not.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetGetIsActive(pageModuleIdentifier, sheetNameOrIndex)\n    .then(function(active) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetgetishidden\" class=\"wysiwyg-text-align-justify\">mySight.sheetGetIsHidden</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets whether a sheet is hidden or not.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetGetIsHidden(pageModuleIdentifier, sheetNameOrIndex)\n    .then(function(hidden) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetgettype\" class=\"wysiwyg-text-align-justify\">mySight.sheetGetType</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the type of the currently active or a specific sheet.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetGetType(pageModuleIdentifier, sheetNameOrIndex)\n    .then(function(type) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetgeturl\" class=\"wysiwyg-text-align-justify\">mySight.sheetGetUrl</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the url of the currently active or a specific sheet.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetGetUrl(pageModuleIdentifier, sheetNameOrIndex)\n    .then(function(url) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetgetsize\" class=\"wysiwyg-text-align-justify\">mySight.sheetGetSize</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the size of the currently active or a specific sheet.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetGetSize(pageModuleIdentifier, sheetNameOrIndex)\n    .then(function(size) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetchangesize\" class=\"wysiwyg-text-align-justify\">mySight.sheetChangeSize</h3>\n<p class=\"wysiwyg-text-align-justify\">Sets the size of the active sheet.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetChangeSize(pageModuleIdentifier, sheetSizeOptions)\n    .then(function() {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetgetfilters\" class=\"wysiwyg-text-align-justify\">mySight.sheetGetFilters</h3>\n<p class=\"wysiwyg-text-align-justify\">Gets the filters of a sheet specified by its name.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetGetFilters(pageModuleIdentifier, sheetName)\n    .then(function(filters) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetapplyfilter\" class=\"wysiwyg-text-align-justify\">mySight.sheetApplyFilter</h3>\n<p class=\"wysiwyg-text-align-justify\">Applies the filter for a sheet specified by its name.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetApplyFilter(pageModuleIdentifier, sheetName, fieldName, values, updateType, options)\n    .then(function(fieldName) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetapplyrangefilter\" class=\"wysiwyg-text-align-justify\">mySight.sheetApplyRangeFilter</h3>\n<p class=\"wysiwyg-text-align-justify\">Applies the range filter for a sheet specified by its name.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetApplyRangeFilter(pageModuleIdentifier, sheetName, fieldName, range)\n    .then(function(fieldName) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetapplyrelativedatefilter\" class=\"wysiwyg-text-align-justify\">mySight.sheetApplyRelativeDateFilter</h3>\n<p class=\"wysiwyg-text-align-justify\">Applies the relative date filter for a sheet specified by its name.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetApplyRelativeDateFilter(pageModuleIdentifier, sheetName, fieldName, options)\n    .then(function(fieldName) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetapplyhierarchicalfilter\" class=\"wysiwyg-text-align-justify\">mySight.sheetApplyHierarchicalFilter</h3>\n<p class=\"wysiwyg-text-align-justify\">Applies the hierarchical filter for a sheet specified by its name.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetApplyHierarchicalFilter(pageModuleIdentifier, sheetName, fieldName, values, options)\n    .then(function(fieldName) {\n        ...\n    });</code></pre>\n<h3 id=\"mysight-sheetclearfilter\" class=\"wysiwyg-text-align-justify\">mySight.sheetClearFilter</h3>\n<p class=\"wysiwyg-text-align-justify\">Clears the filter for a sheet specified by its name.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.mySight.sheetClearFilter(pageModuleIdentifier, sheetName, fieldName)\n    .then(function(fieldName) {\n        ...\n    });</code></pre>\n<hr>\n<h2 id=\"listening-to-mysight-tableau-events\" class=\"wysiwyg-text-align-justify\">Listening to MySight Tableau events</h2>\n<p class=\"wysiwyg-text-align-justify\">The api supports registering for a number of Tableau events. The supported events are:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>\n<p>FIRST_INTERACTIVE</p>\n</li>\n<li>\n<p>VIZ_RESIZE</p>\n</li>\n<li>\n<p>TAB_SWITCH</p>\n</li>\n<li>\n<p>FILTER_CHANGE</p>\n</li>\n<li>\n<p>PARAMETER_VALUE_CHANGE</p>\n</li>\n<li>\n<p>MARKS_SELECTION</p>\n</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\">To register a listener for an event use the apis bus methods together with the apis tableau event constants:</p>\n<pre><code class=\"language-text\">Questback.portalsApi.bus.subscribe(\n  Questback.portalsApi.mySight.tableauEventFirstInteractive, function(event) {\n    console.log(event);\n});\n\nQuestback.portalsApi.bus.subscribe(\n  Questback.portalsApi.mySight.tableauEventVizResize, function(event) {\n    console.log(event);\n});\n\nQuestback.portalsApi.bus.subscribe(\n  Questback.portalsApi.mySight.tableauEventFilterChange, function(event) {\n    console.log(event);\n});\n\nQuestback.portalsApi.bus.subscribe(\n  Questback.portalsApi.mySight.tableauEventTabSwitch, function(event) {\n    console.log(event);\n});\n\nQuestback.portalsApi.bus.subscribe(\n  Questback.portalsApi.mySight.tableauEventParameterValueChange, function(event) {\n    console.log(event);\n});\n\nQuestback.portalsApi.bus.subscribe(\n  Questback.portalsApi.mySight.tableauEventMarksSelection, function(event) {\n    console.log(event);\n});</code></pre>\n<p class=\"wysiwyg-text-align-justify\">Note that you will receive events coming from any MySight Tableau instance on the page, so upon receiving an event you might have to make sure that you are only handling events coming from a specific instance by checking the <em>pageModuleIdentifier</em> in the <em>event</em> object.</p>\n<pre><code class=\"language-js\">Questback.portalsApi.bus.subscribe(\n  Questback.portalsApi.mySight.tableauEventVizResize, function(event) {\n    if (event.mysight.pageModuleIdentifier === 'page-module-identifier-to-handle') {\n        // Do something\n    }\n});</code></pre>\n<h2 id=\"use-portals-styles\" class=\"wysiwyg-text-align-justify\">Use Portals styles</h2>\n<p class=\"wysiwyg-text-align-justify\">You can use Portals CSS styles by importing its stylesheets into your iframe. The following examples will guide you through the setup process.</p>\n<h3 id=\"retrieve-file-paths\" class=\"wysiwyg-text-align-justify\">Retrieve file paths</h3>\n<p class=\"wysiwyg-text-align-justify\">First you need to get the paths of the stylesheet files and font definitions:</p>\n<pre><code class=\"language-text\">Questback.portalsApi.initialize().then(function() {\n    Questback.portalsApi.query.portalInfo().then(function(result) {\n        // Continue here with step 7.2\n    });\n});</code></pre>\n<p class=\"wysiwyg-text-align-justify\">The <em>result</em> parameter will contain the necessary information in its <em>layout</em> field:</p>\n<pre><code class=\"language-text\">{\n    portal: {...},\n    layout: {\n        customCss: \"&lt;https://PORTALS-DOMAIN/portals/PORTALS-ID/css/compile.css?v=123456\",&gt;\n        portalsCss: \"&lt;https://PORTALS-DOMAIN/portals/PORTALS-ID/css/custom.css?v=123456\",&gt;\n        extensionCss: \"&lt;https://PORTALS-DOMAIN/portals/PORTALS-ID/css/extension.css?v=123456\",&gt;\n        fontCss: \"&lt;https://fonts.googleapis.com/css?family=Lato\",&gt;\n        fontDefinition: \"'Lato', sans-serif\",\n    }\n}</code></pre>\n<p class=\"wysiwyg-text-align-justify\">These paths do not change for a given portal (besides the value of the cachebuster parameter called <em>v</em>), so it is possible to retrieve them once, store them and hardcode them into your code, to save postMessage requests and improve startup times a little.</p>\n<h3 id=\"importing-the-extension-stylesheet\" class=\"wysiwyg-text-align-justify\">Importing the extension stylesheet</h3>\n<p class=\"wysiwyg-text-align-justify\">After retrieving the stylesheet urls you need to import the files by adding <em>link</em> tags into your documents <em>head</em>:</p>\n<pre><code class=\"language-text\">var head = document.getElementsByTagName('head')[0];\nvar linkExtension = document.createElement('link');\nlinkExtension.setAttribute('rel', 'stylesheet');\nlinkExtension.setAttribute('type', 'text/css');\nlinkExtension.setAttribute('href', result.layout.extensionCss);\nhead.appendChild(linkExtension);</code></pre>\n<p class=\"wysiwyg-text-align-justify\">You should note that it takes some time to retrieve the file from the server, so there is a short time in which your application is rendered without the styles in the file. You might want to prevent your application from beeing shown to the user before the above code has been executed.</p>\n<p class=\"wysiwyg-text-align-justify\">The <em>extension.css</em> is a subset of the portals stylesheet and contains the necessary styles for the most common use cases. If you want to include the complete portals stylesheet you can import <em>result.layout.portalsCss</em> instead of <em>result.layout.extensionCss</em>. But be aware that this might introduce conflicts with existing styles in your application.</p>\n<h3 id=\"importing-the-custom-stylesheet\" class=\"wysiwyg-text-align-justify\">Importing the custom stylesheet</h3>\n<p class=\"wysiwyg-text-align-justify\">If you have added custom css in the <em>Look &amp; Feel</em> section of the CMS, that contains styles which you want to apply to you application, then you should import the <em>custom.css</em> file, too.</p>\n<pre><code class=\"language-text\">var linkCustom = document.createElement('link');\nlinkCustom.setAttribute('rel', 'stylesheet');\nlinkCustom.setAttribute('type', 'text/css');\nlinkCustom.setAttribute('href', result.layout.customCss);\nhead.appendChild(linkCustom);</code></pre>\n<h3 id=\"importing-the-portals-default-font\" class=\"wysiwyg-text-align-justify\">Importing the portals default font</h3>\n<p class=\"wysiwyg-text-align-justify\">To use the same font as your portal use the following code:</p>\n<pre><code class=\"language-text\">if (result.layout.fontCss) {\n    var linkFont = document.createElement('link');\n    linkFont.setAttribute('rel', 'stylesheet');\n    linkFont.setAttribute('type', 'text/css');\n    linkFont.setAttribute('href', result.layout.fontCss);\n    head.appendChild(linkFont);\n\n    // Apply font-family definition\n    var body = document.getElementsByTagName('body')[0];\n    body.style.fontFamily = result.layout.fontDefinition;\n}</code></pre>\n<h3 id=\"using-the-styles\" class=\"wysiwyg-text-align-justify\">Using the styles</h3>\n<p class=\"wysiwyg-text-align-justify\">The <em>extension.css</em> contains classes for the most common use cases.</p>\n<h4 id=\"color-variables\" class=\"wysiwyg-text-align-justify\">Color variables</h4>\n<pre><code class=\"language-text\">/* Color variables definitions */\n:root {\n    --ext-primary-color: #006BFE;\n    --ext-secondary-color: #606c76;\n    --ext-success-color: #2ccc76;\n    --ext-warning-color: #fbbf5f;\n    --ext-danger-color: #fd6e72;\n    --ext-info-color: #006bff;\n    --ext-text-color: #444444;\n    --ext-sidebar-background-color: #0a061d;\n    --ext-sidebar-text-color: #ffffff;\n}</code></pre>\n<h4 id=\"type-color-classes\" class=\"wysiwyg-text-align-justify\">Type color classes</h4>\n<p class=\"wysiwyg-text-align-justify\">Classes exist for the most common type and property combinations:</p>\n<pre><code class=\"language-text\">.ext-text-primary\n.ext-text-secondary\n.ext-text-success\n.ext-text-warning\n.ext-text-danger\n.ext-text-info\n\n.ext-background-primary\n.ext-background-secondary\n.ext-background-success\n.ext-background-warning\n.ext-background-danger\n.ext-background-info\n\n.ext-border-primary\n.ext-border-secondary\n.ext-border-success\n.ext-border-warning\n.ext-border-danger\n.ext-border-info</code></pre>\n<h4 id=\"profile-background-classes\" class=\"wysiwyg-text-align-justify\">Profile background classes</h4>\n<p class=\"wysiwyg-text-align-justify\">The profile background classes exist, too:</p>\n<pre><code class=\"language-text\">.ext-profile-background-0\n.ext-profile-background-1\n.ext-profile-background-2\n.ext-profile-background-3\n.ext-profile-background-4\n.ext-profile-background-5\n.ext-profile-background-6\n.ext-profile-background-7\n.ext-profile-background-8\n.ext-profile-background-9</code></pre>\n<h4 id=\"other-classes\" class=\"wysiwyg-text-align-justify\">Other classes</h4>\n<pre><code class=\"language-text\">.ext-text-color\n.ext-sidebar-background\n.ext-sidebar-text</code></pre>\n<h4 id=\"buttons\" class=\"wysiwyg-text-align-justify\">Buttons</h4>\n<p class=\"wysiwyg-text-align-justify\">You can style your buttons by using the portals button classes:</p>\n<pre><code class=\"language-text\">&lt;button class=\"btn btn--md btn--primary btn--gloss\"&gt;Click&lt;/button&gt;</code></pre>\n<p class=\"wysiwyg-text-align-justify\">The button size can be set by adding one of the following classes:</p>\n<pre><code class=\"language-text\">btn--xs\nbtn--sm\nbtn--md\nbtn--lg</code></pre>\n<p class=\"wysiwyg-text-align-justify\">The type can be set by adding one the following classes:</p>\n<pre><code class=\"language-text\">btn--default\nbtn--primary\nbtn--secondary\nbtn--cancel\nbtn--clear\nbtn--success\nbtn--warning\nbtn--danger\nbtn--info\nbtn--contrast\nbtn--transparent</code></pre>\n<p class=\"wysiwyg-text-align-justify\">To enable hover effects, add the following class:</p>\n<pre><code class=\"language-text\">btn--gloss</code></pre>\n<p class=\"wysiwyg-text-align-justify\">To display a button as disabled, add the following class:</p>\n<pre><code class=\"language-text\">btn--disabled</code></pre>\n<p class=\"wysiwyg-text-align-justify\"><em>If the button has the \"disabled\" attribute, the styles of \"btn--disabled\" are applied automatically.</em></p>\n<h4 id=\"input-fields\" class=\"wysiwyg-text-align-justify\">Input fields</h4>\n<p class=\"wysiwyg-text-align-justify\">You can use styles for input fields as well. Write your markup as follows:</p>\n<pre><code class=\"language-text\">&lt;div class=\"input input--animated\"&gt;\n    &lt;input type=\"text\" oninput=\"this.value ? this.classList.add('input-filled') : this.classList.remove('input-filled');\"&gt;\n    &lt;label&gt;\n        &lt;span class=\"text-ellipsis\"&gt;This is the label&lt;/span&gt;\n    &lt;/label&gt;\n&lt;/div&gt;</code></pre>\n<p class=\"wysiwyg-text-align-justify\">Please pay attention to the order of the elements and their classes. The <em>oninput</em> event handler is required to add or remove the <em>input-filled</em> class according to the inputs value. If your input receives an initial value you have to add the <em>input-filled</em> class manually.</p>\n<h4 id=\"selectboxes\" class=\"wysiwyg-text-align-justify\">Selectboxes</h4>\n<p class=\"wysiwyg-text-align-justify\">You can use native html selectboxes and they will be styled as close as possible to the original portals selectboxes. As those are generated by JavaScript, an exact replication is not possible.</p>\n<pre><code class=\"language-text\">&lt;div class=\"input input--animated input--select\"&gt;\n    &lt;select class=\"input-filled\"&gt;\n        &lt;option value=\"1\"&gt;Value 1&lt;/option&gt;\n        &lt;option value=\"2\"&gt;Value 2&lt;/option&gt;\n        &lt;option value=\"3\"&gt;Value 3&lt;/option&gt;\n    &lt;/select&gt;\n    &lt;label&gt;\n        &lt;span&gt;This is the label&lt;/span&gt;\n    &lt;/label&gt;\n&lt;/div&gt;</code></pre>\n<p class=\"wysiwyg-text-align-justify\">As native html selectboxes always have a value selected, the <em>input-filled</em> class is always set on the <em>select</em> element.</p>\n<h2 id=\"opening-a-dialog-in-portals\" class=\"wysiwyg-text-align-justify\">Opening a dialog in Portals</h2>\n<p class=\"wysiwyg-text-align-justify\">The portalsApi has four methods that give you the ability to open a dialog outside of the scope of your iframe.</p>\n<pre><code class=\"language-text\">Questback.portalsApi.trigger.openDialog(text, title)\nQuestback.portalsApi.trigger.openConfirmDialog(text, title)\nQuestback.portalsApi.trigger.openIframeDialog(url, title, height, heightUnit)\nQuestback.portalsApi.trigger.openIframeConfirmDialog(url, title, height, heightUnit)</code></pre>\n<h3 id=\"dialog-buttons\" class=\"wysiwyg-text-align-justify\">Dialog buttons</h3>\n<p class=\"wysiwyg-text-align-justify\">The methods <em>openDialog</em> and <em>openIframeDialog</em> open a dialog with a single \"Close\" button. The corresponding methods <em>openConfirmDialog</em> and <em>openIframeConfirmDialog</em> open a dialog with a \"Cancel\" and an \"Ok\" button.</p>\n<h3 id=\"text-dialogs\" class=\"wysiwyg-text-align-justify\">Text dialogs</h3>\n<p class=\"wysiwyg-text-align-justify\">The methods <em>openDialog</em> and <em>openConfirmDialog</em> take a string as first parameter, which is the text shown in the main area of the dialog. The title is optional.</p>\n<h3 id=\"iframe-dialogs\" class=\"wysiwyg-text-align-justify\">Iframe dialogs</h3>\n<p class=\"wysiwyg-text-align-justify\">The methods <em>openIframeDialog</em> and <em>openIframeConfirmDialog</em> render an iframe in the main area of the dialog with the url given at the first parameter. The <em>title</em>, <em>height</em> and <em>heightUnit</em> are optional. The paramters <em>height</em> and <em>heightUnit</em> define the height of the iframe in the dialog.</p>\n<h3 id=\"simple-call\" class=\"wysiwyg-text-align-justify\">Simple call</h3>\n<p class=\"wysiwyg-text-align-justify\">The simplest way to open a dialog is by calling one of the dialog methods, give a text/url and not worry about any events:</p>\n<pre><code class=\"language-text\">Questback.portalsApi.trigger.openDialog('This is a simple dialog!');</code></pre>\n<h3 id=\"handle-dialog-close\" class=\"wysiwyg-text-align-justify\">Handle dialog close</h3>\n<p class=\"wysiwyg-text-align-justify\">The dialog can either be closed or canceled/accepted and this event can be handled by implementing Promise methods, like this:</p>\n<pre><code class=\"language-text\">Questback.portalsApi.trigger.openDialog('This is a simple dialog!')\n    .then(function() {\n        console.log(\"Dialog has been closed\");\n    });</code></pre>\n<p class=\"wysiwyg-text-align-justify\">The <em>confirm</em> dialogs make use of the <em>then</em> and <em>catch</em> methods:</p>\n<pre><code class=\"language-text\">Questback.portalsApi.trigger.openConfirmDialog('This is a confirmation dialog!')\n    .then(function() {\n        console.log(\"Dialog closed by ok button\");\n    })\n    .catch(function() {\n        console.log(\"Dialog closed by cancel button\");\n    });</code></pre>\n<p class=\"wysiwyg-text-align-justify\">The <em>catch</em> method does not indicate that an error happened, it just tells you about the way the dialog was closed. Both methods do not get any parameters. This means that no data from the dialogs iframe is transported back to the calling iframe.</p>\n<p class=\"wysiwyg-text-align-justify\">If you want to transport data between the iframes or trigger actions in the other iframe make use of the PortalsApi's message bus functionality, documented under <code>Using the Portals message bus</code>.</p>\n<p class=\"wysiwyg-text-align-justify\"> </p>\n<h1 id=\"h_01HGKSMPRSER9ENY5QWWRZZ863\" class=\"wysiwyg-text-align-justify\">FAQ</h1>\n<h3 id=\"faq-1\" class=\"wysiwyg-text-align-justify\">What is the Portals Extension Module?</h3>\n<p class=\"wysiwyg-text-align-justify\">The Portals Extension Module is a feature that allows integration of third-party content and applications within Portals. It provides an iFrame for your content and an API for communication with Portals.</p>\n<h3 id=\"faq-2\" class=\"wysiwyg-text-align-justify\">How do I initialize the Portals API?</h3>\n<p class=\"wysiwyg-text-align-justify\">You can initialize the Portals API by calling <code>Questback.portalsApi.initialize()</code> after your document has finished loading. This method returns a Promise that resolves when the initialization is complete.</p>\n<h3 id=\"faq-3\" class=\"wysiwyg-text-align-justify\">Can I communicate between different iFrames in Portals?</h3>\n<p class=\"wysiwyg-text-align-justify\">Yes, you can use the Portals message bus to send and receive messages between different iFrames. Use <code>Questback.portalsApi.bus.send()</code> to send messages and <code>Questback.portalsApi.bus.subscribe()</code> to listen for messages.</p>\n<h3 id=\"faq-4\" class=\"wysiwyg-text-align-justify\">How can I apply Portals styles to my application?</h3>\n<p class=\"wysiwyg-text-align-justify\">You can import Portals CSS stylesheets into your iframe. Retrieve the stylesheet paths using <code>Questback.portalsApi.query.portalInfo()</code> and then add them to your document's head using JavaScript.</p>\n<h3 id=\"faq-5\" class=\"wysiwyg-text-align-justify\">Can I open dialogs from my application in Portals?</h3>\n<p class=\"wysiwyg-text-align-justify\">Yes, the Portals API provides methods to open dialogs outside the scope of your iframe. You can use methods like <code>Questback.portalsApi.trigger.openDialog()</code> or <code>Questback.portalsApi.trigger.openIframeDialog()</code> to open dialogs in Portals.</p>\n<p class=\"wysiwyg-text-align-justify\"> </p>",
    "user_segment_ids": []
}