{
    "id": 20716938832018,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20716938832018.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20716938832018-Benefits-of-Tivian-Access-beyond-v1",
    "author_id": 369584192734,
    "comments_disabled": false,
    "draft": true,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20714711445138,
    "created_at": "2024-08-12T20:01:18Z",
    "updated_at": "2024-08-12T20:01:20Z",
    "name": "Benefits of Tivian Access beyond v1",
    "title": "Benefits of Tivian Access beyond v1",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-08-12T20:01:20Z",
    "user_segment_id": 360000084973,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<p><b>Original Confluence URL:</b> <a href=\"https://qbdocs.atlassian.net/wiki/spaces/IAM/pages/1310261267\">https://qbdocs.atlassian.net/wiki/spaces/IAM/pages/1310261267</a> - please cross-check the quality of the ZD article with the Confluence counterpart and remove this line before publishing the ZD article</p>\n\n<p>Also see <ac:link ac:card-appearance=\"inline\"><ri:page ri:content-title=\"Roadmap\" ri:version-at-save=\"8\"></ri:page><ac:link-body>Roadmap</ac:link-body></ac:link> </p><p></p><ul>\n<li><p><strong>Long term:</strong> not only related to the Tivian Access solution but to the product moving to a future development status</p></li>\n<li><p><strong>Short term:</strong> something that will be achieved directly by the Tivian Access solution and should be part of one of the next milestones.</p></li>\n</ul><p></p><table data-layout=\"default\">\n<colgroup>\n<col style=\"width: 340.0px;\">\n<col style=\"width: 340.0px;\">\n</colgroup>\n<tbody>\n<tr>\n<th data-highlight-colour=\"#abf5d1\"><p><strong>Short Term</strong></p></th>\n<th data-highlight-colour=\"#b3bac5\"><p><strong>Long Term</strong></p></th>\n</tr>\n<tr>\n<td data-highlight-colour=\"#ffffff\"><p>Vendor Lockin</p></td>\n<td data-highlight-colour=\"#ffffff\"><p>Future Architecture</p></td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#ffffff\"><p>Integrate with other Tivian Systems</p></td>\n<td data-highlight-colour=\"#ffffff\"><p>Add customization capabilities</p></td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#ffffff\"><p>Cleanup</p></td>\n<td data-highlight-colour=\"#ffffff\"><p>Add integratable self service</p></td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#ffffff\"><p>Reduce maintenance cost</p></td>\n<td data-highlight-colour=\"#ffffff\"><p>Automation</p></td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#ffffff\"><p>Increase quality</p></td>\n<td data-highlight-colour=\"#ffffff\"><p>Adapt to future changes in a cost efficient way</p></td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#ffffff\"><p>Incorporate Feedback directly</p></td>\n<td><p>Scalable business</p></td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#ffffff\"><p>Domain expert teams</p></td>\n<td><p>Transparency</p></td>\n</tr>\n</tbody>\n</table><p></p><table data-layout=\"default\">\n<colgroup>\n<col style=\"width: 226.67px;\">\n<col style=\"width: 226.67px;\">\n<col style=\"width: 226.67px;\">\n</colgroup>\n<tbody>\n<tr>\n<th><p><strong>Topic</strong></p></th>\n<th><p><strong>Description</strong></p></th>\n<th><p><strong>Expected Effect</strong></p></th>\n</tr>\n<tr>\n<td data-highlight-colour=\"#abf5d1\"><p>Vendor Lockin</p></td>\n<td><p>Every connected application is tighly coupled to the Okta APIs. This means that exchanging Okta for another vendor will always be that costly that it is not worth the effort. Creating a centralized adapter for Okta prevents us from these issues.</p></td>\n<td>\n<p><strong><span style=\"color: rgb(54,179,126);\">future of the company</span></strong></p>\n<p>Having a vendor lock in for the core products is dangerous</p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#b3bac5\"><p>Future Architecture</p></td>\n<td><p>An architecture involving domain isolation as possible and less dependencies to other projects, enables faster product cycles, continuous delivery on subsystem level, less friction due to coupling of unrelated components. This also involves more precise business decisions within one domain.</p></td>\n<td><p><strong><span style=\"color: rgb(54,179,126);\">cost related</span></strong></p></td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#abf5d1\"><p>Integrate with other Tivian Systems</p></td>\n<td><p>There are other Tivian Systems like Dashbo that need to be integrated. This will always create a little effort on Tivian Access side.</p></td>\n<td><p><strong><span style=\"color: rgb(54,179,126);\">feature</span></strong></p></td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#b3bac5\"><p>Add customization capabilities</p></td>\n<td><p>Okta offers very little ways to customize the Okta workflows. This leads either to PS having to use the Okta API directly or not being able to customize workflows for specific services. Creating an adapter that is capable of handling a decent amount of customization would make the product more stable.</p></td>\n<td>\n<p><strong><span style=\"color: rgb(54,179,126);\">quality related</span></strong></p>\n<p></p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#b3bac5\"><p>Add integratable self service</p></td>\n<td><p>Self service might be relevant for Essentials and also for Portals and the overall self-management topic. Okta does not offer a good way of integrating self service into our products.</p></td>\n<td>\n<p><strong><span style=\"color: rgb(54,179,126);\">feature</span></strong></p>\n<p></p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#abf5d1\"><p>Cleanup</p></td>\n<td><p>There are a lot of open issues that have to be cleaned up.</p></td>\n<td>\n<p><strong><span style=\"color: rgb(54,179,126);\">quality related</span></strong></p>\n<p>see our board</p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#abf5d1\"><p>Reduce maintenance cost</p></td>\n<td><p>There is an exhaustive list of documentation around setting up tenants for Tivian Access. Management is even done in Okta itself. It is a very time consuming task to setup a tenant and the respective applications for Tivian Access.</p></td>\n<td>\n<p><strong><span style=\"color: rgb(54,179,126);\">cost related / quality related</span></strong></p>\n<p>less effort to maintain and setup → less cost</p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#abf5d1\"><p>Increase quality</p></td>\n<td><p>The above issue also leads to errors in configuration because Okta is a generic tool and not adapted to our specific use case. Creating a centralized management tool for Tivian Access leads to higher quality and less maintenance and setup cost.</p></td>\n<td>\n<p><strong><span style=\"color: rgb(54,179,126);\">cost related / quality related</span></strong></p>\n<p>less error → better quality, less cost</p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#abf5d1\"><p>Incorporate Feedback directly</p></td>\n<td><p>From time to time we will ask our clients for feedback. This will lead to new features or improvements.</p></td>\n<td>\n<p><strong><span style=\"color: rgb(54,179,126);\">quality related</span></strong></p>\n<p>happy customers</p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#b3bac5\"><p>Automation</p></td>\n<td><p>Tivian Access and other Tivian products should communicate in an automated way so that errors could be prevented.</p></td>\n<td>\n<p><strong><span style=\"color: rgb(54,179,126);\">quality related</span></strong></p>\n<p>reduce cost by preventing errors</p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#b3bac5\"><p>Adapt to future changes in a cost efficient way</p></td>\n<td><p>Okta will evolve and change. Currently every Tivian product has to be changed when Okta changes are introduced. That is not cost efficient. Having a single adapter to talk to Okta leads to a better maintainable product.</p></td>\n<td>\n<p><strong><span style=\"color: rgb(54,179,126);\">cost related</span></strong></p>\n<p>reduce cost when Okta changes</p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#abf5d1\"><p>Domain expert teams</p></td>\n<td><p>Currently engineering cares for all domain specific topics at once. With a new architecture and long term teams on one domain this knowledge could be consolidated. This increases the quality of the respective solution.</p></td>\n<td>\n<p><strong><span style=\"color: rgb(54,179,126);\">quality related</span></strong></p>\n<p>Enhance quality by building domain experts in the engineering team.</p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#b3bac5\"><p>Scalable business</p></td>\n<td><p>On premise solutions that are customizable per instance have to be maintained per instance and customized per instance. This kind of business is not scalable as more clients/installations involve more people taking care of these installations.</p></td>\n<td>\n<p><strong><span style=\"color: rgb(54,179,126);\">future of the company</span></strong></p>\n<p>Going forward to a more standardized SaaS solution that is not maintained per installation/client leads to a solution that can be technically scaled easier. This enables business to be more scalable.</p>\n</td>\n</tr>\n<tr>\n<td data-highlight-colour=\"#b3bac5\"><p>Transparency</p></td>\n<td><p>Adding a management layer to the different tenants creates more transparency for us on the usage of Tivian Access and the tenants using it. That leads to better business decisions.</p></td>\n<td>\n<p><strong><span style=\"color: rgb(54,179,126);\">quality related</span></strong></p>\n<p>better business decisions</p>\n</td>\n</tr>\n</tbody>\n</table>",
    "user_segment_ids": [
        360000084973
    ]
}