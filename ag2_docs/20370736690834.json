{
    "id": 20370736690834,
    "url": "https://discoverxi-supportdesk.zendesk.com/api/v2/help_center/en-us/articles/20370736690834.json",
    "html_url": "https://discoverxi-supportdesk.zendesk.com/hc/en-us/articles/20370736690834-Forms-Bonuses-and-Smarty-Templates",
    "author_id": 369584192734,
    "comments_disabled": true,
    "draft": false,
    "promoted": false,
    "position": 0,
    "vote_sum": 0,
    "vote_count": 0,
    "section_id": 20234598507282,
    "created_at": "2024-07-25T16:24:01Z",
    "updated_at": "2024-08-28T09:53:06Z",
    "name": "Forms, Bonuses and Smarty Templates",
    "title": "Forms, Bonuses and Smarty Templates",
    "source_locale": "en-us",
    "locale": "en-us",
    "outdated": false,
    "outdated_locales": [],
    "edited_at": "2024-07-30T11:11:19Z",
    "user_segment_id": null,
    "permission_group_id": 1075294,
    "content_tag_ids": [],
    "label_names": [],
    "body": "<h1 id=\"h_01HGKSMPRS9JVGC6E9EA3DB98K\" class=\"wysiwyg-text-align-justify\">Overview</h1>\n<p class=\"wysiwyg-text-align-justify\">This article covers three main topics: configuring forms, managing bonuses, and working with Smarty templates in the EFS Panel. It provides detailed information on customizing registration and data change forms, setting up and managing bonus systems, and utilizing Smarty templates for panel page design.</p>\n<h1 id=\"h_01HGKSMPRSYYE7GMM7DZ0VCKXK\" class=\"wysiwyg-text-align-justify\">Information</h1>\n<p class=\"wysiwyg-text-align-justify\">This guide focuses on advanced features of the EFS Panel, including form configuration, bonus management, and template customization. It is intended for panel administrators and web designers who need to tailor their panel's functionality and appearance.</p>\n<ul>\n<li><a href=\"#configuring-forms\">Configuring Forms</a></li>\n<li><a href=\"#bonuses\">Bonuses</a></li>\n<li><a href=\"#working-with-smarty-templates\">Working with Smarty Templates</a></li>\n</ul>\n<h1 id=\"configuring-forms\" class=\"wysiwyg-text-align-justify\">Configuring Forms</h1>\n<p class=\"wysiwyg-text-align-justify\">User-defined forms allow you to adjust particularly complex forms, such as the registration form, to the requirements of a specific panel in an optimal way.</p>\n<p class=\"wysiwyg-text-align-justify\">EFS provides you with user-defined forms for registration, data changes, and profiles of community panels.</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>You can use different forms on different language versions of the same website.</li>\n<li>For each language version, you can create and use several forms of the same type at the same time. Thus you can, for example, use different registration forms for different ways of entry.</li>\n<li>Related variables can be assigned to a group and then output in a separate section of the registration form, for example.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\">In the following Chapters, you learn to manage user-defined forms:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>It explains how to manage the forms of a panel.</li>\n<li>You learn to change the configuration of the variables used in a form.</li>\n<li>It introduces special features of registration and data change forms.</li>\n<li>You learn about the special features of profile forms.</li>\n</ul>\n<h2 id=\"managing-forms\" class=\"wysiwyg-text-align-justify\"><strong>Managing Forms</strong></h2>\n<p class=\"wysiwyg-text-align-justify\">The GUI for creating and managing forms is located in the <strong>Website → Standard content → Forms</strong> menu.</p>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>Read rights for “panel_website_forms” are needed for accessing the <strong>Forms</strong> menu.</p>\n<p class=\"auto-cursor-target wysiwyg-text-align-justify\"><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21014859864594\" alt=\"forms.png\"></p>\n<p class=\"wysiwyg-text-align-justify\">If you want to view forms of another language version that you’re authorized to access in a given installation with several websites and/or language versions, simply change the settings in the upper section of the dialog. You can use the View function to change the number of table columns displayed as well as the number of rows per page. You can browse the overview table.</p>\n<p class=\"wysiwyg-text-align-justify\">The following editing options are available:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>Form name: Opens the overview of variables that belong to the respective form.</li>\n<li>Edit settings: Opens the properties dialog.</li>\n<li>Delete: The form will be deleted after a confirmation prompt.</li>\n</ul>\n<h3 id=\"creating-a-form\" class=\"wysiwyg-text-align-justify\"><strong>Creating a Form</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">By clicking on the Create form button you can open the dialog used to configure a new form.</p>\n<h3 id=\"form-properties\" class=\"wysiwyg-text-align-justify\"><strong>Form Properties</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">The table lists the properties a form can have.</p>\n<table class=\"wrapped wysiwyg-text-align-justify\" style=\"margin-right: auto; margin-left: auto;\" border=\"1\">\n<colgroup> <col> <col> </colgroup>\n<tbody>\n<tr>\n<th class=\"wysiwyg-text-align-center\">Field</th>\n<th class=\"wysiwyg-text-align-center\">Description</th>\n</tr>\n<tr>\n<td>Website / Language version</td>\n<td>\n<p>Website and language version to which the form belongs. Cannot be changed subsequently.</p>\n</td>\n</tr>\n<tr>\n<td>Form name</td>\n<td>Name of the form</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Description for internal purposes only</td>\n</tr>\n<tr>\n<td>Form type</td>\n<td>\n<p>The form type determines the function module where the form can be used.</p>\n<p>You can choose from the following types</p>\n<ul>\n<li>Registration: Available in the “Registration form” function module.</li>\n<li>Changing data (logged-in panelists only): Available in the “Change data” function module.</li>\n<li>Profile: Available in the “Profile search” function module.</li>\n</ul>\n</td>\n</tr>\n<tr>\n<td>Default form</td>\n<td>\n<p>Depending on the form type, the default form is either displayed on the “Registration” or “Change data” page, if they were created with EFS version 5.1 or earlier.</p>\n<p>The default form’s “Additionally save in” option is used for the current language/use case when panelists register or change their data per Web service.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"configuring-the-variables-of-a-form\" class=\"wysiwyg-text-align-justify\"><strong>Configuring the Variables of a Form</strong></h2>\n<h3 id=\"overview-of-form-variables\" class=\"wysiwyg-text-align-justify\"><strong>Overview of Form Variables</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">To view the variables belonging to a form, click on the form name in the overview table. Alternatively, you can also click on the <strong>Edit Variables</strong> button in the form’s properties dialog. This takes you to an overview table that lists the form’s variables along with their key properties.</p>\n<p class=\"wysiwyg-text-align-justify\"><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21014859864338\" alt=\"variables.png\"></p>\n<h3 id=\"configuring-variables\" class=\"wysiwyg-text-align-justify\"><strong>Configuring Variables</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">If you wish to change an existing variable configuration, click on the <strong>Edit variable x in the form y</strong> icon in the overview.</p>\n<h3 id=\"creating-a-new-variable\" class=\"wysiwyg-text-align-justify\"><strong>Creating a New Variable</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">If you wish to create a new variable, click on the <strong>Add variable</strong> icon in the overview.</p>\n<h3 id=\"outputting-variable-characteristics-in-a-form\" class=\"wysiwyg-text-align-justify\"><strong>Outputting Variable Characteristics in a Form</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">The order in which the variable characteristics are displayed in the form depends on the codes; it starts with the smallest available code. It is not possible to set a divergent order or define different language-dependent orders.</p>\n<h2 id=\"special-features-of-registration-and-data-change-forms\" class=\"wysiwyg-text-align-justify\"><strong>Special Features of Registration and Data Change Forms</strong></h2>\n<p class=\"wysiwyg-text-align-justify\">Correct collection of registration data and their subsequent maintenance, in particular of panelists’ contact data, is essential for panel operation:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>Collected data should be as accurate as possible.</li>\n<li>Registration data should be stored in such a way that they are available later for processes in which they are necessary. Gender, for example, is often required for forming groups and should therefore be available as a master data item. Panelists’ first names, on the other hand, are not needed for forming groups and drawing samples, but are important for establishing contact: They should be stored as address data items.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\">The form types “Registration” and “Data change” provide you with great flexibility in adjusting the forms to the requirements of a specific panel:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>As in the past, you can perform plausibility checks on data entered by candidates as soon as on entry. This reduces the risk of erroneous or deliberately false entry of important data, such as names and e-mail addresses. In EFS 6.0 you can define considerably more complex check expressions.</li>\n<li>You can specify where the queried data are to be stored in the database. Contact data such as name, street, and zip code are normally saved in the participant data table. Data that are important for panel operation later on, such as gender and age, are saved in the master data table. Optionally, you can also store data in both tables. (This may be advisable e.g. for “country”.)</li>\n<li>From EFS 6.0 and later, you can convert the data upon saving. For example, you can merge the values of several variables into a single variable.</li>\n</ul>\n<h3 id=\"configuration-options\" class=\"wysiwyg-text-align-justify\"><strong>Configuration Options</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">The following table contains all possible configuration options.</p>\n<table class=\"relative-table wrapped wysiwyg-text-align-justify\" style=\"width: 100.163%; margin-right: auto; margin-left: auto; height: 1418px;\" border=\"1\">\n<colgroup> <col style=\"width: 27.9274%;\"> </colgroup> <colgroup> <col style=\"width: 72.0913%;\"> </colgroup>\n<tbody>\n<tr>\n<th class=\"wysiwyg-text-align-center\">Field</th>\n<th class=\"wysiwyg-text-align-center\">Description</th>\n</tr>\n<tr>\n<td>Website / Language version</td>\n<td>\n<p>Website and language version to which the variable belongs. Cannot be changed subsequently.</p>\n</td>\n</tr>\n<tr>\n<td>Form name</td>\n<td>\n<p>This is determined when creating the form. Cannot be changed subsequently.</p>\n</td>\n</tr>\n<tr>\n<td>Form type</td>\n<td>\n<p>This is determined when creating the form. Cannot be changed subsequently.</p>\n</td>\n</tr>\n<tr>\n<td>Variable</td>\n<td>\n<p>The master data item or user variable to which the form’s input field refers to.</p>\n<ul>\n<li>Using the check expressions and transformation formulas described below, you can reformat the data entered, if necessary.</li>\n</ul>\n</td>\n</tr>\n<tr>\n<td>Label in form</td>\n<td>The text is used to label the form’s input field.</td>\n</tr>\n<tr>\n<td>Exclude the following codes</td>\n<td>\n<p>You can hide certain answer characteristics of master data variables. To do so, enter the codes of the answer characteristics you wish to hide. The codes can be entered comma-separated or as a range (e.g. “1,2,3-10”).</p>\n</td>\n</tr>\n<tr>\n<td>Order</td>\n<td>\n<p>Order in which the input fields for the form’s different variables are output.</p>\n</td>\n</tr>\n<tr>\n<td>Group ID</td>\n<td>\n<p>The group ID is available in the templates and can therefore be used in many different ways, for example to group related form fields or to divide the form into different sections. If you assign the same group ID (e.g. 1) to several form fields, for example, you can output these fields next to instead of beneath each other (e.g. day, month, and year for three related date fields). In doing so you can apply the label of the first grouped element to the whole line.</p>\n</td>\n</tr>\n<tr>\n<td>Check expression</td>\n<td>\n<p>You can enter a check expression, which is executed before saving the data. If the check expression is correct, the data are not stored; instead, the specified error message is displayed.</p>\n<ul>\n<li>Move the cursor over the? icon to obtain an overview of available functions.</li>\n<li>You can use the pseudo variable “self” to access the current variable.</li>\n</ul>\n</td>\n</tr>\n<tr>\n<td>Error message</td>\n<td>\n<p>Error message, which is displayed if the aforementioned check expression detects a problem.</p>\n</td>\n</tr>\n<tr>\n<td>Additionally, save in</td>\n<td>\n<p>You can optionally save an entry in an additional master data item or user variable.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Only in the “Change data” form:</p>\n<p>If the panelists use the “Change data” form, skip updating this variable if nothing was entered.</p>\n</td>\n<td>\n<p>When using the form, panelists often only change a single variable and leave all the other input fields unchanged. By choosing this option you determine that only those values that were altered by the panelists will be added when they subsequently save their changes. Default setting: “Yes”.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Transformation formula for saving</p>\n</td>\n<td>\n<p>You can enter a transformation formula, which is executed upon saving. This allows you to merge the values of several individual variables and store them in the current variable, for example.</p>\n<ul>\n<li>Move the cursor over the? icon to obtain an overview of available functions.</li>\n<li>You can use the pseudo variable “self” to access the current variable.</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"functions-for-transformation-formulae-and-check-expressions\" class=\"wysiwyg-text-align-justify\"><strong>Functions for Transformation Formulae and Check Expressions</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">You can use the following functions in transformation formulae and check expressions.</p>\n<table class=\"wrapped relative-table wysiwyg-text-align-justify\" style=\"width: 90.8097%; margin-right: auto; margin-left: auto;\" border=\"1\">\n<colgroup> <col style=\"width: 13.4394%;\"> </colgroup> <colgroup> <col style=\"width: 15.3813%;\"> </colgroup> <colgroup> <col style=\"width: 17.1466%;\"> </colgroup> <colgroup> <col style=\"width: 16.1235%;\"> </colgroup> <colgroup> <col style=\"width: 15.4743%;\"> </colgroup> <colgroup> <col style=\"width: 22.4535%;\"> </colgroup>\n<tbody>\n<tr>\n<th class=\"wysiwyg-text-align-center\">(cont.)</th>\n<th class=\"wysiwyg-text-align-center\">Function</th>\n<th class=\"wysiwyg-text-align-center\">Explanation</th>\n<th class=\"wysiwyg-text-align-center\">Parameter</th>\n<th class=\"wysiwyg-text-align-center\">Return value</th>\n<th class=\"wysiwyg-text-align-center\">Example</th>\n</tr>\n<tr>\n<td colspan=\"1\">abs</td>\n<td colspan=\"1\">abs (action: amount)</td>\n<td colspan=\"1\">\n<p>Returns the amount of a value without an algebraic sign.</p>\n</td>\n<td colspan=\"1\">\n<p>$value: The value to be edited</p>\n</td>\n<td colspan=\"1\">\n<p>Amount of the value without an algebraic sign</p>\n</td>\n<td colspan=\"1\">abs(self)</td>\n</tr>\n<tr>\n<td colspan=\"1\">\n<p>base64_decode</p>\n</td>\n<td colspan=\"1\">\n<p>base64_decode (action: decode Base64)</p>\n</td>\n<td colspan=\"1\">\n<p>Decodes the value using the Base64 algorithm.</p>\n</td>\n<td colspan=\"1\">\n<p>$value: The value to be decoded</p>\n</td>\n<td colspan=\"1\">\n<p>Base64 decoded value</p>\n</td>\n<td colspan=\"1\"> </td>\n</tr>\n<tr>\n<td colspan=\"1\">\n<p>base64_encode</p>\n</td>\n<td colspan=\"1\">\n<p>base64_encode (action: encode Base64)</p>\n</td>\n<td colspan=\"1\">\n<p>Encodes the value using the Base64 algorithm.</p>\n</td>\n<td colspan=\"1\">\n<p>$value: The value to be decoded</p>\n</td>\n<td colspan=\"1\">\n<p>Base64 decoded value</p>\n</td>\n<td colspan=\"1\"> </td>\n</tr>\n<tr>\n<td colspan=\"1\">contact</td>\n<td colspan=\"1\">\n<p>concat (action: connect)</p>\n</td>\n<td colspan=\"1\">\n<p>Connects two or more strings.</p>\n</td>\n<td colspan=\"1\">\n<p>$string1 - $stringN: strings to be connected (an unlimited number of strings can be transferred)</p>\n</td>\n<td colspan=\"1\">\n<p>concatenated strings</p>\n</td>\n<td colspan=\"1\">\n<p>concat(self, u_firstname, md_0077)</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"1\">\n<p>get_date_diff</p>\n</td>\n<td colspan=\"1\">\n<p>get_date_diff (action: difference between two dates)</p>\n</td>\n<td colspan=\"1\">\n<p>Calculate the difference between two dates in days or years (rounded off).</p>\n</td>\n<td colspan=\"1\">\n<p>$date1: first date, $date2: second date, $format: \"d\" (days), \"y\" (years)</p>\n</td>\n<td colspan=\"1\">\n<p>Difference between the two transferred dates</p>\n</td>\n<td colspan=\"1\">\n<p>get_date_-diff('05.03.1982', '26.08.2008', 'y' ), get_date_-diff('1982-03-05', '26.08.2008', 'd' )</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"1\">\n<p>get_gmt_date</p>\n</td>\n<td colspan=\"1\">\n<p>get_gmt_date (action: date in GMT)</p>\n</td>\n<td colspan=\"1\">\n<p>Returns the current time (GMT) in the desired format.</p>\n</td>\n<td colspan=\"1\">\n<p>$format: desired date format</p>\n</td>\n<td colspan=\"1\">\n<p>Current, formatted date</p>\n</td>\n<td colspan=\"1\">\n<p>get_gmt_- date('d.m.Y H:i:s')</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"1\">get_timestamp</td>\n<td colspan=\"1\">\n<p>get_timestamp (action: date in timestamp)</p>\n</td>\n<td colspan=\"1\">\n<p>Returns the Unix timestamp (number of seconds that have passed since January 11970 00:00:00 GMT) of the transferred date. Where no date has been transferred, the timestamp of the current date is returned.</p>\n</td>\n<td colspan=\"1\">\n<p>$date (optional): date the timestamp of which is required</p>\n</td>\n<td colspan=\"1\">Unix timestamp</td>\n<td colspan=\"1\">\n<p>get_timestamp('13.04.2008'), get_timestamp('2008-04-13')</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"1\">\n<p>is_date_de</p>\n</td>\n<td colspan=\"1\">\n<p>is_date_de (check: German date format)</p>\n</td>\n<td colspan=\"1\">\n<p>Check whether the transferred value is a date in German format (TT.MM.YYYY).</p>\n</td>\n<td colspan=\"1\">\n<p>$value: Date to be checked</p>\n</td>\n<td colspan=\"1\">\n<p>1, if German date, otherwise 0</p>\n</td>\n<td colspan=\"1\">\n<p>is_date_de('05.03.1982')</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"1\">\n<p>is_date_int</p>\n</td>\n<td colspan=\"1\">\n<p>is_date_int (check: int. date format)</p>\n</td>\n<td colspan=\"1\">\n<p>Check whether the transferred value is a date in international format (TT.MM.YYYY).</p>\n</td>\n<td colspan=\"1\">\n<p>$value: Date to be checked</p>\n</td>\n<td colspan=\"1\">\n<p>1, if international date, otherwise 0</p>\n</td>\n<td colspan=\"1\">\n<p>is_date_de('05.03.1982')</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"1\">is_email</td>\n<td colspan=\"1\">\n<p>is_email (check: valid e-mail format)</p>\n</td>\n<td colspan=\"1\">\n<p>Check whether the transferred value is a valid e-mail address format.</p>\n</td>\n<td colspan=\"1\">\n<p>$value: E-mail address to be checked</p>\n</td>\n<td colspan=\"1\">\n<p>1, if valid e-mail address, otherwise 0</p>\n</td>\n<td colspan=\"1\">\n<p>is_email('mustermann<br>@questback.com')</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"1\">is_float</td>\n<td colspan=\"1\">\n<p>is_float (check: floating-point number)</p>\n</td>\n<td colspan=\"1\">\n<p>Check whether the transferred value is a floating-point number.</p>\n</td>\n<td colspan=\"1\">\n<p>$value: Value to be checked</p>\n</td>\n<td colspan=\"1\">\n<p>1, if floating-point number, otherwise 0</p>\n</td>\n<td colspan=\"1\">is_float(10,5)</td>\n</tr>\n<tr>\n<td colspan=\"1\">is_luhn</td>\n<td colspan=\"1\">\n<p>is_luhn (check: Luhn algorithm)</p>\n</td>\n<td colspan=\"1\">\n<p>Check whether the transferred value corresponds with the Luhn formula.</p>\n</td>\n<td colspan=\"1\">\n<p>$value: Value to be checked</p>\n</td>\n<td colspan=\"1\">\n<p>1, if Luhn algorithm, otherwise</p>\n<p>0</p>\n</td>\n<td colspan=\"1\">is_luhn(10)</td>\n</tr>\n<tr>\n<td colspan=\"1\">is_md5</td>\n<td colspan=\"1\">\n<p>is_md5 (check: md5 encoding)</p>\n</td>\n<td colspan=\"1\">\n<p>Check whether the transferred value was encoded using the md5 algorithm.</p>\n</td>\n<td colspan=\"1\">\n<p>$value: Value to be checked</p>\n</td>\n<td colspan=\"1\">\n<p>1, if md5- encoded, otherwise 0</p>\n</td>\n<td colspan=\"1\">\n<p>is_md5('234mklksdf')</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"1\">is_positive</td>\n<td colspan=\"1\">\n<p>is_positive (check: positive number)</p>\n</td>\n<td colspan=\"1\">\n<p>Check whether the transferred value is a positive number.</p>\n</td>\n<td colspan=\"1\">\n<p>$value: Value to be checked</p>\n</td>\n<td colspan=\"1\">\n<p>1, if positive number, otherwise 0</p>\n</td>\n<td colspan=\"1\">is_positive(5)</td>\n</tr>\n<tr>\n<td colspan=\"1\">is_sha1</td>\n<td colspan=\"1\">\n<p>is_sha1 (check: SHA1 algorithm)</p>\n</td>\n<td colspan=\"1\"> </td>\n<td colspan=\"1\"> </td>\n<td colspan=\"1\"> </td>\n<td colspan=\"1\"> </td>\n</tr>\n<tr>\n<td>is_whole</td>\n<td>\n<p>is_whole (check: whole number)</p>\n</td>\n<td> </td>\n<td> </td>\n<td> </td>\n<td> </td>\n</tr>\n<tr>\n<td>length</td>\n<td>\n<p>length (action: return string length)</p>\n</td>\n<td>\n<p>Returns the number of characters in a string.</p>\n</td>\n<td>\n<p>$value: String to be checked</p>\n</td>\n<td>String length</td>\n<td>length('test')</td>\n</tr>\n<tr>\n<td colspan=\"1\">lowercase</td>\n<td colspan=\"1\">\n<p>lowercase (action: change to lowercase)</p>\n</td>\n<td colspan=\"1\">\n<p>Makes all characters in a string lowercase.</p>\n</td>\n<td colspan=\"1\">\n<p>$value: String to be changed</p>\n</td>\n<td colspan=\"1\">Changed string</td>\n<td colspan=\"1\">lowercase('Test')</td>\n</tr>\n<tr>\n<td colspan=\"1\">matches</td>\n<td colspan=\"1\">\n<p>matches (check: apply regular expression)</p>\n</td>\n<td colspan=\"1\">\n<p>Checks whether a regular expression applies to a value</p>\n</td>\n<td colspan=\"1\">\n<p>$regex: regular expression, $value: string to which the regular expression is applied</p>\n</td>\n<td colspan=\"1\">\n<p>1, if regular expression applies, otherwise 0</p>\n</td>\n<td colspan=\"1\">\n<p>matches('/^[a-f0-9]{32}$/','test');</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"1\">md5</td>\n<td colspan=\"1\">\n<p>md5 (action: md5 encode)</p>\n</td>\n<td colspan=\"1\">\n<p>Encodes the value using the md5 algorithm.</p>\n</td>\n<td colspan=\"1\">\n<p>$value: Value to be encoded</p>\n</td>\n<td colspan=\"1\">Encoded value</td>\n<td colspan=\"1\">\n<p>md5('attack_at_dawn')</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"1\">replace</td>\n<td colspan=\"1\">\n<p>replace (action: replace)</p>\n</td>\n<td colspan=\"1\">\n<p>Searches the string for matches with a regular expression and replaces them with \"substitute\".</p>\n</td>\n<td colspan=\"1\">\n<p>$regex: regular expression, $replace: substitute $value: string</p>\n</td>\n<td colspan=\"1\">Edited string</td>\n<td colspan=\"1\">\n<p>replace('/^[a-f0-9]/','replace','7test12')</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"1\">sha1</td>\n<td colspan=\"1\">\n<p>sha1 (action: encode SHA1)</p>\n</td>\n<td colspan=\"1\">\n<p>Encodes the value using the SHA1 algorithm.</p>\n</td>\n<td colspan=\"1\">\n<p>$value: Value to be encoded</p>\n</td>\n<td colspan=\"1\">Encoded value</td>\n<td colspan=\"1\">\n<p>sha1('attack_at_dawn')</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"1\">substr</td>\n<td colspan=\"1\">\n<p>substr (action: return part of a string)</p>\n</td>\n<td colspan=\"1\">\n<p>Returns the part of the string defined by the parameters start and length. If the start is not negative, the returned string will commence at the string’s start position, beginning at 0.</p>\n</td>\n<td colspan=\"1\">\n<p>$string: string, $start: beginning of the desired partial string $length (optional): length of the partial string</p>\n</td>\n<td colspan=\"1\">Partial string</td>\n<td colspan=\"1\">\n<p>substr('hello', 1, 1), returns 'e'</p>\n</td>\n</tr>\n<tr>\n<td colspan=\"1\">trim</td>\n<td colspan=\"1\">\n<p>trim (action: removes spaces at the start and the end)</p>\n</td>\n<td colspan=\"1\">\n<p>Removes spaces at the start and end of a string.</p>\n</td>\n<td colspan=\"1\">\n<p>$str: string, $charlist (optional): characters to be removed at the start and end of the string</p>\n</td>\n<td colspan=\"1\">Edited string</td>\n<td colspan=\"1\">\n<p>trim(' hello test ') results \"hello test\"</p>\n</td>\n</tr>\n<tr>\n<td>uppercase</td>\n<td>\n<p>lowercase (action: change to uppercase)</p>\n</td>\n<td>\n<p>Makes all characters in a string upper case.</p>\n</td>\n<td>\n<p>$value: String to be changed</p>\n</td>\n<td>Changed string</td>\n<td>\n<p>uppercase('Test') results in \"TEST\"</p>\n</td>\n</tr>\n<tr>\n<td>when</td>\n<td>when (query construction)</td>\n<td>\n<p>Checks whether an expression is true or not and returns the corresponding value.</p>\n</td>\n<td>\n<p>$check: expression, $true: returned value (if the expression is true), $false: returned value (if the expression is false)</p>\n</td>\n<td>\n<p>if $check is true, $true, otherwise $false</p>\n</td>\n<td>\n<p>when('', 'true', 'false')</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"wysiwyg-text-align-justify\"><strong>Nesting</strong></p>\n<p class=\"wysiwyg-text-align-justify\">Nesting can be used. If, for example, self = “testing”, the transformation formula yields uppercase(substr(self, 2, 3)) “st”.</p>\n<p class=\"wysiwyg-text-align-justify\"><strong>Conjunctions</strong></p>\n<p class=\"wysiwyg-text-align-justify\">AND and OR can be used. If, for example, you enter a string that is not encrypted with MD5 or SHA1, the check expression</p>\n<p class=\"wysiwyg-text-align-justify\"><code>!is_md5(self) AND !is_sha1(self)</code></p>\n<p class=\"wysiwyg-text-align-justify\">will yield an error. If the transferred string were encrypted with MD5 or SHA1, this expression would be false.</p>\n<p class=\"wysiwyg-text-align-justify\"><code>!is_positive(self) OR !is_date_de(self)</code></p>\n<p class=\"wysiwyg-text-align-justify\">will yield no error only if both conditions are given, i.e., a positive number and a German date have been entered.</p>\n<h3 id=\"example-variables-in-the-standard-panel-s-forms\" class=\"wysiwyg-text-align-justify\"><strong>Example: Variables in the Standard Panel’s Forms</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">The following table lists the variables queried in the standard panel upon registration and changing of data.</p>\n<p class=\"wysiwyg-text-align-justify\"> </p>\n<table class=\"relative-table wrapped wysiwyg-text-align-justify\" style=\"width: 87.7584%; margin-right: auto; margin-left: auto;\" border=\"1\">\n<colgroup> <col style=\"width: 17.6579%;\"> </colgroup> <colgroup> <col style=\"width: 14.4878%;\"> </colgroup> <colgroup> <col style=\"width: 5.62103%;\"> </colgroup> <colgroup> <col style=\"width: 6.43397%;\"> </colgroup> <colgroup> <col style=\"width: 19.4636%;\"> </colgroup> <colgroup> <col style=\"width: 17.531%;\"> </colgroup> <colgroup> <col style=\"width: 10.9701%;\"> </colgroup> <colgroup> <col style=\"width: 7.79541%;\"> </colgroup>\n<tbody>\n<tr>\n<th class=\"wysiwyg-text-align-center\">Variable</th>\n<th class=\"wysiwyg-text-align-center\">Description</th>\n<th class=\"wysiwyg-text-align-center\">Order</th>\n<th class=\"wysiwyg-text-align-center\">Group ID</th>\n<th class=\"wysiwyg-text-align-center\">\n<p>Check expression</p>\n</th>\n<th class=\"wysiwyg-text-align-center\">Error message</th>\n<th class=\"wysiwyg-text-align-center\">\n<p>Form \"Registration\"</p>\n</th>\n<th class=\"wysiwyg-text-align-center\">\n<p>Form \"Change data\"</p>\n</th>\n</tr>\n<tr>\n<td>u_account</td>\n<td>\n<p>Panelist's login name</p>\n</td>\n<td>1</td>\n<td> </td>\n<td> </td>\n<td> </td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>u_firstname</td>\n<td>First name</td>\n<td>2</td>\n<td> </td>\n<td>\n<p>!matches('/ [^\\s]/ ',request.u_firstname)</p>\n</td>\n<td>\n<p>Please enter your first name.</p>\n</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>u_name</td>\n<td>Name</td>\n<td>3</td>\n<td> </td>\n<td>\n<p>!matches('/ [^\\s]/ ',request.u_name)</p>\n</td>\n<td>\n<p>Please enter your last name.</p>\n</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>u_street</td>\n<td>Street</td>\n<td>4</td>\n<td> </td>\n<td>\n<p>!matches('/[^\\s]/ ',request.u_street)</p>\n</td>\n<td>\n<p>Please enter your street name.</p>\n</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>u_zip</td>\n<td>Zip code</td>\n<td>5</td>\n<td> </td>\n<td>\n<p>!matches('/^\\s*\\d{5}\\s*$/ ',request.u_zip)</p>\n</td>\n<td>\n<p>Please enter your zip code.</p>\n</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>u_city</td>\n<td>City</td>\n<td>6</td>\n<td> </td>\n<td>\n<p>!matches('/[^\\s]/ ',request.u_city)</p>\n</td>\n<td>\n<p>Please enter your city name.</p>\n</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>m_0000</td>\n<td>Country</td>\n<td>7</td>\n<td> </td>\n<td>\n<p>!matches('/^[^0]/ ',request.m_0000)</p>\n</td>\n<td>\n<p>Please enter your country name.</p>\n</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>md_0001</td>\n<td>Day of birth</td>\n<td>8</td>\n<td>1</td>\n<td>\n<p>!matches('/^[^0]/ ',request.m_0001)</p>\n</td>\n<td>\n<p>Please choose your day of birth.</p>\n</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>md_0002</td>\n<td>Month of birth</td>\n<td>9</td>\n<td>1</td>\n<td>\n<p>!matches('/^[^0]/ ',request.m_0002)</p>\n</td>\n<td>\n<p>Please choose your month of birth.</p>\n</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>md_0003</td>\n<td>Year of birth</td>\n<td>10</td>\n<td>1</td>\n<td>\n<p>!matches('/^[^0]/ ',request.m_0003)</p>\n</td>\n<td>\n<p>Please choose your year of birth.</p>\n</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>u_gender</td>\n<td>Gender</td>\n<td>11</td>\n<td> </td>\n<td>\n<p>!matches('/^[12]$/ ',request.u_gender)</p>\n</td>\n<td>\n<p>Please choose your gender.</p>\n</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>u_email</td>\n<td>E-Mail Address</td>\n<td>12</td>\n<td> </td>\n<td>\n<p>!matches('/[^\\s]/ ',request.u_email)</p>\n</td>\n<td>\n<p>Please enter your email address.</p>\n</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>u_passwd</td>\n<td>Password</td>\n<td>13</td>\n<td> </td>\n<td>\n<p>!matches('/[^\\s]/ ',request.u_passwd)</p>\n</td>\n<td>\n<p>Please enter a valid password.</p>\n</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>\n<p>Ab EFS 9.1: u_sec_quest</p>\n</td>\n<td>Security question</td>\n<td>14</td>\n<td> </td>\n<td> </td>\n<td> </td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>\n<p>Ab EFS 9.1: u_sec_quest_answer</p>\n</td>\n<td>\n<p>Answer to the security question</p>\n</td>\n<td>15</td>\n<td> </td>\n<td> </td>\n<td> </td>\n<td>X</td>\n<td>X</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"special-features-of-profile-forms\" class=\"wysiwyg-text-align-justify\"><strong>Special Features of Profile Forms</strong></h2>\n<p class=\"wysiwyg-text-align-justify\">The third form type is “Profile”. If you use the community functions of the EFS Panel, you can use profile forms to specify which personal data of the panelists may be used for searches, listed in the results list, or displayed on the panelist’s profile.</p>\n<h3 id=\"configuration-options-1\" class=\"wysiwyg-text-align-justify\"><strong>Configuration Options</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">The following table contains all possible configuration options.</p>\n<table class=\"wrapped wysiwyg-text-align-justify\" style=\"margin-right: auto; margin-left: auto; height: 575px;\" border=\"1\" width=\"759\">\n<colgroup> <col style=\"width: 198.0px;\"> </colgroup> <colgroup> <col style=\"width: 624.0px;\"> </colgroup>\n<tbody>\n<tr style=\"height: 28px;\">\n<th class=\"wysiwyg-text-align-center\" style=\"width: 182.726px; height: 28px;\">Field</th>\n<th class=\"wysiwyg-text-align-center\" style=\"width: 568.976px; height: 28px;\">Description</th>\n</tr>\n<tr style=\"height: 58px;\">\n<td style=\"width: 174.705px; height: 58px;\">Website / Language version</td>\n<td style=\"width: 560.955px; height: 58px;\">\n<p>Website and language version to which the variable belongs. Cannot be changed subsequently.</p>\n</td>\n</tr>\n<tr style=\"height: 30px;\">\n<td style=\"width: 174.705px; height: 30px;\">Form name</td>\n<td style=\"width: 560.955px; height: 30px;\">\n<p>This is determined when creating the form. Cannot be changed subsequently.</p>\n</td>\n</tr>\n<tr style=\"height: 30px;\">\n<td style=\"width: 174.705px; height: 30px;\">Form type</td>\n<td style=\"width: 560.955px; height: 30px;\">\n<p>This is determined when creating the form. Cannot be changed subsequently.</p>\n</td>\n</tr>\n<tr style=\"height: 30px;\">\n<td style=\"width: 174.705px; height: 30px;\">Variable</td>\n<td style=\"width: 560.955px; height: 30px;\">\n<p>The master data item or user variable to which the form’s input field refers to.</p>\n</td>\n</tr>\n<tr style=\"height: 131px;\">\n<td style=\"width: 174.705px; height: 131px;\">Profile options</td>\n<td style=\"width: 560.955px; height: 131px;\">\n<p>There are three options.</p>\n<ul>\n<li>Field can be searched: The variable is part of the search form.</li>\n<li>The field is displayed in the profiles search results list: The variable is part of the results list.</li>\n<li>The field is displayed in the public profile: The variable is part of the profile.</li>\n</ul>\n</td>\n</tr>\n<tr style=\"height: 30px;\">\n<td style=\"width: 174.705px; height: 30px;\">Label in form</td>\n<td style=\"width: 560.955px; height: 30px;\">The text is used to label the form’s input field.</td>\n</tr>\n<tr style=\"height: 87px;\">\n<td style=\"width: 174.705px; height: 87px;\">Exclude the following codes</td>\n<td style=\"width: 560.955px; height: 87px;\">\n<p>You can hide certain answer characteristics of master data variables. To do so, enter the codes of the answer characteristics you wish to hide. The codes can be entered comma-separated or as a range (e.g. “1,2,3-10”).</p>\n</td>\n</tr>\n<tr style=\"height: 30px;\">\n<td style=\"width: 174.705px; height: 30px;\">Order</td>\n<td style=\"width: 560.955px; height: 30px;\">\n<p>Order in which the input fields for the form’s different variables are output.</p>\n</td>\n</tr>\n<tr style=\"height: 121px;\">\n<td style=\"width: 174.705px; height: 121px;\">Group ID</td>\n<td style=\"width: 560.955px; height: 121px;\">\n<p>The group ID is available in the templates and can therefore be used in many different ways, for example to group related form fields or to divide the form into different sections. If you assign the same group ID (e.g. 1) to several form fields, for example, you can output these fields next to instead of beneath each other (e.g. day, month, and year for three related date fields). In doing so you can apply the label of the first grouped element to the whole line.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"bonuses\" class=\"auto-cursor-target wysiwyg-text-align-justify\"><strong>Bonuses</strong></h1>\n<p class=\"wysiwyg-text-align-justify\">Bonus points are usually exchanged for bonuses on special pages in the password-protected, internal panel area. EFS Panel helps you present and manage bonuses:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>You can create different bonuses and sort them into self-defined categories for easy browsing.</li>\n<li>You can set the value of a bonus yourself or let the panelist enter a payment amount in a text field.</li>\n<li>In addition to conventional standard bonuses, you can also offer your panelists vouchers from affiliated companies. Optionally, voucher codes can be sent to panelists automatically.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\">Bonus payment is handled by EFS Panel’s proven bonus system.</p>\n<h2 id=\"defining-and-managing-the-assignment-of-bonuses\" class=\"wysiwyg-text-align-justify\"><strong>Defining and Managing the Assignment of Bonuses</strong></h2>\n<h3 id=\"overview-of-the-bonus-types\" class=\"wysiwyg-text-align-justify\"><strong>Overview of the Bonus Types</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">Under <strong>Website → Bonus management</strong>, you will find the types of bonuses that have already been created for the panel. Use the drop-down lists in the head section to display the desired language version.</p>\n<p class=\"wysiwyg-text-align-justify\"><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21014812914962\" alt=\"bonuses.png\"></p>\n<h3 id=\"creating-new-bonus-types\" class=\"wysiwyg-text-align-justify\"><strong>Creating New Bonus Types</strong></h3>\n<ol class=\"wysiwyg-text-align-justify\">\n<li>Click on the <strong>Create type of bonus</strong> button.</li>\n<li>Enter the required data into the form.<br><br><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21014859861650\" alt=\"create_typeofbonus_a.png\"><br><br>\n</li>\n<li>Choose the type of payment.<br><br><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21014812910226\" alt=\"create_typeofbonus_b.png\"><br><br>\n</li>\n<li>Further settings are required if you wish to create a “Voucher” bonus type:<br>\n<p>– You must choose a voucher code list and a mail template. We recommend creating these elements in advance, if possible. When doing so make sure that all elements have been assigned the suitable language version: The bonus dialog only displays lists and templates for the current language version.<br>– Optionally, you can activate automatic voucher mail dispatch.<br><br></p>\n</li>\n<li>\n<p>If you wish to make the bonus type available to the panelists online, choose the status “Active”.</p>\n</li>\n<li>\n<p>Depending on whether you have defined the payment amounts in advance or wish to leave it up to panelists to choose an amount within a certain range, you have the following options:</p>\n<p>– If it is a bonus type where panelists can determine the payment amount themselves by entering a sum in a text field, you should set a minimum and a maximum value of the payment. These are the minimum/maximum values that may be entered by panelists.<br>– If it is a bonus type with a fixed value or one for which payment amounts were selected in advance from a drop-down list, enter the payment amount(s) in the“Limits of payment” section.<br><br></p>\n</li>\n<li>Confirm by clicking on <strong>Save</strong>.</li>\n</ol>\n<h2 id=\"configuration-details\" class=\"wysiwyg-text-align-justify\"><strong>Configuration Details</strong></h2>\n<h3 id=\"bonus-properties\" class=\"wysiwyg-text-align-justify\"><strong>Bonus Properties</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">The table lists all the characteristics a bonus can have.</p>\n<table class=\"relative-table wrapped wysiwyg-text-align-justify\" style=\"width: 97.2164%; margin-right: auto; margin-left: auto; height: 1165px;\" border=\"1\">\n<colgroup> <col style=\"width: 20.1076%;\"> </colgroup> <colgroup> <col style=\"width: 17.3305%;\"> </colgroup> <colgroup> <col style=\"width: 62.5224%;\"> </colgroup>\n<tbody>\n<tr style=\"height: 22px;\">\n<th class=\"wysiwyg-text-align-center\" style=\"height: 22px;\">Field</th>\n<th class=\"wysiwyg-text-align-center\" style=\"height: 22px;\">Wildcard</th>\n<th class=\"wysiwyg-text-align-center\" style=\"height: 22px;\">Meaning</th>\n</tr>\n<tr style=\"height: 73px;\">\n<td style=\"height: 73px;\">\n<p>Website / Language version</p>\n</td>\n<td style=\"height: 73px;\"> </td>\n<td style=\"height: 73px;\">\n<p>Website and language version to which the bonus belongs. Cannot be changed subsequently.</p>\n</td>\n</tr>\n<tr style=\"height: 72px;\">\n<td style=\"height: 72px;\">Bonus category</td>\n<td style=\"height: 72px;\"> </td>\n<td style=\"height: 72px;\">\n<p>Bonus categories allow you to classify bonuses, both in the admin area and on the panel page, according to self-defined criteria.</p>\n</td>\n</tr>\n<tr style=\"height: 53px;\">\n<td style=\"height: 53px;\">Title (internal)</td>\n<td style=\"height: 53px;\"> </td>\n<td style=\"height: 53px;\">\n<p>The internal bonus title. For orientation purposes only, it will not be seen by panelists.</p>\n</td>\n</tr>\n<tr style=\"height: 44px;\">\n<td style=\"height: 44px;\">Title (on website)</td>\n<td style=\"height: 44px;\">{$s.item_title}</td>\n<td style=\"height: 44px;\">The title is displayed on the panel page.</td>\n</tr>\n<tr style=\"height: 22px;\">\n<td style=\"height: 22px;\">Description</td>\n<td style=\"height: 22px;\">\n<p>{$s.item_description}</p>\n</td>\n<td style=\"height: 22px;\">Description of the bonus.</td>\n</tr>\n<tr style=\"height: 44px;\">\n<td style=\"height: 44px;\">Description 2</td>\n<td style=\"height: 44px;\">\n<p>{$s.item_description2}</p>\n</td>\n<td style=\"height: 44px;\">Optional, additional description text.</td>\n</tr>\n<tr style=\"height: 78px;\">\n<td style=\"height: 78px;\">Image</td>\n<td style=\"height: 78px;\"> </td>\n<td style=\"height: 78px;\">\n<p>Optionally, you can use an image, such as a photo of a gift. To do so, insert an image from the media library using HTML.</p>\n</td>\n</tr>\n<tr style=\"height: 22px;\">\n<td style=\"height: 22px;\">Image 2</td>\n<td style=\"height: 22px;\"> </td>\n<td style=\"height: 22px;\">Further optional image field.</td>\n</tr>\n<tr style=\"height: 109px;\">\n<td style=\"height: 109px;\">Sort Order</td>\n<td style=\"height: 109px;\"> </td>\n<td style=\"height: 109px;\">\n<p>This field controls the order in which bonuses are listed on the panel page. If the display is limited to one bonus category, bonuses from this category will be displayed according to the order defined.</p>\n</td>\n</tr>\n<tr style=\"height: 67px;\">\n<td style=\"height: 67px;\">Manufacturer</td>\n<td style=\"height: 67px;\"> </td>\n<td style=\"height: 67px;\">\n<p>Can be used to display the bonus manufacturer on the panel page.</p>\n</td>\n</tr>\n<tr style=\"height: 138px;\">\n<td style=\"height: 138px;\">\n<p>Final description - for confirmation page after bonus points have been redeemed.</p>\n</td>\n<td style=\"height: 138px;\">{final_desc}</td>\n<td style=\"height: 138px;\">\n<p>Displayed on the confirmation page when bonus points have been redeemed.</p>\n</td>\n</tr>\n<tr style=\"height: 69px;\">\n<td style=\"height: 69px;\">Final description 2</td>\n<td style=\"height: 69px;\">{final_desc2}</td>\n<td style=\"height: 69px;\">\n<p>Can be additionally displayed on the confirmation page when bonus points have been redeemed.</p>\n</td>\n</tr>\n<tr style=\"height: 44px;\">\n<td style=\"height: 44px;\">Type of payment</td>\n<td style=\"height: 44px;\"> </td>\n<td style=\"height: 44px;\">See the following chapter.</td>\n</tr>\n<tr style=\"height: 128px;\">\n<td style=\"height: 128px;\">Status</td>\n<td style=\"height: 128px;\"> </td>\n<td style=\"height: 128px;\">\n<p>Available options are:</p>\n<ul>\n<li>Inactive</li>\n<li>Active</li>\n</ul>\n<p>Only active bonuses will be displayed.</p>\n</td>\n</tr>\n<tr style=\"height: 138px;\">\n<td style=\"height: 138px;\">\n<p>Minimum/maximum value of payment</p>\n</td>\n<td style=\"height: 138px;\"> </td>\n<td style=\"height: 138px;\">\n<p>If you wish to let the panelists enter the amount themselves in a text field, you can use these thresholds to define the range of the amount. At the same time, defining a minimum value of payment prevents panelists with fewer points from redeeming the respective bonus.</p>\n</td>\n</tr>\n<tr style=\"height: 42px;\">\n<td style=\"height: 42px;\">Limits of payment</td>\n<td style=\"height: 42px;\"> </td>\n<td style=\"height: 42px;\">\n<p>Predefined payment amounts that can be determined by the panel administrator in advance.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"wysiwyg-text-align-justify\">The following figures illustrate the position of text elements in the standard panel which were inserted using wildcards.</p>\n<h3 id=\"types-of-payment\" class=\"wysiwyg-text-align-justify\"><strong>Types of Payment</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">The following payment types are available:</p>\n<table class=\"relative-table wrapped wysiwyg-text-align-justify\" style=\"width: 96.2925%; margin-right: auto; margin-left: auto; height: 847px;\" border=\"1\">\n<colgroup> <col style=\"width: 12.8031%;\"> </colgroup> <colgroup> <col style=\"width: 55.3836%;\"> </colgroup> <colgroup> <col style=\"width: 31.7734%;\"> </colgroup>\n<tbody>\n<tr style=\"height: 57px;\">\n<th class=\"wysiwyg-text-align-center\" style=\"width: 14.6199%; height: 57px;\">Payment types</th>\n<th class=\"wysiwyg-text-align-center\" style=\"width: 53.6062%; height: 57px;\">Meaning</th>\n<th class=\"wysiwyg-text-align-center\" style=\"width: 31.5789%; height: 57px;\">\n<p>Additionally required settings</p>\n</th>\n</tr>\n<tr style=\"height: 88px;\">\n<td style=\"width: 14.6199%; height: 88px;\">Standard</td>\n<td style=\"width: 53.6062%; height: 88px;\">\n<p>The panel administrator calls up the reported payments in the admin area and processes them</p>\n</td>\n<td style=\"width: 31.5789%; height: 88px;\"> </td>\n</tr>\n<tr style=\"height: 274px;\">\n<td style=\"width: 14.6199%; height: 274px;\">Bank payment</td>\n<td style=\"width: 53.6062%; height: 274px;\">\n<p>This function allows you to use the EFS Panel bonus system for the handling of bank payments. The panelists enter their bank details using specially configured forms. The panel administrator calls up the reported bonus requests in the admin area to process them, usually by payment into a bank account.</p>\n</td>\n<td style=\"width: 31.5789%; height: 274px;\">\n<ul>\n<li>Configure appropriate options in the \"Bonus list and redemption\" function module.</li>\n<li>Optional: Activate the saving of bank details</li>\n<li>Optional: Create master data for saving of bank details</li>\n<li>Form configuration.</li>\n</ul>\n</td>\n</tr>\n<tr style=\"height: 364px;\">\n<td style=\"width: 14.6199%; height: 364px;\">Voucher</td>\n<td style=\"width: 53.6062%; height: 364px;\">\n<p>Sending of vouchers with individual code</p>\n<p>With vouchers there are no defined limits on payment, instead, the amount is set by assigning a voucher code list.</p>\n<p>Please note: Bonuses of the type “voucher” will only be shown in the bonus list as long as unused vouchers exist. As soon as the existing vouchers are used, the bonus will no longer be offered. Though only vouchers paid out by the administrator will be regarded as “used”, vouchers requested by panelists but still not paid out are regarded as “unused”. More vouchers may be requested than are available because requests for all remaining vouchers have been made, but these have been not processed by the administrator yet.</p>\n</td>\n<td style=\"width: 31.5789%; height: 364px;\">\n<ul>\n<li>Configure appropriate options in the \"Bonus list and redemption\" function module.</li>\n<li>Voucher code list</li>\n<li>Mail template of the type “Voucher mail” for the respective language version.</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"wysiwyg-text-align-justify\">The panelists can only choose one of these types of payment respectively. The error message which is output when combining different types of payment can be edited using the identifier “msg_different_payment_type”. Furthermore, with vouchers only one payment respectively can be requested with each redeeming process.</p>\n<h3 id=\"defining-and-limiting-amounts-for-payment\" class=\"wysiwyg-text-align-justify\"><strong>Defining and Limiting Amounts for Payment</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">For the “Standard” type of payment, there are two ways of defining payment amounts:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>The panelists can enter the desired amount themselves in a text field.</li>\n<li>Predefined payment amounts, the so-called limits of payment, can be determined by the panel administrator in advance.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\"><strong>Panelists enter the desired amount in a text field</strong></p>\n<p class=\"wysiwyg-text-align-justify\">If you leave the “Limits of payment” field empty when creating a new bonus, a text field will be displayed on the “Redeem points” page. In this field, panelists can freely enter the number of points to be redeemed.</p>\n<p class=\"wysiwyg-text-align-justify\">If you wish to limit the amount redeemable, use the “Minimum value of payment” and “Maximum value of payment” fields. At the same time, the minimum value of payment prevents panelists with fewer points from redeeming the respective bonus.</p>\n<p class=\"wysiwyg-text-align-justify\"><strong>Panelists select predefined amounts</strong></p>\n<p class=\"wysiwyg-text-align-justify\">If at least one limit of payment is defined, fixed, unchangeable text will be output in the form. If only one limit has been defined, it is a continuous text. If more than one limit for payment has been defined, these can be selected from drop-down lists.</p>\n<p class=\"wysiwyg-text-align-justify\">Limits of payment are defined as follows:</p>\n<ol class=\"wysiwyg-text-align-justify\">\n<li>Enter the number of<em> required panel points</em> into the “Amount” column.</li>\n<li>In the “Display” column you can enter the value as it will be seen by the panelists, i.e. for example with the name of the points or in a currency.</li>\n<li>After that, confirm by clicking on <strong>Save</strong>.</li>\n</ol>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>If you wish to ensure that only those panelists who have a certain minimum number of points can redeem bonuses, you can do so in the “Bonus list and redemption” function module for the respective panel page: Enter the desired threshold in the “Minimum number of points for redeeming bonuses” field.</p>\n<p class=\"wysiwyg-text-align-justify\">Please note that panelists with fewer points will then generally not be able to use the respective bonus list: No differentiation is made between new panelists and panelists who had a higher number of points in the past, but who have redeemed points in the meantime.</p>\n<h2 id=\"handling-of-bank-payments\" class=\"wysiwyg-text-align-justify\"><strong>Handling of Bank Payments</strong></h2>\n<p class=\"wysiwyg-text-align-justify\">You can use the EFS Panel bonus system for the handling of bank payments. The bank details of the panelists need not be stored on a long-term basis (e.g. via provision upon registration and subsequent storage as part of the master data), rather they are collected in the course of the payment process.</p>\n<p class=\"wysiwyg-text-align-justify\">EFS offers the following design options:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>Various combinations of the following bank details can be used: account holder, SWIFT code, IBAN, bank code, and account number.</li>\n<li>You can define your own Regex checks to validate bank code and account number.</li>\n<li>Optionally, you can store the bank details entered by the panelists in selected master data and use them to prefill the forms in future payment processes.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\"><strong>Example</strong></p>\n<p class=\"wysiwyg-text-align-justify\">The payment process works as follows:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>The bonuses of the “bank payment” type are listed with all the other bonuses on the bonus redemption page.</li>\n<li>If the panelist chooses a bank payment bonus, he will then be asked to enter his bank details in a specially configured form.</li>\n<li>The administrator then processes the bank payment requests in the <strong>People → Incentive management → Bonus system → Payment lis</strong>t menu in just the same way as other bonuses.</li>\n</ul>\n<h3 id=\"work-steps\" class=\"wysiwyg-text-align-justify\"><strong>Work Steps</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">To create a bank payment, please proceed as follows:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>Create a bonus of the “bank payment” type for the desired language version as described in Chapter 24.1.2, S. 485. Select “Bank payment” as the payment type. As with other bonuses, there will be a free entry field displayed on the panel page if no limits on payment have been defined. If you do define payment limits, these will be displayed in a drop-down list.</li>\n<li>Use the “Bonus list and redemption” function module to create a page for the redemption of bonuses. If such a page already exists in the desired language version of your panel, then the new bonus will be displayed there automatically once it has been activated.</li>\n<li>Configure the options dedicated to bank payment in the “Bonus list and redemption” function module.</li>\n<li>If you want to store the entered details and use them to prefill the form for future payments, you need to activate the option “Store entered data for bank payments in selected master data variables and use master data variables for preselection” in the “Bonus list and redemption” function module. Create appropriate master data (data type: text) and select these from the drop-down lists in the field “The following fields should be displayed for bank payments”.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>Authentification for PayPal is frequently handled via the e-mail address. In panels that were set up with EFS 8.1 or later, you can realize this based on the account holder field: it allows to storage of up to 100 characters.</p>\n<h2 id=\"sending-vouchers\" class=\"wysiwyg-text-align-justify\"><strong>Sending Vouchers</strong></h2>\n<p class=\"wysiwyg-text-align-justify\">The EFS Panel bonus administration supports the use of voucher codes. With this method, you purchase a list of voucher codes from your partner, for example, an online shop. You forward these by e-mail to your panelists and the panelists redeem the voucher codes at the partner business.</p>\n<p class=\"wysiwyg-text-align-justify\">To manage the voucher lists of your panel, go to the Website-&gt;Bonus management menu and click on the Voucher code lists button. Use the drop-down lists in the head section to display the desired language version.</p>\n<h3 id=\"creating-a-voucher-code-list\" class=\"wysiwyg-text-align-justify\"><strong>Creating a Voucher Code List</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">Normally you receive lists from your partner, which respectively contain voucher codes for a particular amount of money. For each of these lists, create a corresponding list in EFS:</p>\n<ol class=\"wysiwyg-text-align-justify\">\n<li>Ensure that the website and language version have been correctly configured.</li>\n<li>Click on the <strong>Create voucher code list</strong> button.</li>\n<li>\n<p>Enter the title.</p>\n</li>\n<li>\n<p>Set the number of bonus points that the voucher code of the list will have.</p>\n</li>\n<li>\n<p>Optionally, you can enter a description. Using the wildcard #description#, you can later insert this description into the voucher mail. Please note that you cannot edit this text at a later date. It is also not possible to enter translations into several languages.</p>\n</li>\n<li>\n<p>Confirm by clicking on <strong>Save</strong>.</p>\n</li>\n</ol>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>The value of bonuses of the “voucher” payment type is defined by assigning a voucher code list with a pre-set amount. Limits on payments cannot be used with the “voucher” payment type.</p>\n<h3 id=\"preparing-voucher-codes-for-import\" class=\"wysiwyg-text-align-justify\"><strong>Preparing Voucher Codes for Import</strong></h3>\n<ol class=\"wysiwyg-text-align-justify\">\n<li>For importing you need a list of the voucher codes in the CSV or XLS format. The file is only allowed to have one column in which the codes are listed.<br><br><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21014812909330\" alt=\"excel_vouchers.png\">\n</li>\n</ol>\n<h3 id=\"importing-voucher-codes\" class=\"wysiwyg-text-align-justify\"><strong>Importing Voucher Codes</strong></h3>\n<ol class=\"wysiwyg-text-align-justify\">\n<li>Choose either the title or the icon in the overview.</li>\n<li>Click on the button<strong> Import voucher codes into the voucher code list</strong>.</li>\n<li>Choose the character set and look for the list on your hard drive.</li>\n<li>Trigger the import function by clicking on <strong>Send</strong>.</li>\n<li>\n<p>After carrying out the import you can see the vouchers in the overview table.</p>\n</li>\n<li>\n<p>You can import the vouchers in blocks, i.e. if a list is almost empty, you can import new vouchers. It isn’t necessary to set up a new list for every import operation.</p>\n</li>\n</ol>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>The voucher codes that are imported into a list must be unique If a code is used twice in the import list or someone tries again to import a code that has already been imported an error message will be the result.</p>\n<h3 id=\"preparing-mail-templates-for-sending-vouchers\" class=\"wysiwyg-text-align-justify\"><strong>Preparing Mail Templates for Sending Vouchers</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">A special mail template of the type “Voucher mail” is used to dispatch voucher codes.</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>If you use voucher codes, you need at least one such mail template for every panel site. When setting this up, follow the instructions in “EFS Survey”.</li>\n<li>You can use the standard mail wildcards for panel projects. These wildcards are particularly important:<br><br>– #code#: is filled with the voucher code. This wildcard must be used.<br>– #amount#: can be inserted to output the value of the voucher in normal currency.<br><br>\n</li>\n<li>The desired mail template is set when configuring a bonus.</li>\n</ul>\n<h3 id=\"issuing-vouchers\" class=\"wysiwyg-text-align-justify\"><strong>Issuing Vouchers</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">Requested vouchers can be issued in the <strong>People → Incentive management → Bonus system → Issuing of vouchers</strong> menu. (Exception: where automatic dispatch has been activated, see following chapter)</p>\n<p class=\"wysiwyg-text-align-justify\"><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21014812907154\" alt=\"issue_vouchers.png\"></p>\n<ol class=\"wysiwyg-text-align-justify\">\n<li>Select the panelists whose voucher you would like to issue.</li>\n<li>Pay attention that the required vouchers are available: the number is listed in the column “Available”.</li>\n<li>Use the<strong> Preview</strong> icon to view the voucher mail.</li>\n<li>Confirm by clicking on <strong>Execute</strong>.</li>\n<li>Dispatching of e-mails with the vouchers is done automatically.</li>\n</ol>\n<p class=\"wysiwyg-text-align-justify\">You can check in the panelist’s detail view, whether the e-mail was sent. To do so, click on the <strong>Contact history</strong> button on the <strong>Contacts</strong> tab: The sought-after e-mail can be found in the “system mail” section.</p>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>A panelist has lost the voucher mail and you want to send the voucher code again? Navigate to the <strong>People → Incentive management → Bonus system → Payment list</strong> menu and click on the <strong>Detail view</strong> button. In the table, you can find the dispatched codes.</p>\n<h3 id=\"sending-vouchers-automatically\" class=\"wysiwyg-text-align-justify\"><strong>Sending Vouchers Automatically</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">Optionally, you can have vouchers automatically issued by the system. This feature reduces your and your colleagues’ workload. However, it also means that voucher requests are no longer monitored by humans. You should therefore weigh up how high the risk of abuse is for your panel. If you choose to use this feature, test the configuration very carefully before activating it and regularly check the accuracy of payments made.</p>\n<p class=\"wysiwyg-text-align-justify\">To activate automatic dispatch, click on the “Automatically send voucher confirmation mail” checkbox when creating the bonus type.</p>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>The option <strong>Offer vouchers only from lists that still have unused voucher codes</strong> in the <strong>BONUS LIST AND REDEMPTION</strong> module is activated by default. If all vouchers of a list have already been redeemed, the bonus types using this voucher list will no longer be displayed. However, if the option is not activated, these bonus types will continue to be displayed and panelists can still redeem their points. In this case, however, the automatic dispatch of the voucher is not triggered. Instead, the redeemed voucher is displayed in the <strong>People</strong> module under <strong>Incentive management &gt; Bonus system &gt; Issuing of vouchers</strong> – just as if no automatic voucher dispatch had been configured. A red traffic light symbol and the number 0 are displayed in the <strong>Available</strong> column indicating that the voucher cannot be issued. The <strong>Encash</strong> action will only be available again once you upload new voucher codes.</p>\n<p class=\"wysiwyg-text-align-justify\"> </p>\n<h3 id=\"managing-voucher-code-lists\" class=\"wysiwyg-text-align-justify\"><strong>Managing Voucher Code Lists</strong></h3>\n<p class=\"wysiwyg-text-align-justify\"><strong>Monitoring voucher usage</strong></p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>When paying out requested vouchers in the<strong> People → Incentive management → Bonus system → Issuing of vouchers</strong> menu, you can find the number of codes that are still usable in the column “Available”.</li>\n<li>The overview in the<strong> Manage voucher code</strong> dialog (see above) lists the complete set and the number of used and unused vouchers for every list.</li>\n<li>In the detail view of a voucher list (<strong>Manage voucher code lists -&gt;{Selected list}</strong>) the usage status will be listed for every single voucher.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\"><strong>Filling out a voucher code list</strong></p>\n<p class=\"wysiwyg-text-align-justify\">You can use the import function described above to refill codes.</p>\n<p class=\"wysiwyg-text-align-justify\"><strong>Deleting vouchers that have not been used</strong></p>\n<p class=\"wysiwyg-text-align-justify\">Using the detail view of the voucher lists (<strong>Manage voucher code lists-&gt;{Selected list}</strong>) you can delete used vouchers:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>Deleting a single unused voucher from a list: Mark the voucher to be deleted. Set the drop-down list to “delete” and confirm by clicking on <strong>Execute</strong>.</li>\n<li>\n<p>Deleting all unused vouchers from a list: Select the status “unused” in the <strong>Extended search</strong>. Trigger the search and mark “all found”. Set the drop-down list to “delete” and confirm by clicking on <strong>Execute</strong>.</p>\n</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>Codes that have been used cannot be deleted.</p>\n<p class=\"wysiwyg-text-align-justify\"><strong>Deleting an unused voucher code list</strong></p>\n<p class=\"wysiwyg-text-align-justify\">Look for the desired list in the Manage voucher code lists menu and confirm by clicking on the Delete button.</p>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>Voucher code lists can only be deleted as long as the codes contained in them are still unused. As soon as one or more codes are used, the list can no longer be deleted.</p>\n<h2 id=\"categorizing-bonuses\" class=\"wysiwyg-text-align-justify\"><strong>Categorizing Bonuses</strong></h2>\n<p class=\"wysiwyg-text-align-justify\">Bonus categories allow you to classify bonuses, both in the admin area and on the panel page, according to self-defined criteria, thus improving usability.</p>\n<p class=\"wysiwyg-text-align-justify\"><strong>The list of categories</strong></p>\n<p class=\"wysiwyg-text-align-justify\">To manage the bonus categories of your panel, go to the <strong>Website → Bonus management</strong> menu and click on the <strong>Bonus categories</strong> button. Use the drop-down lists in the head section to display the desired language version.</p>\n<p class=\"wysiwyg-text-align-justify\">The overview lists all existing bonus categories for the currently selected language version, each with a sort number and title.</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>You can browse the list.</li>\n<li>If you want to view bonus categories of another language version in a given installation with several websites and/or language versions, simply change the settings in the upper section of the dialog.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\">The icons in the “Actions” column provide you with the following editing options:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>\n<strong>Edit</strong>: You can change the title and description of a bonus category.</li>\n<li>\n<strong>Delete</strong>: If you click on the icon and confirm the pop-up message that follows, the respective category will be removed.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\"><strong>Creating a new bonus category</strong></p>\n<ol class=\"wysiwyg-text-align-justify\">\n<li>Ensure that the website and language version have been correctly configured.</li>\n<li>Click on the <strong>Create bonus category</strong> button.</li>\n<li>Enter the title.</li>\n<li>Enter the sort number in the sequence of bonus categories.</li>\n<li>Confirm your entries by clicking on <strong>Save</strong>.</li>\n</ol>\n<p class=\"wysiwyg-text-align-justify\"><strong>Assigning bonuses to categories and changing assignments</strong></p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>When setting up new bonuses you can select the appropriate category from the “Bonus Category” drop-down list.</li>\n<li>To change the category for an existing bonus, search for the bonus in the bonus list under <strong>Website → Bonus management → {Selected language version}</strong>, then open the edit dialog and change the selection in the “Bonus category” drop-down list.</li>\n</ul>\n<h1 id=\"working-with-smarty-templates\" class=\"wysiwyg-text-align-justify\"><strong>Working with Smarty Templates</strong></h1>\n<p class=\"wysiwyg-text-align-justify\">Templates control how data supplied by the modules are processed and output on panel pages. The present and following chapters describe the Smarty templates used in EFS:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>The Smarty template engine is presented.</li>\n<li>Features, tools, and auxiliary tools for editing Smarty templates in the website editor are explained.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>Please note: No or very little knowledge of HTML was required for the operations introduced in previous chapters of this manual, such as creating new panel pages or maintaining news. However, advanced programming skills are a prerequisite for working with Smarty templates and other technologies available in the website editor, such as CSS, JavaScript, and mootools.</p>\n<h2 id=\"the-smarty-template-engine\" class=\"auto-cursor-target wysiwyg-text-align-justify\"><strong>The Smarty Template Engine</strong></h2>\n<p class=\"auto-cursor-target wysiwyg-text-align-justify\">The templates of the CMS are based on the Smarty template engine. Smarty is a proven template engine, which has been successfully used in EFS Survey for many years now. If you are familiar with the EFS Survey questionnaire layout, you will therefore find it easy to work with the CMS templates.</p>\n<p class=\"auto-cursor-target wysiwyg-text-align-justify\">Please refer to <a href=\"http://www.smarty.net\">http://www.smarty.net</a> for detailed information on Smarty.</p>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>Please note: The CMS and questionnaire layouts in the EFS Survey are based on the same technology. However, it is not possible to import EFS Survey layout templates into the CMS.</p>\n<h2 id=\"working-with-templates\" class=\"wysiwyg-text-align-justify\"><strong>Working with Templates</strong></h2>\n<p class=\"wysiwyg-text-align-justify\">The “main_default” template is an example of a main template that is responsible for the overall structure of an individual panel page or all pages. In the standard panel, it defines the general structure of the panel pages.</p>\n<p class=\"wysiwyg-text-align-justify\">By inserting include commands and wildcards in the main template, various other templates are integrated into this general structure. For a normal panel page e.g. the “Contact Us” page the following elements are integrated, among others:</p>\n<ol class=\"wysiwyg-text-align-justify\">\n<li>Language selection: The “tpl_language_selection” template. This field is only displayed for websites with several language versions.</li>\n<li>Subnavigation: The “tpl_subnav” template.</li>\n<li>Navigation: The “tpl_navigation” template. Depending on whether or not the viewer is logged in, this area contains different functions, which in turn are defined by two different templates.</li>\n<li>Messages: The “tpl_error_messages” template.</li>\n<li>Login: The “tpl_login_in” and “tpl_login_out” templates for logged-in panelists and visitors who are not logged in.</li>\n<li>Breadcrumb: The “tpl_breadcrumb” template.</li>\n<li>\n<p>Actual content area: This is filled for each page with the help of content and function modules.</p>\n</li>\n<li>\n<p>Social bookmarks bar: Template “tpl_bookmarks”. (Social bookmarking is the collective indexing of web pages and other online resources.)</p>\n</li>\n</ol>\n<h2 id=\"managing-templates\" class=\"wysiwyg-text-align-justify\"><strong>Managing Templates</strong></h2>\n<h3 id=\"template-overview\" class=\"wysiwyg-text-align-justify\"><strong>Template Overview</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">A language version’s templates are located in the “Templates” tab in the tree view in the menu <strong>Website → Website editor</strong>.</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>The “Templates” tree view shows all templates and system templates.</li>\n<li>The<strong> Lock</strong> icon indicates the respective publishing status.</li>\n<li>The i icon allows you to access detailed information (template name, file name, size, usage, status). The column “Usage” shows how often and on which pages the respective template is used. It considers integration as the main template, positioning template, or page module template. Integration via Smarty includes commands that cannot be considered, though.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\">The following actions are available:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>The <strong>+ Template</strong> button opens the dialog where you can enter the data for a new template.</li>\n<li>\n<p>Clicking on a template opens its content in the editor.</p>\n</li>\n<li>\n<p><strong>Copy template</strong>: The template is copied, and a new template name has to be entered. </p>\n</li>\n<li>\n<p><strong>Delete template</strong>: The template will be deleted following a confirmation prompt.</p>\n</li>\n<li>\n<p><strong>Save</strong>: Saves the template. It is subsequently available in the working version. Please note: In the publicly accessible version, the template is only available once it has been<em> published</em>.</p>\n</li>\n<li>\n<p><strong>Save &amp; Publish</strong>: The template is published. This means it is not only available in the working version but also in the online version.</p>\n</li>\n</ul>\n<h3 id=\"categorizing-templates\" class=\"wysiwyg-text-align-justify\"><strong>Categorizing Templates</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">Smarty templates are categorized by the task they perform: This categorization allows the dynamic sorting or shortening of long lists of templates when it is clear which type will be required for a certain task. For example, when selecting positioning templates only general and positioning templates will be displayed. This makes it easier to find what you are looking for when working with panels where the website editor contains numerous templates.</p>\n<p class=\"wysiwyg-text-align-justify\">Categorizing is performed manually, the names of the templates are not relevant. In the standard panel, the template nomenclature is based on the categories to make the structure transparent. However, you do not have to adopt this approach.</p>\n<p class=\"wysiwyg-text-align-justify\"><strong>Categories</strong></p>\n<p class=\"wysiwyg-text-align-justify\">The following categories are used:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>Main templates: Templates responsible for the general page structure.<br>– In the standard panel, the names of these templates start with “main_”.</li>\n<li>Global templates: These templates usually control overall layout components, such as login or navigation. They are incorporated in a main template.<br>– In the standard panel, the names of these templates start with “tpl_”.</li>\n<li>Templates for function modules: Templates linked to function modules.<br>– In the standard panel, the names of these templates start with “func_”.<br>– Function module and template are linked on the <strong>Edit page</strong> tab in the “Module template” field of the desired module.</li>\n<li>Templates for content modules: Templates linked to content modules.<br>– In the standard panel, the names of these templates start with “cont_”.<br>– Content module and template are also linked on the <strong>Edit page</strong> tab in the</li>\n<li>“Module template” field of the desired module.</li>\n<li>Positioning templates: If several content modules are placed on a panel page, the contents are listed beneath each other, by default. With the help of positioning templates, however, you can create a different segmentation. On the standard panel homepage, for example, three text columns – each filled using a separate content module – are output next to each other with the help of a positioning template.<br>– In the standard panel, the names of these templates start with “pos_”.<br>– The positioning template and panel page are linked in the edit dialog of the respective page on the <strong>Page configuration</strong> tab.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\"><strong>Assigning Categories</strong></p>\n<p class=\"wysiwyg-text-align-justify\">The drop-down list for assigning a template to a certain category is located on the editing page of the template in the „Template category“ field.</p>\n<h2 id=\"editing-templates\" class=\"wysiwyg-text-align-justify\"><strong>Editing Templates</strong></h2>\n<h3 id=\"the-edit-dialog-and-its-features-in-overview\" class=\"wysiwyg-text-align-justify\"><strong>The Edit Dialog and its Features in Overview</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">Open any template, for example, the simply structured “cont_headline_text” template that is linked to the “Headline and text” content module.</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>In the head section, you can find the template name. This is the name shown in the tree view, for example. From EFS 10.4, it is identical to the file name. When you create a new template, the name is put together from the user-defined template name and the suffix “.tpl”. It should not contain special characters or blank spaces. It is not possible to change the name.</li>\n<li>The dialog’s main component is the source code input field. From EFS 10.4, a new comfortable editor is available. The editor is activated and deactivated in the <strong>Options → Personal preferences</strong> menu via the “Use editor with syntax highlighting for templates” function on the<strong> Panel</strong> tab.</li>\n<li>On the History tab, you can view previous versions, compare two particular versions, or reset a broken template to an earlier, functioning version.</li>\n</ul>\n<h2 id=\"working-with-includes\" class=\"wysiwyg-text-align-justify\"><strong>Working with Includes</strong></h2>\n<p class=\"wysiwyg-text-align-justify\">Includes are files that are incorporated in templates with the help of HTML. They contain CSS definitions for the layout or provide functionalities, for example.</p>\n<p class=\"wysiwyg-text-align-justify\"><strong>Examples included in the standard panel</strong></p>\n<p class=\"wysiwyg-text-align-justify\">There are two types of includes: CSS and JavaScript. In the standard panel, the following files are available in the website editor’s “Includes” folder, among others:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>“CSS” type:<br>– css_default: CSS file primarily responsible for the layout in the standard panel.</li>\n<li>“JavaScript” type:<br>– js_default: Provides various JavaScript functions.<br>– several mootools include: mootools is a JavaScript library that provides various functions, classes, and methods. In the standard panel, mootools provides the show and hide functions and the mouse-over effects in the navigation, for example. See <a href=\"http://www.mootools.net/\">http://www.mootools.net/</a>, for example, for further information.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>Please note: Smarty, CSS, JavaScript, etc. are common web technologies that we merely provide.</p>\n<h3 id=\"managing-includes\" class=\"wysiwyg-text-align-justify\"><strong>Managing Includes</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">You will find the includes of a language version on the “Includes” tab in the tree view in the <strong>Website → Website editor</strong> menu.</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>All includes and system includes are shown.</li>\n<li>Clicking on an include opens its content in the editor.</li>\n<li>The <strong>Lock</strong> icon indicates the respective publishing status.</li>\n<li>The<strong> i</strong> icon allows you to access the file name.</li>\n<li>The actions for editing the included in the overview are identical to the actions for editing the templates.</li>\n</ul>\n<h3 id=\"css-based-layout-design\" class=\"wysiwyg-text-align-justify\"><strong>CSS-Based Layout Design</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">You can use CSS classes to control layout properties for the entire panel. For example, you do not need to make changes manually to the font color in each module or template but can change the appearance of the entire external view by making a one-time change to the respective style sheet template.</p>\n<p class=\"wysiwyg-text-align-justify\">When delivered, the CSS file “css_default” is primarily responsible for the standard panel’s layout. You can use this CSS file to perform the following operations:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>Changing properties of CSS classes.</li>\n<li>Using existing replacement rules to output status-dependent views.</li>\n<li>Defining new CSS classes.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\">You can use “css_custom” to overwrite it or create additional CSS files as necessary.</p>\n<p class=\"wysiwyg-text-align-justify\">If you set up several websites and/or language versions, each version will have its own CSS file(s).</p>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>The “Web Developer” Extension for Firefox provides you with support with your practical work with style sheets and can be downloaded at <a href=\"https://addons.mozilla.org/de/firefox/addon/web-developer/\">https://addons.mozilla.org/de/firefox/addon/web-developer/</a>.</p>\n<h2 id=\"benefiting-automatically-from-improvements\" class=\"wysiwyg-text-align-justify\"><strong>Benefiting Automatically From Improvements</strong></h2>\n<p class=\"wysiwyg-text-align-justify\">Since EFS 8.2, manual corrections of templates and includes after website upgrades and updates are rendered almost completely superfluous thanks to system or default files. These are non-editable templates and include those that are updated automatically during normal installation updates and upgrades.</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>These system files allow you and your web designers to access the latest status of CMS development. Thus, in the long run, the system files will replace the template library.</li>\n<li>In new panels, TIVIAN may integrate some of these system files directly, if e.g. the layout stays close to the standard panel. This will reduce the effort for manual modifications when updating or upgrading the installation.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\">In principle, the system templates can be used for the same purposes as the familiar normal templates.</p>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>EFS Panel-driven panels show wide variations in terms of appearance and function.</p>\n<p class=\"wysiwyg-text-align-justify\">- The system files mirror the functional scope and structure of an up-to-date standard panel.</p>\n<p class=\"wysiwyg-text-align-justify\">- To find out if and how time and effort can be saved by using system templates in your existing panel, please get in touch with the support.</p>\n<p class=\"wysiwyg-text-align-justify\">The most important characteristics of system files in brief:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>System files cannot be modified by users.</li>\n<li>They are automatically added and updated during normal installation updates and upgrades. I.e. their structure may change due to these updates.</li>\n<li>System files are labeled with (DEFAULT).</li>\n<li>There’s only one version of each system file.<br>– There is no difference between the working version and the online version.<br>– System files do not have a versioning history, i.e. the History tab is deactivated.</li>\n<li>If a “normal” template and a system template share the same name, e.g. foo.tpl and foo.tpl (DEFAULT), EFS will assume that the “normal” template was created intentionally and that it is to be preferred. In consequence, if you select the system template foo.tpl (DEFAULT) in the drop-down list of a module, EFS will use the “normal” template foo.tpl.</li>\n<li>The search for templates and includes can be restricted to the familiar user-defined contents or system contents.</li>\n</ul>\n<h3 id=\"template-library\" class=\"wysiwyg-text-align-justify\"><strong>Template Library</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">Before the introduction of system files, the template library was used to distribute new templates or sample code. It contains simplified versions or various function templates (i.e. without CSS classes, for example) until EFS 8.2.</p>\n<p class=\"wysiwyg-text-align-justify\">Clicking on the <strong>Open template library</strong> button in the edit dialog opens a pop-up where you can select the desired target EFS version and the desired template. The template is displayed and you can copy the content into the input field of a new template for further editing.</p>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>Thanks to the introduction of the system files, the template library is now superfluous. Therefore it will be dropped in EFS 10.4.</p>\n<h2 id=\"troubleshooting\" class=\"wysiwyg-text-align-justify\"><strong>Troubleshooting</strong></h2>\n<h3 id=\"viewing-and-undoing-changes\" class=\"wysiwyg-text-align-justify\"><strong>Viewing and Undoing Changes</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">The website editor has a versioning system for templates and includes. This means that you can, for example, view previous versions, compare two particular versions, or reset a broken template to an earlier, functioning version.</p>\n<p class=\"wysiwyg-text-align-justify\"><strong>Viewing the change history</strong></p>\n<p class=\"wysiwyg-text-align-justify\">To access the versioning system, open the desired template or include and switch to the<strong> History</strong> tab. It contains a list of all changes saved so far, including revision ID, date, and author.</p>\n<p class=\"wysiwyg-text-align-justify\"><img src=\"https://discoverxi-supportdesk.zendesk.com/hc/article_attachments/21014812905874\" alt=\"templates_history.png\"></p>\n<p class=\"wysiwyg-text-align-justify\"><strong>Comparing and resetting versions</strong></p>\n<p class=\"wysiwyg-text-align-justify\">The following actions can be executed using the icons:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>View: Opens the selected version of the template or include.</li>\n<li>Compare with current version: Displays a comparison of the selected and the current version. (The revision ID in the header tells you which versions are being compared.)</li>\n<li>Rollback: Resets the current version to the status of the selected version. This change is performed in the working version only, it is not published automatically.</li>\n<li>Compare with previous version: Displays a comparison of the selected and the next oldest version. (The revision ID in the header tells you which versions are being compared.)</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em>The history contains the twenty most recent changes made to the respective template or included.</p>\n<h3 id=\"debugging\" class=\"wysiwyg-text-align-justify\"><strong>Debugging</strong></h3>\n<p class=\"wysiwyg-text-align-justify\">You can have different debug information displayed below the proper panel pages, such as the current character set or a panelist’s language version. Furthermore, a Smarty debugging console is available. It contains an overview of all the wildcards that can be used on the respective page.</p>\n<p class=\"wysiwyg-text-align-justify\">With EFS 10.3, a new, more comfortable console has been introduced:</p>\n<ul class=\"wysiwyg-text-align-justify\">\n<li>It is not opened automatically anymore each time you click on the panel page, but only upon explicit request.</li>\n<li>The smarty objects can be expanded and collapsed.</li>\n<li>Clicking on a node copies the variable into the clipboard.</li>\n</ul>\n<p class=\"wysiwyg-text-align-justify\">If you wish to use these functions, please proceed as follows:</p>\n<ol class=\"wysiwyg-text-align-justify\">\n<li>The debug functions are activated under <strong>Website → {Selected language version}</strong> on the<strong> Debugging</strong> tab in the field “Show debug information on the website”.</li>\n<li>To make sure that the debug mode will not be inadvertently activated for all panelists, the debug function has to be limited to an explicit address range. To do so, enter the desired IP addresses in the field “IP address range”. To have your IP address available at all times, it is also displayed there.</li>\n<li>Optionally, you can also enforce authentication with a combination of username and password. To do so, enter the desired user name and password into the fields “HTTP authentication (user)” and “HTTP authentication (password)”.</li>\n<li>To make the Smarty debugging console available (Figure 25.4), in addition to the settings described above, the main template must contain the command {debug}. This is the case in newly set up standard panels. If the console does not open automatically in your installation, please check whether the command is available. In a newly up panel, you will usually find the following line at the end of the main template “main_default”:<br><code>{debug} {* debugging *}</code>\n</li>\n</ol>\n<p class=\"wysiwyg-text-align-justify\"><em>Information: </em><strong>Please note:</strong> If you activate the debug function in the online version of the panel site for the entire possible address range,<em> the Smarty debugging console will be visible to all visitors to the panel</em>. This means that the visitors may use it to obtain technical information that might be abused. You should therefore activate the debug function only for your own IP and/or within your working version and immediately deactivate it after you have completed your work.</p>\n<p class=\"auto-cursor-target wysiwyg-text-align-justify\"> </p>\n<h1 id=\"h_01HGKSMPRSER9ENY5QWWRZZ863\" class=\"wysiwyg-text-align-justify\">FAQ</h1>\n<h3 id=\"h_01HGKSMPRVM3YJQX3YJXQX3Z7\" class=\"wysiwyg-text-align-justify\">How can I customize the registration form for my panel?</h3>\n<p class=\"wysiwyg-text-align-justify\">You can customize the registration form by creating a new form in the Forms menu, selecting the \"Registration\" form type, and configuring the desired variables and their properties.</p>\n<h3 id=\"h_01HGKSMPRVM3YJQX3YJXQX3Z9\" class=\"wysiwyg-text-align-justify\">Can I offer different types of bonuses to my panelists?</h3>\n<p class=\"wysiwyg-text-align-justify\">Yes, the EFS Panel allows you to create various types of bonuses, including standard bonuses with fixed or variable amounts, and voucher-based bonuses with unique codes.</p>\n<h3 id=\"h_01HGKSMPRVM3YJQX3YJXQX3ZB\" class=\"wysiwyg-text-align-justify\">How do I modify the appearance of my panel pages?</h3>\n<p class=\"wysiwyg-text-align-justify\">You can modify the appearance of your panel pages by editing the Smarty templates and CSS included in the Website editor. This allows you to customize the layout, styling, and functionality of your pages.</p>",
    "user_segment_ids": []
}